{"version":3,"sources":["../src/util/isNode.ts","../src/util/browser.ts","../src/util/isString.ts","../src/core/EventEmitter.ts","../src/matrix/GLMatrix.ts","../src/matrix/Mat3.ts","../src/matrix/Vec3.ts","../src/matrix/Quat.ts","../src/matrix/Mat4.ts","../src/matrix/Vec2.ts","../src/matrix/Vec4.ts","../src/util/fixed.ts","../src/util/physical.ts","../src/util/epsilon.ts","../src/core/GeodeticCoordinate.ts","../src/core/Ellipsoid.ts","../src/core/Projection.ts","../src/globe/Globe.ts","../src/core/Ray.ts","../src/camera/PerspectiveCamera.ts","../src/globe/Globe.Camera.ts","../src/util/split.ts","../src/util/dom.ts","../src/util/now.ts","../src/globe/Globe.Handler.ts","../src/core/QuadtreeTile.ts","../src/core/Rectangle.ts","../src/core/QuadtreeTileSchema.ts","../src/globe/Globe.Quadtree.ts","../node_modules/pipegl/src/pool/BufferPool.ts","../node_modules/pipegl/src/core/Constant.ts","../node_modules/pipegl/src/core/Limit.ts","../node_modules/pipegl/src/util/check.ts","../node_modules/pipegl/src/util/getIdx.ts","../node_modules/pipegl/src/core/Dispose.ts","../node_modules/pipegl/src/res/GTexture.ts","../node_modules/pipegl/src/util/getFlatten.ts","../node_modules/pipegl/src/util/isNDArray.ts","../node_modules/pipegl/src/res/GFramebuffer.ts","../node_modules/kiwi.codegen/src/util/slice.ts","../node_modules/kiwi.codegen/src/util/join.ts","../node_modules/kiwi.codegen/src/util/getId.ts","../node_modules/kiwi.codegen/src/core/Compilable.ts","../node_modules/kiwi.codegen/src/code/Scope.ts","../node_modules/kiwi.codegen/src/code/Condition.ts","../node_modules/kiwi.codegen/src/util/check.ts","../node_modules/kiwi.codegen/src/code/Block.ts","../node_modules/kiwi.codegen/src/code/Procedure.ts","../node_modules/kiwi.codegen/src/index.ts","../node_modules/pipegl/src/core/Pipeline.ts","../node_modules/pipegl/src/compiler/emitAttribute.ts","../node_modules/pipegl/src/compiler/emitElement.ts","../node_modules/pipegl/src/compiler/emitUniform.ts","../node_modules/pipegl/src/compiler/emitBatch.ts","../node_modules/pipegl/src/compiler/emitFramebuffer.ts","../node_modules/pipegl/src/compiler/emitProgram.ts","../node_modules/pipegl/src/compiler/emitStatus.ts","../node_modules/pipegl/src/core/Props.ts","../node_modules/pipegl/src/util/checkAttribute.ts","../node_modules/pipegl/src/util/isTypedArray.ts","../node_modules/pipegl/src/util/isBufferArray.ts","../node_modules/pipegl/src/compiler/parseAttribute.ts","../node_modules/pipegl/src/compiler/parseElement.ts","../node_modules/pipegl/src/compiler/parseFramebuffer.ts","../node_modules/pipegl/src/compiler/parseProgram.ts","../node_modules/pipegl/src/core/Status.ts","../node_modules/pipegl/src/compiler/parseStatus.ts","../node_modules/pipegl/src/util/isFunction.ts","../node_modules/pipegl/src/compiler/parseUniform.ts","../node_modules/pipegl/src/compiler/CompilerCore.ts","../node_modules/pipegl/src/compiler/parseConfigure.ts","../node_modules/pipegl/src/res/GElementsbuffer.ts","../node_modules/pipegl/src/util/detectComponent.ts","../node_modules/pipegl/src/res/GBuffer.ts","../node_modules/pipegl/src/util/defaultValue.ts","../node_modules/pipegl/src/res/GVertexArrayObject.ts","../node_modules/pipegl/src/state/AttributeState.ts","../node_modules/pipegl/src/state/BufferState.ts","../node_modules/pipegl/src/state/ElementState.ts","../node_modules/pipegl/src/res/GRenderbuffer.ts","../node_modules/pipegl/src/res/GAttachment.ts","../node_modules/pipegl/src/state/FramebufferState.ts","../node_modules/pipegl/src/res/GProgram.ts","../node_modules/pipegl/src/state/ProgramState.ts","../node_modules/pipegl/src/state/RenderbufferState.ts","../node_modules/pipegl/src/res/GShader.ts","../node_modules/pipegl/src/state/ShaderState.ts","../node_modules/pipegl/src/state/StringState.ts","../node_modules/pipegl/src/util/getExtendCopy.ts","../node_modules/pipegl/src/util/toHalfFloat.ts","../node_modules/pipegl/src/core/Transpose.ts","../node_modules/pipegl/src/util/isPowerOf2.ts","../node_modules/pipegl/src/util/getPixelSize.ts","../node_modules/pipegl/src/util/checkTexture.ts","../node_modules/pipegl/src/util/createTexFlag.ts","../node_modules/pipegl/src/pool/TexImagePool.ts","../node_modules/pipegl/src/pool/MipmapPool.ts","../node_modules/pipegl/src/state/TextureState.ts","../node_modules/pipegl/src/util/createPerformance.ts","../node_modules/pipegl/src/util/createStats.ts","../node_modules/pipegl/src/core/Extension.ts","../node_modules/pipegl/src/core/Pipe.ts","../node_modules/pipegl/src/index.ts","../src/util/raf.ts","../src/util/merge.ts","../src/core/Tween.ts","../src/globe/Globe.Renderer.ts","../src/core/Format.ts","../src/globe/handler/Globe.Handler.Pan.ts","../src/globe/handler/Globe.Handler.Zoom.ts","../src/globe/camera/Globe.Camera.FlyTo.ts","../src/globe/camera/Globe.Camera.Pan.ts","../src/util/clamp.ts","../src/globe/camera/Globe.Camera.Zoom.ts","../src/util/llp.ts","../src/util/rgba.ts","../src/render/Renderable.ts","../src/sketchpad/Sektchpad.ts","../src/sketchpad/layer/TileLayer.ts","../src/util/normal.ts","../src/sketchpad/SketchpadRenderer.ts","../src/sketchpad/layer/TileLayerRenderer.ts","../src/index.ts","index.ts","../node_modules/parcel/src/builtins/hmr-runtime.js"],"names":["DEGREE","Math","PI","GLMatrix","Array","random","deg","rad","a","b","abs","EPSILON","max","Mat3","this","_out","set","m00","m01","m02","m10","m11","m12","m20","m21","m22","clone","fromMat4","mat","m","value","identity","invert","a00","a01","a02","a10","a11","a12","a20","a21","a22","b01","b11","b21","det","adjoint","determinant","multiply","b00","b02","b10","b12","b20","b22","translate","v","x","y","rotate","s","sin","c","cos","scale","fromQuat","q","z","w","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","normalFromMat4","a03","a13","a23","a30","a31","a32","a33","b03","b04","b05","b06","b07","b08","b09","Error","toString","frob","sqrt","pow","add","sub","equals","a0","a1","a2","a3","a4","a5","a6","a7","a8","b0","b1","b2","b3","b4","b5","b6","b7","b8","Vec3","vec","divide","ceil","floor","round","min","n","distance","len","negate","inverse","normalize","dot","cross","v3","ax","ay","az","bx","by","bz","lerp","t","hermite","v1","v2","factorTimes2","factor1","factor2","factor3","factor4","bezier","inverseFactor","inverseFactorTimesTwo","transformMat4","transformMat3","transformQuat","qx","qy","qz","qw","ix","iy","iz","iw","rotateX","p","r","rotateY","rotateZ","angle","va","vb","cosine","acos","applyQuat","applyMatrix4","m4","Quat","fromMat3","fRoot","qua","fTrace","i","j","k","rotationTo","_r1","_r2","_r3","setAxisAngle","setAxes","vv","vr","vu","axis","setFromUnitVectors","vFrom","vTo","setFromRotationMatrix","te","m13","m23","m31","m32","m33","trace","getAxisAngle","aw","bw","calculateW","slerp","omega","cosom","sinom","scale0","scale1","sqlerp","q1","q2","q3","q4","_s1","_s2","invDot","conjugate","Mat4","m03","m30","inverseTransformation","matrix0","matrix1","matrix2","matrix4","matrix5","matrix6","matrix8","matrix9","matrix10","vX","vY","vZ","transpose","decompose","sx","sy","sz","position","invSX","invSY","invSZ","m1","quaternion","fromVec3Translation","fromMat3Translation","rot","fromScaling","fromRotation","fromXRotation","fromYRotation","fromZRotation","getTranslation","setTranslation","fromRotationTranslation","xy","xz","yz","getScaling","getRotation","S","fromRotationTranslationScale","fromRotationTranslationScaleOrigin","o","ox","oy","oz","u0","u1","u2","u4","u5","u6","u8","u9","u10","frustum","l","f","rl","tb","nf","perspective","fovy","aspect","near","far","tan","perspectiveN11","perspective01","perspectiveFromFieldOfView","up","down","left","right","upTan","downTan","leftTan","rightTan","xScale","yScale","ortho","bottom","top","lr","bt","lookAt","cameraPosition","target","zAxis","xAxis","yAxis","forb","a9","a14","a15","b9","b13","b14","b15","Vec2","RANDOM","manhattanDistance","chebyshevDistance","Vec4","OVERLAY_ID","OldModule","module","bundle","Module","moduleName","call","hot","data","hotData","_acceptCallbacks","_disposeCallbacks","accept","fn","push","dispose","checkedAssets","assetsToAccept","parent","isParcelRequire","WebSocket","hostname","location","protocol","ws","onmessage","event","JSON","parse","type","handled","assets","forEach","asset","isNew","didAccept","hmrAcceptCheck","global","parcelRequire","id","every","generated","js","console","clear","hmrApply","hmrAcceptRun","window","reload","close","onclose","log","removeErrorOverlay","error","message","stack","overlay","createErrorOverlay","document","body","appendChild","getElementById","remove","createElement","stackTrace","innerText","innerHTML","getParents","modules","parents","d","dep","isArray","length","concat","Function","deps","cached","cache","some","cb"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,IAAM,MAAM,GAAI,YAAA;AACZ,SAAO,QAAO,MAAM,CAAC,SAAD,CAAb,MAA6B,QAA7B,IAAyC,MAAM,CAAC,MAAM,CAAC,SAAD,CAAP,CAAN,KAA8B,kBAAvE,IAA6F,CAAC,MAAM,CAAC,SAAD,CAAN,CAAkB,SAAlB,CAArG;AACH,CAFc,EAAf;;;;;;;;;;;ACLA;;AAsCA,IAAI,OAAJ;;;AAEA,IAAI,CAAC,cAAL,EAAa;AACT,MAAM,EAAE,GAAG,SAAS,CAAC,SAAV,CAAoB,WAApB,EAAX;AAAA,MACI,GAAG,GAAG,QAAQ,CAAC,eADnB;AAAA,MAEI,EAAE,GAAG,mBAAmB,MAF5B;AAAA,MAGI,MAAM,GAAG,EAAE,CAAC,OAAH,CAAW,QAAX,MAAyB,CAAC,CAHvC;AAAA,MAII,SAAS,GAAG,EAAE,CAAC,OAAH,CAAW,SAAX,MAA0B,CAAC,CAJ3C;AAAA,MAKI,SAAS,GAAG,EAAE,CAAC,MAAH,CAAU,cAAV,MAA8B,CAAC,CAL/C;AAAA,MAMI,MAAM,GAAG,EAAE,CAAC,OAAH,CAAW,QAAX,MAAyB,CAAC,CANvC;AAAA,MAOI,KAAK,GAAG,EAAE,CAAC,OAAH,CAAW,OAAX,MAAwB,CAAC,CAAzB,IAA8B,CAAC,MAA/B,IAAyC,CAAC,MAAM,CAAC,OAAD,CAAhD,IAA6D,CAAC,EAP1E;AAAA,MAQI,MAAM,GAAG,OAAO,WAAP,KAAuB,WAAvB,IAAsC,EAAE,CAAC,OAAH,CAAW,QAAX,MAAyB,CAAC,CAR7E;AAAA,MASI,SAAS,GAAG,CAAC,MAAM,CAAC,YAAR,IAAwB,MAAM,CAAC,gBAAD,CAT9C;AAAA,MAUI,OAAO,GAAI,MAAM,CAAC,YAAP,IAAuB,SAAS,CAAC,gBAAD,CAAjC,IAAwD,SAVtE;AAAA,MAWI,IAAI,GAAG,EAAE,IAAK,gBAAgB,GAAG,CAAC,KAXtC;AAAA,MAYI,QAAQ,GAAI,qBAAqB,MAAtB,IAAkC,SAAS,IAAI,MAAM,CAAC,eAAX,EAA3C,IAA4E,CAAC,SAZ5F;AAAA,MAaI,OAAO,GAAG,oBAAoB,GAAG,CAAC,KAbtC;AAAA,MAcI,OAAO,GAAG,iBAAiB,GAAG,CAAC,KAdnC;AAAA,MAeI,KAAK,GAAG,CAAC,IAAI,IAAI,QAAR,IAAoB,OAArB,KAAiC,CAAC,OAAlC,IAA6C,CAAC,SAf1D;AAgBA,MAAI,aAAa,GAAG,GAApB;;AACA,MAAI,MAAJ,EAAY;AACR,IAAA,aAAa,GAAG,EAAE,CAAC,KAAH,CAAS,kBAAT,EAA6B,CAA7B,CAAhB;AACH;;AACD,MAAM,KAAK,GAAG,CAAC,SAAD,KAAe,OAAO,IAAI,kBAAkB,MAA7B,IACxB,MAAM,CAAC,eAAD,CAAN,IAA2B,QAAQ,YAAY,MAAM,CAAC,eAAD,CAD5C,CAAd;AAGA,MAAI,KAAJ;;AACA,MAAI;AACA,QAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,QAAM,EAAE,GAAG,MAAM,CAAC,UAAP,CAAkB,OAAlB,KACP,MAAM,CAAC,UAAP,CAAkB,oBAAlB,CADJ;AAEA,IAAA,KAAK,GAAG,EAAE,IAAI,EAAE,YAAY,qBAA5B;AACH,GALD,CAKE,OAAO,GAAP,EAAY;AACV,IAAA,KAAK,GAAG,KAAR;AACH;;AACD,MAAM,gBAAgB,GAAI,MAAM,CAAC,gBAAP,IAA4B,MAAM,CAAC,MAAP,CAAc,YAAd,IAA8B,MAAM,CAAC,MAAP,CAAc,aAAd,CAApF;AACA,oBAAA,OAAO,GAAG;AACN,IAAA,EAAE,EAAE,EADE;AAEN,IAAA,KAAK,EAAE,EAAE,IAAI,CAAC,QAAQ,CAAC,gBAFjB;AAGN,IAAA,IAAI,EAAE,iBAAiB,SAAjB,IAA8B,EAAE,kBAAkB,QAApB,CAH9B;AAIN,IAAA,MAAM,EAAE,MAJF;AAKN,IAAA,KAAK,EAAE,KALD;AAMN,IAAA,OAAO,EAAE,EAAE,CAAC,OAAH,CAAW,SAAX,MAA0B,CAAC,CAN9B;AAON,IAAA,SAAS,EAAE,SAPL;AAQN,IAAA,MAAM,EAAE,MARF;AASN,IAAA,aAAa,EAAE,aATT;AAUN,IAAA,MAAM,EAAE,CAAC,MAAD,IAAW,EAAE,CAAC,OAAH,CAAW,QAAX,MAAyB,CAAC,CAVvC;AAWN,IAAA,SAAS,EAAE,SAXL;AAYN,IAAA,IAAI,EAAE,IAZA;AAaN,IAAA,QAAQ,EAAE,QAbJ;AAcN,IAAA,OAAO,EAAE,OAdH;AAeN,IAAA,OAAO,EAAE,OAfH;AAgBN,IAAA,KAAK,EAAE,KAhBD;AAiBN,IAAA,MAAM,EAAE,MAjBF;AAkBN,IAAA,YAAY,EAAE,MAAM,IAAI,MAlBlB;AAmBN,IAAA,cAAc,EAAE,MAAM,IAAI,QAnBpB;AAoBN,IAAA,WAAW,EAAE,MAAM,IAAI,MAAM,CAAC,OAAD,CApBvB;AAqBN,IAAA,WAAW,EAAE,MAAM,IAAI,KArBjB;AAsBN,IAAA,KAAK,EAAE,CAAC,CAAC,KAtBH;AAuBN,IAAA,SAAS,EAAE,CAAC,CAAC,SAvBP;AAwBN,IAAA,OAAO,EAAE,CAAC,CAAC,OAxBL;AAyBN,IAAA,MAAM,EAAE,gBAAgB,GAAG,CAzBrB;AA0BN,IAAA,gBAAgB,EAAhB,gBA1BM;AA2BN,IAAA,QAAQ,EAAE,SAAS,CAAC,iBAAD,CAAT,GAA+B,SAAS,CAAC,iBAAD,CAAxC,GAA8D,SAAS,CAAC,QA3B5E;AA4BN,IAAA,GAAG,EAAG,EAAE,IAAI,QAAQ,CAAC,cAAD,CAAR,KAA6B,CA5BnC;AA6BN,IAAA,IAAI,EAAG,EAAE,IAAI,QAAQ,CAAC,cAAD,CAAR,KAA6B,EA7BpC;AA8BN,IAAA,KAAK,EAAE;AA9BD,GAAV;AAgCH;;;;;;;;;ACtGD,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,GAAD,EAAsB;AACnC,SAAQ,OAAO,GAAP,IAAc,QAAf,IAA4B,GAAG,CAAC,WAAJ,IAAmB,MAAtD;AACH,CAFD;;;;;;;;;;;;;ICIM,eAAN,wBAAA;AAAA;;AAAA;;AAIY,OAAA,WAAA,GAAc,CAAd;AAKA,OAAA,SAAA,GAA2D,IAAI,GAAJ,EAA3D;;AAQD,OAAA,EAAA,GAAK,UAAC,IAAD,EAAe,QAAf,EAAwE;AAAA,QAA3C,OAA2C,uEAAnB,SAAmB;AAChF,QAAM,GAAG,GAAG,OAAO,IAAI,KAAvB;AAAA,QAA6B,SAAS,GAAG,KAAI,CAAC,SAA9C;AACA,QAAI,SAAS,CAAC,GAAV,CAAc,IAAd,KAAuB,KAAK,CAAC,IAAN,CAAW,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,MAApB,EAAX,EAAyC,MAAzC,IAAmD,KAAI,CAAC,WAAnF,EACI,MAAM,IAAI,KAAJ,+GAA2C,KAAI,CAAC,WAAhD,EAAN;;AACJ,QAAI,SAAS,CAAC,GAAV,CAAc,IAAd,aAA+B,GAAnC,EAAwC;AACpC,UAAI,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,GAApB,CAAwB,GAAxB,KAAiC,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,GAApB,CAAwB,GAAxB,EAA6B,OAA7B,CAAqC,QAArC,MAAmD,CAAC,CAAzF,EACI,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,GAApB,CAAwB,GAAxB,EAA6B,IAA7B,CAAkC,QAAlC,EADJ,KAEK,IAAI,CAAC,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,GAApB,CAAwB,GAAxB,CAAL,EACD,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,GAApB,CAAwB,GAAxB,EAA6B,CAAC,QAAD,CAA7B;AACP,KALD,MAMK,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,IAAI,GAAJ,GAAU,GAAV,CAAc,GAAd,EAAmB,CAAC,QAAD,CAAnB,CAApB;AACR,GAXM;;AAkBA,OAAA,IAAA,GAAO,UAAC,IAAD,EAAuC;AAAA,sCAArB,IAAqB;AAArB,MAAA,IAAqB;AAAA;;AACjD,QAAM,SAAS,GAAG,KAAI,CAAC,SAAvB;AAAA,QAAkC,GAAG,GAAG,SAAS,CAAC,GAAV,CAAc,IAAd,CAAxC;AACA,IAAA,GAAG,KAAA,IAAH,IAAA,GAAG,KAAA,KAAA,CAAH,GAAG,KAAA,CAAH,GAAA,GAAG,CAAE,OAAL,CAAa,UAAC,CAAD,EAAU,GAAV,EAA+B;AACxC,MAAA,CAAC,KAAA,IAAD,IAAA,CAAC,KAAA,KAAA,CAAD,GAAC,KAAA,CAAD,GAAA,CAAC,CAAE,OAAH,CAAW,UAAA,EAAE;AAAA,eAAI,EAAE,CAAC,IAAH,OAAA,EAAE,GAAM,GAAN,SAAc,IAAd,EAAN;AAAA,OAAb,CAAA;AACH,KAFD,CAAA;AAGH,GALM;;AAaA,OAAA,GAAA,GAAM,UAAC,IAAD,EAAe,QAAf,EAAwE;AAAA,QAA3C,OAA2C,uEAAnB,SAAmB;AACjF,QAAM,GAAG,GAAG,OAAO,IAAI,KAAvB;AAAA,QAA6B,SAAS,GAAG,KAAI,CAAC,SAA9C;AACA,QAAM,GAAG,GAAG,SAAS,CAAC,GAAV,CAAc,IAAd,KAAuB,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,GAApB,CAAwB,GAAxB,CAAvB,GAAsD,SAAS,CAAC,GAAV,CAAc,IAAd,EAAoB,GAApB,CAAwB,GAAxB,CAAtD,GAAqF,EAAjG;AACA,QAAM,CAAC,GAAG,GAAG,CAAC,OAAJ,CAAY,QAAZ,CAAV;AACA,QAAI,CAAC,IAAI,CAAT,EACI,GAAG,CAAC,MAAJ,CAAW,CAAX,EAAc,CAAd;AACP,GANM;;AAYA,OAAA,iBAAA,GAAoB,UAAC,IAAD,EAAuB;AAC9C,IAAA,KAAI,CAAC,SAAL,CAAe,MAAf,CAAsB,IAAtB;AACH,GAFM;;AAUA,OAAA,IAAA,GAAO,UAAC,IAAD,EAAe,QAAf,EAAwE;AAAA,QAA3C,OAA2C,uEAAnB,SAAmB;;AAClF,QAAM,EAAE,GAAG,SAAL,EAAK,GAAmB;AAAA,yCAAf,IAAe;AAAf,QAAA,IAAe;AAAA;;AAC1B,MAAA,QAAQ,CAAC,KAAT,CAAe,KAAf,EAAqB,IAArB;;AACA,MAAA,KAAI,CAAC,GAAL,CAAS,IAAT,EAAe,EAAf,EAAmB,OAAnB;AACH,KAHD;;AAIA,IAAA,KAAI,CAAC,EAAL,CAAQ,IAAR,EAAc,EAAd,EAAkB,OAAlB;AACH,GANM;AAOV;;;;AC1ED,IAAMA,EAASC,KAAKC,GAAK,IAKZC,8OAIFA,UAAkB,KAIlBA,aAAaC,MAIbD,SAASF,KAAKI,OAIdF,eAAuB,EAKvBA,WAAW,SAAUG,GACxB,OAAOA,EAAMN,GAMVG,WAAW,SAAUI,GACxB,OAAOA,EAAMP,GAOVG,SAAS,SAAUK,EAAWC,GACjC,OAAOR,KAAKS,IAAIF,EAAIC,IAAMN,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIF,GAAIP,KAAKS,IAAID,KCvC5EI,IAAAA,aAaT,aACIC,KAAKC,KAAO,IAAIX,MAAM,GACtBU,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EAvBvB,2BAqCIC,IAAA,SAAIC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,EAAaC,GAUxG,OATAX,KAAKC,KAAK,GAAKE,EACfH,KAAKC,KAAK,GAAKG,EACfJ,KAAKC,KAAK,GAAKI,EACfL,KAAKC,KAAK,GAAKK,EACfN,KAAKC,KAAK,GAAKM,EACfP,KAAKC,KAAK,GAAKO,EACfR,KAAKC,KAAK,GAAKQ,EACfT,KAAKC,KAAK,GAAKS,EACfV,KAAKC,KAAK,GAAKU,UAOnBC,MAAA,WAKI,OAJY,IAAIb,GAAOG,IACnBF,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,GACtCD,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,GACtCD,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,OAQvCY,SAAP,SAAgBC,GACZ,IAAMC,EAAI,IAAIhB,EAMd,OALAgB,EAAEb,IACEY,EAAIE,MAAM,GAAIF,EAAIE,MAAM,GAAIF,EAAIE,MAAM,GACtCF,EAAIE,MAAM,GAAIF,EAAIE,MAAM,GAAIF,EAAIE,MAAM,GACtCF,EAAIE,MAAM,GAAIF,EAAIE,MAAM,GAAIF,EAAIE,MAAM,KAEnCD,KAQXE,SAAA,WAUI,OATAjB,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,UAOnBiB,OAAA,iBAC0DlB,KAAKC,KAApDkB,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OACzCC,EAAMD,EAAMJ,EAAMC,EAAME,EAC1BG,GAAOF,EAAML,EAAME,EAAMC,EACzBK,EAAMJ,EAAMJ,EAAMC,EAAME,EACxBM,EAAMZ,EAAMS,EAAMR,EAAMS,EAAMR,EAAMS,EACxC,OAAKC,GAGL/B,KAAKC,KAAK,GAAK2B,GADfG,EAAM,EAAMA,GAEZ/B,KAAKC,KAAK,KAAO0B,EAAMP,EAAMC,EAAMK,GAAOK,EAC1C/B,KAAKC,KAAK,IAAMuB,EAAMJ,EAAMC,EAAME,GAAOQ,EACzC/B,KAAKC,KAAK,GAAK4B,EAAME,EACrB/B,KAAKC,KAAK,IAAM0B,EAAMR,EAAME,EAAMI,GAAOM,EACzC/B,KAAKC,KAAK,KAAOuB,EAAML,EAAME,EAAMC,GAAOS,EAC1C/B,KAAKC,KAAK,GAAK6B,EAAMC,EACrB/B,KAAKC,KAAK,KAAOyB,EAAMP,EAAMC,EAAMK,GAAOM,EAC1C/B,KAAKC,KAAK,IAAMsB,EAAMJ,EAAMC,EAAME,GAAOS,gBAO7CC,QAAA,iBACwDhC,KAAKC,KAApDkB,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAU7C,OATA3B,KAAKC,KAAK,GAAMsB,EAAMI,EAAMH,EAAME,EAClC1B,KAAKC,KAAK,GAAMoB,EAAMK,EAAMN,EAAMO,EAClC3B,KAAKC,KAAK,GAAMmB,EAAMI,EAAMH,EAAME,EAClCvB,KAAKC,KAAK,GAAMuB,EAAMC,EAAMH,EAAMK,EAClC3B,KAAKC,KAAK,GAAMkB,EAAMQ,EAAMN,EAAMI,EAClCzB,KAAKC,KAAK,GAAMoB,EAAMC,EAAMH,EAAMK,EAClCxB,KAAKC,KAAK,GAAMqB,EAAMI,EAAMH,EAAME,EAClCzB,KAAKC,KAAK,GAAMmB,EAAMK,EAAMN,EAAMO,EAClC1B,KAAKC,KAAK,GAAMkB,EAAMI,EAAMH,EAAME,UAMtCW,YAAA,iBAC0DjC,KAAKC,KAArCqB,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAC/C,aAAcA,EAAMJ,EAAMC,EAAME,UAAeC,EAAML,EAAME,EAAMC,SAAcC,EAAMJ,EAAMC,EAAME,MAMrGS,SAAA,SAASpB,SACiDd,KAAKC,KAApDkB,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,SACOb,EAAIE,MAAnDmB,OAAKP,OAAKQ,OAAKC,OAAKR,OAAKS,OAAKC,OAAKT,OAAKU,OAU/C,OATAxC,KAAKC,KAAK,GAAKkC,EAAMhB,EAAMS,EAAMN,EAAMc,EAAMX,EAC7CzB,KAAKC,KAAK,GAAKkC,EAAMf,EAAMQ,EAAML,EAAMa,EAAMV,EAC7C1B,KAAKC,KAAK,GAAKkC,EAAMd,EAAMO,EAAMJ,EAAMY,EAAMT,EAC7C3B,KAAKC,KAAK,GAAKoC,EAAMlB,EAAMU,EAAMP,EAAMgB,EAAMb,EAC7CzB,KAAKC,KAAK,GAAKoC,EAAMjB,EAAMS,EAAMN,EAAMe,EAAMZ,EAC7C1B,KAAKC,KAAK,GAAKoC,EAAMhB,EAAMQ,EAAML,EAAMc,EAAMX,EAC7C3B,KAAKC,KAAK,GAAKsC,EAAMpB,EAAMW,EAAMR,EAAMkB,EAAMf,EAC7CzB,KAAKC,KAAK,GAAKsC,EAAMnB,EAAMU,EAAMP,EAAMiB,EAAMd,EAC7C1B,KAAKC,KAAK,GAAKsC,EAAMlB,EAAMS,EAAMN,EAAMgB,EAAMb,UAQjDc,UAAA,SAAUC,SACgD1C,KAAKgB,MAApDG,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,SAChCe,EAAE1B,MAAV2B,OAAGC,OAUV,OATA5C,KAAKC,KAAK,GAAKkB,EACfnB,KAAKC,KAAK,GAAKmB,EACfpB,KAAKC,KAAK,GAAKoB,EACfrB,KAAKC,KAAK,GAAKqB,EACftB,KAAKC,KAAK,GAAKsB,EACfvB,KAAKC,KAAK,GAAKuB,EACfxB,KAAKC,KAAK,GAAK0C,EAAIxB,EAAMyB,EAAItB,EAAMG,EACnCzB,KAAKC,KAAK,GAAK0C,EAAIvB,EAAMwB,EAAIrB,EAAMG,EACnC1B,KAAKC,KAAK,GAAK0C,EAAItB,EAAMuB,EAAIpB,EAAMG,UAOvCkB,OAAA,SAAOpD,SACmDO,KAAKC,KAApDkB,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OAAKC,OACzCmB,EAAI3D,KAAK4D,IAAItD,GAAMuD,EAAI7D,KAAK8D,IAAIxD,GAUtC,OATAO,KAAKC,KAAK,GAAK+C,EAAI7B,EAAM2B,EAAIxB,EAC7BtB,KAAKC,KAAK,GAAK+C,EAAI5B,EAAM0B,EAAIvB,EAC7BvB,KAAKC,KAAK,GAAK+C,EAAI3B,EAAMyB,EAAItB,EAC7BxB,KAAKC,KAAK,GAAK+C,EAAI1B,EAAMwB,EAAI3B,EAC7BnB,KAAKC,KAAK,GAAK+C,EAAIzB,EAAMuB,EAAI1B,EAC7BpB,KAAKC,KAAK,GAAK+C,EAAIxB,EAAMsB,EAAIzB,EAC7BrB,KAAKC,KAAK,GAAKwB,EACfzB,KAAKC,KAAK,GAAKyB,EACf1B,KAAKC,KAAK,GAAK0B,UAOnBuB,MAAA,SAAMR,SACaA,EAAE1B,MAAV2B,OAAGC,OAOV,OANA5C,KAAKC,KAAK,GAAK0C,EAAI3C,KAAKC,KAAK,GAC7BD,KAAKC,KAAK,GAAK0C,EAAI3C,KAAKC,KAAK,GAC7BD,KAAKC,KAAK,GAAK0C,EAAI3C,KAAKC,KAAK,GAC7BD,KAAKC,KAAK,GAAK2C,EAAI5C,KAAKC,KAAK,GAC7BD,KAAKC,KAAK,GAAK2C,EAAI5C,KAAKC,KAAK,GAC7BD,KAAKC,KAAK,GAAK2C,EAAI5C,KAAKC,KAAK,WAOjCkD,SAAA,SAASC,SACgBA,EAAEpC,MAAhB2B,OAAGC,OAAGS,OAAGC,OACVC,EAAKZ,EAAIA,EACXa,EAAKZ,EAAIA,EACTa,EAAKJ,EAAIA,EACTK,EAAKf,EAAIY,EACTI,EAAKf,EAAIW,EACTK,EAAKhB,EAAIY,EACTK,EAAKR,EAAIE,EACTO,EAAKT,EAAIG,EACTO,EAAKV,EAAII,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAKb,OAJU,IAAI1D,GAAOG,IACjB,EAAI0D,EAAKG,EAAIJ,EAAKO,EAAIL,EAAKI,EAC3BN,EAAKO,EAAI,EAAIR,EAAKK,EAAID,EAAKE,EAC3BH,EAAKI,EAAIH,EAAKE,EAAI,EAAIN,EAAKE,MAQnCO,eAAA,SAAerD,SAC8EA,EAAIE,MAAtFG,OAAKC,OAAKC,OAAK+C,OAAK9C,OAAKC,OAAKC,OAAK6C,OAAK5C,OAAKC,OAAKC,QAAK2C,QAAKC,QAAKC,QAAKC,QAAKC,QAC5EvC,EAAMhB,EAAMI,EAAMH,EAAME,EAC1BM,EAAMT,EAAMK,EAAMH,EAAMC,EACxBc,EAAMjB,EAAMkD,EAAMD,EAAM9C,EACxBqD,EAAMvD,EAAMI,EAAMH,EAAME,EACxBqD,EAAMxD,EAAMiD,EAAMD,EAAM7C,EACxBsD,EAAMxD,EAAMgD,EAAMD,EAAM5C,EACxBsD,EAAMrD,EAAM+C,EAAM9C,EAAM6C,EACxBQ,EAAMtD,EAAMgD,EAAM9C,EAAM4C,EACxBS,EAAMvD,EAAMiD,EAAMJ,EAAMC,EACxBU,EAAMvD,EAAM+C,EAAM9C,EAAM6C,EACxBnC,EAAMX,EAAMgD,EAAMJ,EAAME,EACxB3C,EAAMF,EAAM+C,EAAMJ,EAAMG,EACxB1C,EAAMI,EAAMN,EAAMD,EAAMS,EAAMD,EAAM6C,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAC5E,IAAK/C,EAAK,UAAUmD,MAAM,WAE1B,IAAI/E,GAAOoB,EAAMM,EAAML,EAAMa,EAAMgC,EAAMY,IADzClD,EAAM,EAAMA,GAER3B,GAAOoB,EAAMwD,EAAM1D,EAAMO,EAAMwC,EAAMU,GAAOhD,EAC5C1B,GAAOiB,EAAMe,EAAMd,EAAMyD,EAAMX,EAAMS,GAAO/C,EAC5CzB,GAAOe,EAAMgB,EAAMjB,EAAMS,EAAMuC,EAAMa,GAAOlD,EAC5CxB,GAAOY,EAAMU,EAAMR,EAAM2D,EAAMZ,EAAMW,GAAOhD,EAC5CvB,GAAOY,EAAM4D,EAAM7D,EAAMkB,EAAM+B,EAAMU,GAAO/C,EAC5CtB,GAAO+D,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,GAAO5C,EAC5CrB,GAAO+D,EAAMrC,EAAMmC,EAAMM,EAAMH,EAAM9C,GAAOG,EAC5CpB,GAAO4D,EAAMK,EAAMJ,EAAMpC,EAAMsC,EAAMvC,GAAOJ,EAKhD,OAJW,IAAIhC,GAAOG,IAClBC,EAAKC,EAAKC,EACVC,EAAKC,EAAKC,EACVC,EAAKC,EAAKC,MAMlBwE,SAAA,WACI,MAAO,QAAUnF,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,OAMpNmF,KAAA,WACI,OAAQjG,KAAKkG,KAAKlG,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,OAO7QsF,IAAA,SAAIzE,GAUA,OATAd,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,WAQ9BwE,IAAA,SAAI1E,GAUA,OATAd,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,WAQ9ByE,OAAA,SAAO3E,SAC0Cd,KAAKC,KAA3CyF,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,SACMpF,EAAIE,MAA1CmF,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OACvC,OAAQxH,KAAKS,IAAI8F,EAAKS,IAAO9G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI8F,GAAKvG,KAAKS,IAAIuG,KACjFhH,KAAKS,IAAI+F,EAAKS,IAAO/G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI+F,GAAKxG,KAAKS,IAAIwG,KAC7EjH,KAAKS,IAAIgG,EAAKS,IAAOhH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIgG,GAAKzG,KAAKS,IAAIyG,KAC7ElH,KAAKS,IAAIiG,EAAKS,IAAOjH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIiG,GAAK1G,KAAKS,IAAI0G,KAC7EnH,KAAKS,IAAIkG,EAAKS,IAAOlH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIkG,GAAK3G,KAAKS,IAAI2G,KAC7EpH,KAAKS,IAAImG,EAAKS,IAAOnH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAImG,GAAK5G,KAAKS,IAAI4G,KAC7ErH,KAAKS,IAAIoG,EAAKS,IAAOpH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIoG,GAAK7G,KAAKS,IAAI6G,KAC7EtH,KAAKS,IAAIqG,EAAKS,IAAOrH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIqG,GAAK9G,KAAKS,IAAI8G,KAC7EvH,KAAKS,IAAIsG,EAAKS,IAAOtH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIsG,GAAK/G,KAAKS,IAAI+G,sCA7SjF,YAAY1G,cC9BP2G,aAQT,aACI5G,KAAKC,KAAO,IAAIX,MAAM,GACtBU,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EAZvB,2BA4CIC,IAAA,SAAIyC,EAAWC,EAAWS,GAItB,OAHArD,KAAKC,KAAK,GAAK0C,EACf3C,KAAKC,KAAK,GAAK2C,EACf5C,KAAKC,KAAK,GAAKoD,UAMnBzC,MAAA,WACI,IAAIiG,EAAM,IAAID,EAEd,OADAC,EAAI3G,IAAIF,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,IACvC4G,KAMXtB,IAAA,SAAIsB,GAIA,OAHA7G,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,WAO7BuF,IAAA,SAAIqB,GAIA,OAHA7G,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,WAM7BiC,SAAA,SAAS2E,GAIL,OAHA7G,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,WAO7B6G,OAAA,SAAOD,GAIH,OAHA7G,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,WAM7B8G,KAAA,WAII,OAHA/G,KAAKC,KAAK,GAAKd,KAAK4H,KAAK/G,KAAKC,KAAK,IACnCD,KAAKC,KAAK,GAAKd,KAAK4H,KAAK/G,KAAKC,KAAK,IACnCD,KAAKC,KAAK,GAAKd,KAAK4H,KAAK/G,KAAKC,KAAK,YAMvC+G,MAAA,WAII,OAHAhH,KAAKC,KAAK,GAAKd,KAAK6H,MAAMhH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK6H,MAAMhH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK6H,MAAMhH,KAAKC,KAAK,YAMxCgH,MAAA,WAII,OAHAjH,KAAKC,KAAK,GAAKd,KAAK8H,MAAMjH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK8H,MAAMjH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK8H,MAAMjH,KAAKC,KAAK,YAMxCiH,IAAA,SAAIL,GAIA,OAHA7G,KAAKC,KAAK,GAAKd,KAAK+H,IAAIlH,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,IAC/CD,KAAKC,KAAK,GAAKd,KAAK+H,IAAIlH,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,IAC/CD,KAAKC,KAAK,GAAKd,KAAK+H,IAAIlH,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,YAMnDH,IAAA,SAAI+G,GAIA,OAHA7G,KAAKC,KAAK,GAAKd,KAAKW,IAAIE,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,IAC/CD,KAAKC,KAAK,GAAKd,KAAKW,IAAIE,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,IAC/CD,KAAKC,KAAK,GAAKd,KAAKW,IAAIE,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,YAOnDiD,MAAA,SAAMiE,GAIF,OAHAnH,KAAKC,KAAK,IAAMkH,EAChBnH,KAAKC,KAAK,IAAMkH,EAChBnH,KAAKC,KAAK,IAAMkH,UAOpBC,SAAA,SAASP,SACgB7G,KAAKC,OACP4G,EAAI5G,KACnB0C,YACAC,YACAS,YACJ,OAAOlE,KAAKkG,KAAK1C,EAAIA,EAAIC,EAAIA,EAAIS,EAAIA,MAKzCgE,IAAA,WACI,YAAYD,SAAS,IAAIR,MAK7BU,OAAA,WAII,OAHAtH,KAAKC,KAAK,IAAMD,KAAKC,KAAK,GAC1BD,KAAKC,KAAK,IAAMD,KAAKC,KAAK,GAC1BD,KAAKC,KAAK,IAAMD,KAAKC,KAAK,WAM9BsH,QAAA,WAII,OAHAvH,KAAKC,KAAK,GAAK,EAAMD,KAAKC,KAAK,GAC/BD,KAAKC,KAAK,GAAK,EAAMD,KAAKC,KAAK,GAC/BD,KAAKC,KAAK,GAAK,EAAMD,KAAKC,KAAK,WAMnCuH,UAAA,WACI,IAAIH,EAAMrH,KAAKqH,MAMf,OALIA,EAAM,IACNrH,KAAKC,KAAK,IAAMoH,EAChBrH,KAAKC,KAAK,IAAMoH,EAChBrH,KAAKC,KAAK,IAAMoH,WAQxBI,IAAA,SAAIZ,SACmB7G,KAAKC,OACL4G,EAAI5G,KACvB,wCAYJyH,MAAA,SAAMC,SACiB3H,KAAKC,KAAnB2H,OAAIC,OAAIC,SACMH,EAAG3G,MAAjB+G,OAAIC,OAAIC,OAIb,OAHAjI,KAAKC,KAAK,GAAK4H,EAAKI,EAAKH,EAAKE,EAC9BhI,KAAKC,KAAK,GAAK6H,EAAKC,EAAKH,EAAKK,EAC9BjI,KAAKC,KAAK,GAAK2H,EAAKI,EAAKH,EAAKE,UAQlCG,KAAA,SAAKrB,EAAWsB,SACOnI,KAAKC,KAAnB2H,OAAIC,OAAIC,SACMjB,EAAI5G,KAAd+H,OAAIC,OAIb,OAHAjI,KAAKC,KAAK,GAAK2H,EAAKO,QAAUP,GAC9B5H,KAAKC,KAAK,GAAK4H,EAAKM,GAAKH,EAAKH,GAC9B7H,KAAKC,KAAK,GAAK6H,EAAKK,GAAKF,EAAKH,WAUlCM,QAAA,SAAQC,EAAUC,EAAUX,EAAUQ,GAClC,IAAMI,EAAeJ,EAAIA,EACrBK,EAAUD,GAAgB,EAAIJ,EAAI,GAAK,EACvCM,EAAUF,GAAgBJ,EAAI,GAAKA,EACnCO,EAAUH,GAAgBJ,EAAI,GAC9BQ,EAAUJ,GAAgB,EAAI,EAAIJ,GAItC,OAHAnI,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GAAKuI,EAAUH,EAAGpI,KAAK,GAAKwI,EAAUH,EAAGrI,KAAK,GAAKyI,EAAUf,EAAG1H,KAAK,GAAK0I,EACnG3I,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GAAKuI,EAAUH,EAAGpI,KAAK,GAAKwI,EAAUH,EAAGrI,KAAK,GAAKyI,EAAUf,EAAG1H,KAAK,GAAK0I,EACnG3I,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GAAKuI,EAAUH,EAAGpI,KAAK,GAAKwI,EAAUH,EAAGrI,KAAK,GAAKyI,EAAUf,EAAG1H,KAAK,GAAK0I,UAUvGC,OAAA,SAAOP,EAAUC,EAAUX,EAAUQ,GACjC,IAAMU,EAAgB,EAAIV,EACtBW,EAAwBD,EAAgBA,EACxCN,EAAeJ,EAAIA,EACnBK,EAAUM,EAAwBD,EAClCJ,EAAU,EAAIN,EAAIW,EAClBJ,EAAU,EAAIH,EAAeM,EAC7BF,EAAUJ,EAAeJ,EAI7B,OAHAnI,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GAAKuI,EAAUH,EAAGpI,KAAK,GAAKwI,EAAUH,EAAGrI,KAAK,GAAKyI,EAAUf,EAAG1H,KAAK,GAAK0I,EACnG3I,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GAAKuI,EAAUH,EAAGpI,KAAK,GAAKwI,EAAUH,EAAGrI,KAAK,GAAKyI,EAAUf,EAAG1H,KAAK,GAAK0I,EACnG3I,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GAAKuI,EAAUH,EAAGpI,KAAK,GAAKwI,EAAUH,EAAGrI,KAAK,GAAKyI,EAAUf,EAAG1H,KAAK,GAAK0I,UAQvGI,cAAA,SAAcjI,SACQd,KAAKC,KAAhB0C,OAAGC,OAAGS,OACTC,EAAKxC,EAAIE,MAAM,GAAK2B,EAAI7B,EAAIE,MAAM,GAAK4B,EAAI9B,EAAIE,MAAM,IAAMqC,EAAIvC,EAAIE,MAAM,KAAQ,EAIrF,OAHAhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAAK2B,EAAI7B,EAAIE,MAAM,GAAK4B,EAAI9B,EAAIE,MAAM,GAAKqC,EAAIvC,EAAIE,MAAM,KAAOsC,EAC1FtD,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAAK2B,EAAI7B,EAAIE,MAAM,GAAK4B,EAAI9B,EAAIE,MAAM,GAAKqC,EAAIvC,EAAIE,MAAM,KAAOsC,EAC1FtD,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAAK2B,EAAI7B,EAAIE,MAAM,GAAK4B,EAAI9B,EAAIE,MAAM,IAAMqC,EAAIvC,EAAIE,MAAM,KAAOsC,UAO/F0F,cAAA,SAAclI,SACQd,KAAKC,KAAhB0C,OAAGC,OAAGS,OAIb,OAHArD,KAAKC,KAAK,GAAK0C,EAAI7B,EAAIb,KAAK,GAAK2C,EAAI9B,EAAIb,KAAK,GAAKoD,EAAIvC,EAAIb,KAAK,GAChED,KAAKC,KAAK,GAAK0C,EAAI7B,EAAIb,KAAK,GAAK2C,EAAI9B,EAAIb,KAAK,GAAKoD,EAAIvC,EAAIb,KAAK,GAChED,KAAKC,KAAK,GAAK0C,EAAI7B,EAAIb,KAAK,GAAK2C,EAAI9B,EAAIb,KAAK,GAAKoD,EAAIvC,EAAIb,KAAK,WAMpEkF,SAAA,WACI,MAAO,QAAUnF,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,OAOhFgJ,cAAA,SAAc7F,SACMpD,KAAKC,KAAhB0C,OAAGC,OAAGS,SACYD,EAAEpC,MAApBkI,OAAIC,OAAIC,OAAIC,OAEbC,EAAKD,EAAK1G,EAAIwG,EAAK9F,EAAI+F,EAAKxG,EAC5B2G,EAAKF,EAAKzG,EAAIwG,EAAKzG,EAAIuG,EAAK7F,EAC5BmG,EAAKH,EAAKhG,EAAI6F,EAAKtG,EAAIuG,EAAKxG,EAC5B8G,GAAMP,EAAKvG,EAAIwG,EAAKvG,EAAIwG,EAAK/F,EAIjC,OAHArD,KAAKC,KAAK,GAAKqJ,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EACrDnJ,KAAKC,KAAK,GAAKsJ,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EACrDpJ,KAAKC,KAAK,GAAKuJ,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,UAQzDQ,QAAA,SAAQhH,EAASM,GACb,IAAI2G,EAAI,GAAIC,EAAI,GAahB,OAXAD,EAAE,GAAK3J,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAC7B0J,EAAE,GAAK3J,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAC7B0J,EAAE,GAAK3J,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAE7B2J,EAAE,GAAKD,EAAE,GACTC,EAAE,GAAKD,EAAE,GAAKxK,KAAK8D,IAAID,GAAK2G,EAAE,GAAKxK,KAAK4D,IAAIC,GAC5C4G,EAAE,GAAKD,EAAE,GAAKxK,KAAK4D,IAAIC,GAAK2G,EAAE,GAAKxK,KAAK8D,IAAID,GAE5ChD,KAAKC,KAAK,GAAK2J,EAAE,GAAKlH,EAAE1B,MAAM,GAC9BhB,KAAKC,KAAK,GAAK2J,EAAE,GAAKlH,EAAE1B,MAAM,GAC9BhB,KAAKC,KAAK,GAAK2J,EAAE,GAAKlH,EAAE1B,MAAM,WAQlC6I,QAAA,SAAQnH,EAASM,GACb,IAAI2G,EAAI,GAAIC,EAAI,GAahB,OAXAD,EAAE,GAAK3J,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAC7B0J,EAAE,GAAK3J,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAC7B0J,EAAE,GAAK3J,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAE7B2J,EAAE,GAAKD,EAAE,GAAKxK,KAAK4D,IAAIC,GAAK2G,EAAE,GAAKxK,KAAK8D,IAAID,GAC5C4G,EAAE,GAAKD,EAAE,GACTC,EAAE,GAAKD,EAAE,GAAKxK,KAAK8D,IAAID,GAAK2G,EAAE,GAAKxK,KAAK4D,IAAIC,GAE5ChD,KAAKC,KAAK,GAAK2J,EAAE,GAAKlH,EAAE1B,MAAM,GAC9BhB,KAAKC,KAAK,GAAK2J,EAAE,GAAKlH,EAAE1B,MAAM,GAC9BhB,KAAKC,KAAK,GAAK2J,EAAE,GAAKlH,EAAE1B,MAAM,WAQlC8I,QAAA,SAAQpH,EAASM,GACb,IAAI2G,EAAI,GAAIC,EAAI,GAahB,OAXAD,EAAE,GAAK3J,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAC7B0J,EAAE,GAAK3J,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAC7B0J,EAAE,GAAK3J,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAE7B2J,EAAE,GAAKD,EAAE,GAAKxK,KAAK8D,IAAID,GAAK2G,EAAE,GAAKxK,KAAK4D,IAAIC,GAC5C4G,EAAE,GAAKD,EAAE,GAAKxK,KAAK4D,IAAIC,GAAK2G,EAAE,GAAKxK,KAAK8D,IAAID,GAC5C4G,EAAE,GAAKD,EAAE,GAET3J,KAAKC,KAAK,GAAK2J,EAAE,GAAKlH,EAAE1B,MAAM,GAC9BhB,KAAKC,KAAK,GAAK2J,EAAE,GAAKlH,EAAE1B,MAAM,GAC9BhB,KAAKC,KAAK,GAAK2J,EAAE,GAAKlH,EAAE1B,MAAM,WAOlC+I,MAAA,SAAMrH,GACF,IAAMsH,EAAKhK,KAAKY,QAAQ4G,YACpByC,EAAKvH,EAAE9B,QAAQ4G,YACb0C,EAASF,EAAGpJ,QAAQ6G,IAAIwC,GAC9B,OAAIC,EAAS,IAEJA,GAAU,EACR/K,KAAKC,GAELD,KAAKgL,KAAKD,MAQzBE,UAAA,SAAUhH,GAEN,IAAMT,EAAI3C,KAAK2C,EAAGC,EAAI5C,KAAK4C,EAAGS,EAAIrD,KAAKqD,EACnC6F,EAAK9F,EAAET,EAAGwG,EAAK/F,EAAER,EAAGwG,EAAKhG,EAAEC,EAAGgG,EAAKjG,EAAEE,EAEnCgG,EAAKD,EAAK1G,EAAIwG,EAAK9F,EAAI+F,EAAKxG,EAC9B2G,EAAKF,EAAKzG,EAAIwG,EAAKzG,EAAIuG,EAAK7F,EAC5BmG,EAAKH,EAAKhG,EAAI6F,EAAKtG,EAAIuG,EAAKxG,EAC5B8G,GAAOP,EAAKvG,EAAIwG,EAAKvG,EAAIwG,EAAK/F,EAMlC,OAJArD,KAAKC,KAAK,GAAKqJ,EAAKD,EAAKI,GAAOP,EAAKK,GAAOH,EAAKI,GAAOL,EACxDnJ,KAAKC,KAAK,GAAKsJ,EAAKF,EAAKI,GAAON,EAAKK,GAAON,EAAKI,GAAOF,EACxDpJ,KAAKC,KAAK,GAAKuJ,EAAKH,EAAKI,GAAOL,EAAKE,GAAOH,EAAKI,GAAOL,UAO5DzD,OAAA,SAAOoB,SACkB7G,KAAKC,KAAnByF,OAAIC,OAAIC,SACIiB,EAAI5G,KAAlBkG,OAAIC,OAAIC,OACb,OAAQlH,KAAKS,IAAI8F,EAAKS,IAAO9G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI8F,GAAKvG,KAAKS,IAAIuG,KACjFhH,KAAKS,IAAI+F,EAAKS,IAAO/G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI+F,GAAKxG,KAAKS,IAAIwG,KAC7EjH,KAAKS,IAAIgG,EAAKS,IAAOhH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIgG,GAAKzG,KAAKS,IAAIyG,OAKrFgE,aAAA,SAAaC,GACT,IAAM3H,EAAI3C,KAAK2C,EAAGC,EAAI5C,KAAK4C,EAAGS,EAAIrD,KAAKqD,EACjCC,EAAI,GAAKgH,EAAGtJ,MAAM,GAAK2B,EAAI2H,EAAGtJ,MAAM,GAAK4B,EAAI0H,EAAGtJ,MAAM,IAAMqC,EAAIiH,EAAGtJ,MAAM,KAK/E,OADAhB,KAAKE,KAHOoK,EAAGtJ,MAAM,GAAK2B,EAAI2H,EAAGtJ,MAAM,GAAK4B,EAAI0H,EAAGtJ,MAAM,GAAKqC,EAAIiH,EAAGtJ,MAAM,KAAOsC,GACxEgH,EAAGtJ,MAAM,GAAK2B,EAAI2H,EAAGtJ,MAAM,GAAK4B,EAAI0H,EAAGtJ,MAAM,GAAKqC,EAAIiH,EAAGtJ,MAAM,KAAOsC,GACtEgH,EAAGtJ,MAAM,GAAK2B,EAAI2H,EAAGtJ,MAAM,GAAK4B,EAAI0H,EAAGtJ,MAAM,IAAMqC,EAAIiH,EAAGtJ,MAAM,KAAOsC,sCA1ajF,YAAYrD,KAAK,6BAMjB,YAAYA,KAAK,6BAMjB,YAAYA,KAAK,iCASjB,YAAYA,cCtCPsK,aA6BT,aACIvK,KAAKC,KAAO,IAAIX,MAAM,GACtBU,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EAlCvBsK,EAyEWC,SAAP,SAAgB1J,GAGZ,IAEI2J,EAFEC,EAAM,IAAIH,EACZI,EAAS7J,EAAIE,MAAM,GAAKF,EAAIE,MAAM,GAAKF,EAAIE,MAAM,GAErD,GAAI2J,EAAS,EAETF,EAAQtL,KAAKkG,KAAKsF,EAAS,GAC3BD,EAAIzK,KAAK,GAAK,GAAMwK,EAEpBC,EAAIzK,KAAK,IAAMa,EAAIb,KAAK,GAAKa,EAAIb,KAAK,KADtCwK,EAAQ,GAAMA,GAEdC,EAAIzK,KAAK,IAAMa,EAAIb,KAAK,GAAKa,EAAIb,KAAK,IAAMwK,EAC5CC,EAAIzK,KAAK,IAAMa,EAAIb,KAAK,GAAKa,EAAIb,KAAK,IAAMwK,MACzC,CAEH,IAAIG,EAAI,EACJ9J,EAAIE,MAAM,GAAKF,EAAIE,MAAM,KAAI4J,EAAI,GACjC9J,EAAIE,MAAM,GAAKF,EAAIE,MAAU,EAAJ4J,EAAQA,KAAIA,EAAI,GAC7C,IAAIC,GAAKD,EAAI,GAAK,EACdE,GAAKF,EAAI,GAAK,EAClBH,EAAQtL,KAAKkG,KAAKvE,EAAIb,KAAS,EAAJ2K,EAAQA,GAAK9J,EAAIb,KAAS,EAAJ4K,EAAQA,GAAK/J,EAAIb,KAAS,EAAJ6K,EAAQA,GAAK,GACpFJ,EAAIzK,KAAK2K,GAAK,GAAMH,EAEpBC,EAAIzK,KAAK,IAAMa,EAAIb,KAAS,EAAJ4K,EAAQC,GAAKhK,EAAIb,KAAS,EAAJ6K,EAAQD,KADtDJ,EAAQ,GAAMA,GAEdC,EAAIzK,KAAK4K,IAAM/J,EAAIb,KAAS,EAAJ4K,EAAQD,GAAK9J,EAAIb,KAAS,EAAJ2K,EAAQC,IAAMJ,EAC5DC,EAAIzK,KAAK6K,IAAMhK,EAAIb,KAAS,EAAJ6K,EAAQF,GAAK9J,EAAIb,KAAS,EAAJ2K,EAAQE,IAAML,EAEhE,OAAOC,8BASXxK,IAAA,SAAIyC,EAAWC,EAAWS,EAAWC,GAKjC,OAJAtD,KAAKC,KAAK,GAAK0C,EACf3C,KAAKC,KAAK,GAAK2C,EACf5C,KAAKC,KAAK,GAAKoD,EACfrD,KAAKC,KAAK,GAAKqD,UAMnB1C,MAAA,WACI,IAAM8J,EAAM,IAAIH,EAEhB,OADAG,EAAIxK,IAAIwK,EAAIzK,KAAK,GAAIyK,EAAIzK,KAAK,GAAIyK,EAAIzK,KAAK,GAAIyK,EAAIzK,KAAK,IACjDyK,KAKXzJ,SAAA,WAKI,OAJAjB,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,UAQnB8K,WAAA,SAAW1C,EAAUC,GACjBtI,KAAKgL,IAAMhL,KAAKgL,KAAO,IAAIpE,EAC3B5G,KAAKiL,IAAMjL,KAAKiL,MAAO,IAAIrE,GAAO1G,IAAI,EAAG,EAAG,GAC5CF,KAAKkL,IAAMlL,KAAKkL,MAAO,IAAItE,GAAO1G,IAAI,EAAG,EAAG,GAC5C,IAAMuH,EAAMY,EAAGZ,IAAIa,GACnB,OAAIb,GAAO,SACPzH,KAAKgL,IAAMhL,KAAKkL,IAAItK,QAAQ8G,MAAMW,GAC9BrI,KAAKgL,IAAI3D,MAAQ,OAAUrH,KAAKgL,IAAMhL,KAAKkL,IAAItK,QAAQ8G,MAAMW,IACjErI,KAAKkL,IAAI1D,YACTxH,KAAKmL,aAAanL,KAAKgL,IAAK7L,KAAKC,UAE1BqI,EAAM,SACbzH,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,SAGfD,KAAKgL,IAAM3C,EAAGzH,QAAQ8G,MAAMY,GAC5BtI,KAAKC,KAAK,GAAKD,KAAKgL,IAAIhK,MAAM,GAC9BhB,KAAKC,KAAK,GAAKD,KAAKgL,IAAIhK,MAAM,GAC9BhB,KAAKC,KAAK,GAAKD,KAAKgL,IAAIhK,MAAM,GAC9BhB,KAAKC,KAAK,GAAK,EAAIwH,OACPD,gBAWpB4D,QAAA,SAAQC,EAAUC,EAAUC,GACxB,IAAMzK,GAAM,IAAIf,GAAOG,IACnBoL,EAAGtK,MAAM,GAAIuK,EAAGvK,MAAM,IAAKqK,EAAGrK,MAAM,GACpCsK,EAAGtK,MAAM,GAAIuK,EAAGvK,MAAM,IAAKqK,EAAGrK,MAAM,GACpCsK,EAAGtK,MAAM,GAAIuK,EAAGvK,MAAM,IAAKqK,EAAGrK,MAAM,IAExC,OAAOuJ,EAAKC,SAAS1J,MAQzBqK,aAAA,SAAaK,EAAY/L,GACrBA,GAAY,GACZ,IAAMqD,EAAI3D,KAAK4D,IAAItD,GAKnB,OAJAO,KAAKC,KAAK,GAAK6C,EAAI0I,EAAKxK,MAAM,GAC9BhB,KAAKC,KAAK,GAAK6C,EAAI0I,EAAKxK,MAAM,GAC9BhB,KAAKC,KAAK,GAAK6C,EAAI0I,EAAKxK,MAAM,GAC9BhB,KAAKC,KAAK,GAAKd,KAAK8D,IAAIxD,WAS5BgM,mBAAA,SAAmBC,EAAaC,GAC5B,IACIhJ,EAAGC,EAAGS,EAAGC,EADTsG,EAAI8B,EAAM9K,QAAQ6G,IAAIkE,GAAO,EAsBjC,OApBI/B,EAAIvK,EAASQ,SACb+J,EAAI,EACAzK,KAAKS,IAAI8L,EAAM/I,GAAKxD,KAAKS,IAAI8L,EAAMrI,IACnCV,GAAM+I,EAAM9I,EACZA,EAAI8I,EAAM/I,EACVU,EAAI,EACJC,EAAIsG,IAEJjH,EAAI,EACJC,GAAM8I,EAAMrI,EACZA,EAAIqI,EAAM9I,EACVU,EAAIsG,KAIRjH,EAAI+I,EAAM9I,EAAI+I,EAAItI,EAAIqI,EAAMrI,EAAIsI,EAAI/I,EACpCA,EAAI8I,EAAMrI,EAAIsI,EAAIhJ,EAAI+I,EAAM/I,EAAIgJ,EAAItI,EACpCA,EAAIqI,EAAM/I,EAAIgJ,EAAI/I,EAAI8I,EAAM9I,EAAI+I,EAAIhJ,EACpCW,EAAIsG,QAEI1J,IAAIyC,EAAGC,EAAGS,EAAGC,GAAGkE,eAKhCoE,sBAAA,SAAsB7K,GAClB,IAKI+B,EAAGQ,EAAGX,EAAGC,EAAGS,EALVwI,EAAK9K,EAAEC,MACTT,EAAMsL,EAAG,GAAIrL,EAAMqL,EAAG,GAAIC,EAAMD,EAAG,GACnCnL,EAAMmL,EAAG,GAAIlL,EAAMkL,EAAG,GAAIE,EAAMF,EAAG,GACnCG,EAAMH,EAAG,GAAII,EAAMJ,EAAG,GAAIK,EAAML,EAAG,IACnCM,EAAQ5L,EAAMI,EAAMuL,EA2BxB,OAzBIC,EAAQ,GAER7I,EAAI,KADJR,EAAI,GAAM3D,KAAKkG,KAAK8G,EAAQ,IAE5BxJ,GAAKsJ,EAAMF,GAAOjJ,EAClBF,GAAKkJ,EAAME,GAAOlJ,EAClBO,GAAK3C,EAAMF,GAAOsC,GACXvC,EAAMI,GAAOJ,EAAM2L,GAE1B5I,GAAK2I,EAAMF,IADXjJ,EAAI,EAAM3D,KAAKkG,KAAK,EAAM9E,EAAMI,EAAMuL,IAEtCvJ,EAAI,IAAOG,EACXF,GAAKpC,EAAME,GAAOoC,EAClBO,GAAKyI,EAAME,GAAOlJ,GACXnC,EAAMuL,GAEb5I,GAAKwI,EAAME,IADXlJ,EAAI,EAAM3D,KAAKkG,KAAK,EAAM1E,EAAMJ,EAAM2L,IAEtCvJ,GAAKnC,EAAME,GAAOoC,EAClBF,EAAI,IAAOE,EACXO,GAAK0I,EAAME,GAAOnJ,IAGlBQ,GAAK5C,EAAMF,IADXsC,EAAI,EAAM3D,KAAKkG,KAAK,EAAM6G,EAAM3L,EAAMI,IAEtCgC,GAAKmJ,EAAME,GAAOlJ,EAClBF,GAAKmJ,EAAME,GAAOnJ,EAClBO,EAAI,IAAOP,QAEH5C,IAAIyC,EAAGC,EAAGS,EAAGC,MAU7B8I,aAAA,WACI,IAAM3M,EAAgC,EAA1BN,KAAKgL,KAAKnK,KAAKC,KAAK,IAC5B6C,EAAI3D,KAAK4D,IAAItD,EAAM,GACnB+L,EAAO,IAAI5E,EAEf,OADM,IAAN9D,EAAY0I,EAAKtL,IAAI,EAAG,EAAG,GAAKsL,EAAKtL,IAAIF,KAAKC,KAAK,GAAK6C,EAAG9C,KAAKC,KAAK,GAAK6C,EAAG9C,KAAKC,KAAK,GAAK6C,GACrF,CAAC0I,EAAM/L,MAMlB8F,IAAA,SAAImF,GAKA,OAJA1K,KAAKC,KAAK,IAAMyK,EAAIzK,KAAK,GACzBD,KAAKC,KAAK,IAAMyK,EAAIzK,KAAK,GACzBD,KAAKC,KAAK,IAAMyK,EAAIzK,KAAK,GACzBD,KAAKC,KAAK,IAAMyK,EAAIzK,KAAK,WAM7BiC,SAAA,SAASwI,SACoB1K,KAAKgB,MAAvB4G,OAAIC,OAAIC,OAAIuE,SACI3B,EAAI1J,MAAtB+G,OAAIC,OAAIC,OAAIqE,OAKjB,OAJAtM,KAAKC,KAAK,GAAK2H,EAAK0E,EAAKD,EAAKtE,EAAKF,EAAKI,EAAKH,EAAKE,EAClDhI,KAAKC,KAAK,GAAK4H,EAAKyE,EAAKD,EAAKrE,EAAKF,EAAKC,EAAKH,EAAKK,EAClDjI,KAAKC,KAAK,GAAK6H,EAAKwE,EAAKD,EAAKpE,EAAKL,EAAKI,EAAKH,EAAKE,EAClD/H,KAAKC,KAAK,GAAKoM,EAAKC,EAAK1E,EAAKG,EAAKF,EAAKG,EAAKF,EAAKG,UAMtD/E,MAAA,SAAMJ,GAKF,OAJA9C,KAAKC,KAAK,IAAM6C,EAChB9C,KAAKC,KAAK,IAAM6C,EAChB9C,KAAKC,KAAK,IAAM6C,EAChB9C,KAAKC,KAAK,IAAM6C,UAOpB4G,QAAA,SAAQjK,GACJA,GAAO,SACkBO,KAAKgB,MAAvB4G,OAAIC,OAAIC,OAAIuE,OACftE,EAAK5I,KAAK4D,IAAItD,GACd6M,EAAKnN,KAAK8D,IAAIxD,GAKlB,OAJAO,KAAKC,KAAK,GAAK2H,EAAK0E,EAAKD,EAAKtE,EAC9B/H,KAAKC,KAAK,GAAK4H,EAAKyE,EAAKxE,EAAKC,EAC9B/H,KAAKC,KAAK,GAAK6H,EAAKwE,EAAKzE,EAAKE,EAC9B/H,KAAKC,KAAK,GAAKoM,EAAKC,EAAK1E,EAAKG,UAOlC8B,QAAA,SAAQpK,GACJA,GAAO,SACkBO,KAAKC,KAAvB2H,OAAIC,OAAIC,OAAIuE,OACfrE,EAAK7I,KAAK4D,IAAItD,GACd6M,EAAKnN,KAAK8D,IAAIxD,GAKlB,OAJAO,KAAKC,KAAK,GAAK2H,EAAK0E,EAAKxE,EAAKE,EAC9BhI,KAAKC,KAAK,GAAK4H,EAAKyE,EAAKD,EAAKrE,EAC9BhI,KAAKC,KAAK,GAAK6H,EAAKwE,EAAK1E,EAAKI,EAC9BhI,KAAKC,KAAK,GAAKoM,EAAKC,EAAKzE,EAAKG,UAOlC8B,QAAA,SAAQrK,GACJA,GAAO,SACkBO,KAAKC,KAAvB2H,OAAIC,OAAIC,OAAIuE,OACfpE,EAAK9I,KAAK4D,IAAItD,GACd6M,EAAKnN,KAAK8D,IAAIxD,GAKlB,OAJAO,KAAKC,KAAK,GAAK2H,EAAK0E,EAAKzE,EAAKI,EAC9BjI,KAAKC,KAAK,GAAK4H,EAAKyE,EAAK1E,EAAKK,EAC9BjI,KAAKC,KAAK,GAAK6H,EAAKwE,EAAKD,EAAKpE,EAC9BjI,KAAKC,KAAK,GAAKoM,EAAKC,EAAKxE,EAAKG,UAQlCsE,WAAA,iBACuBvM,KAAKC,KAAnB0C,OAAGC,OAAGS,OAEX,OADArD,KAAKC,KAAK,GAAKd,KAAKkG,KAAKlG,KAAKS,IAAI,EAAM+C,EAAIA,EAAIC,EAAIA,EAAIS,EAAIA,YAOhEoE,IAAA,SAAIiD,SACyB1K,KAAKC,OACPyK,EAAI1J,MAC3B,kDAOJkH,KAAA,SAAKwC,EAAWvC,SACanI,KAAKC,KAAvB2H,OAAIC,OAAIC,OAAIuE,OAKnB,OAJArM,KAAKC,KAAK,GAAK2H,EAAKO,GAAKuC,EAAI1J,MAAM,GAAK4G,GACxC5H,KAAKC,KAAK,GAAK4H,EAAKM,GAAKuC,EAAI1J,MAAM,GAAK6G,GACxC7H,KAAKC,KAAK,GAAK6H,EAAKK,GAAKuC,EAAI1J,MAAM,GAAK8G,GACxC9H,KAAKC,KAAK,GAAKoM,EAAKlE,GAAKuC,EAAI1J,MAAM,GAAKqL,WAO5CG,MAAA,SAAM9M,EAASC,EAASwI,OAGhBsE,EAAOC,EAAOC,EAAOC,EAAQC,IAFVnN,EAAEsB,MAApB4G,OAAIC,OAAIC,OAAIuE,SACM1M,EAAEqB,MAApB+G,OAAIC,OAAIC,OAAIqE,OA8BjB,OA3BAI,EAAQ9E,EAAKG,EAAKF,EAAKG,EAAKF,EAAKG,EAAKoE,EAAKC,GAE/B,IACRI,GAASA,EACT3E,GAAOA,EACPC,GAAOA,EACPC,GAAOA,EACPqE,GAAOA,GAGN,EAAMI,EAAS,MAEhBD,EAAQtN,KAAKgL,KAAKuC,GAClBC,EAAQxN,KAAK4D,IAAI0J,GACjBG,EAASzN,KAAK4D,KAAK,EAAMoF,GAAKsE,GAASE,EACvCE,EAAS1N,KAAK4D,IAAIoF,EAAIsE,GAASE,IAI/BC,EAAS,EAAMzE,EACf0E,EAAS1E,GAGbnI,KAAKC,KAAK,GAAK2M,EAAShF,EAAKiF,EAAS9E,EACtC/H,KAAKC,KAAK,GAAK2M,EAAS/E,EAAKgF,EAAS7E,EACtChI,KAAKC,KAAK,GAAK2M,EAAS9E,EAAK+E,EAAS5E,EACtCjI,KAAKC,KAAK,GAAK2M,EAASP,EAAKQ,EAASP,UAU1CQ,OAAA,SAAOC,EAAUC,EAAUC,EAAUC,EAAU/E,GAO3C,OALAnI,KAAKmN,IAAOnN,KAAKmN,KAAO,IAAI5C,EAC5BvK,KAAKoN,IAAOpN,KAAKoN,KAAO,IAAI7C,EAC5BvK,KAAKmN,IAAMnN,KAAKmN,IAAIvM,QAAQ4L,MAAMO,EAAIG,EAAI/E,GAC1CnI,KAAKoN,IAAMpN,KAAKoN,IAAIxM,QAAQ4L,MAAMQ,EAAIC,EAAI9E,IAC9B,IAAIoC,GAAOiC,MAAMxM,KAAKmN,IAAKnN,KAAKoN,IAAK,EAAIjF,GAAK,EAAIA,OAOlEjH,OAAA,iBAC6BlB,KAAKC,KAAvByF,OAAIC,OAAIC,OAAIC,OACf4B,EAAM/B,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EAAKC,EAAKA,EACzCwH,EAAS5F,EAAM,EAAMA,EAAM,EAK/B,OAJAzH,KAAKC,KAAK,IAAMyF,EAAK2H,EACrBrN,KAAKC,KAAK,IAAM0F,EAAK0H,EACrBrN,KAAKC,KAAK,IAAM2F,EAAKyH,EACrBrN,KAAKC,KAAK,GAAK4F,EAAKwH,UAOxBC,UAAA,WAII,OAHAtN,KAAKC,KAAK,IAAMD,KAAKC,KAAK,GAC1BD,KAAKC,KAAK,IAAMD,KAAKC,KAAK,GAC1BD,KAAKC,KAAK,IAAMD,KAAKC,KAAK,WAO9BoH,IAAA,iBACyBrH,KAAKC,KAAnB0C,OAAGC,OAAGS,OAAGC,OAChB,OAAOnE,KAAKkG,KAAK1C,EAAIA,EAAIC,EAAIA,EAAIS,EAAIA,EAAIC,EAAIA,MAKjDkE,UAAA,WACI,IAAMH,EAAMrH,KAAKqH,MAOjB,OANIA,EAAM,IACNrH,KAAKC,KAAK,IAAMoH,EAChBrH,KAAKC,KAAK,IAAMoH,EAChBrH,KAAKC,KAAK,IAAMoH,EAChBrH,KAAKC,KAAK,IAAMoH,WAQxBlC,SAAA,WACI,MAAO,QAAUnF,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,OAMtGwF,OAAA,SAAOiF,SACsB1K,KAAKC,KAAvByF,OAAIC,OAAIC,OAAIC,SACI6E,EAAIzK,KAAtBkG,OAAIC,OAAIC,OAAIC,OACjB,OAAQnH,KAAKS,IAAI8F,EAAKS,IAAO9G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI8F,GAAKvG,KAAKS,IAAIuG,KACjFhH,KAAKS,IAAI+F,EAAKS,IAAO/G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI+F,GAAKxG,KAAKS,IAAIwG,KAC7EjH,KAAKS,IAAIgG,EAAKS,IAAOhH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIgG,GAAKzG,KAAKS,IAAIyG,KAC7ElH,KAAKS,IAAIiG,EAAKS,IAAOjH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIiG,GAAK1G,KAAKS,IAAI0G,kCAldjF,YAAYrG,KAAK,6BAMjB,YAAYA,KAAK,6BAMjB,YAAYA,KAAK,6BAMjB,YAAYA,KAAK,iCASjB,YAAYA,cC5CPsN,aAST,aACIvN,KAAKC,KAAO,IAAIX,MAAM,IACtBU,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,IAAM,EAChBD,KAAKC,KAAK,IAAM,EAChBD,KAAKC,KAAK,IAAM,EAChBD,KAAKC,KAAK,IAAM,EAChBD,KAAKC,KAAK,IAAM,EAChBD,KAAKC,KAAK,IAAM,EA1BxB,2BA0CIC,IAAA,SAAIC,EAAaC,EAAaC,EAAamN,EACvClN,EAAaC,EAAaC,EAAasL,EACvCrL,EAAaC,EAAaC,EAAaoL,EACvC0B,EAAazB,EAAaC,EAAaC,GAiBvC,OAhBAlM,KAAKC,KAAK,GAAKE,EACfH,KAAKC,KAAK,GAAKG,EACfJ,KAAKC,KAAK,GAAKI,EACfL,KAAKC,KAAK,GAAKuN,EACfxN,KAAKC,KAAK,GAAKK,EACfN,KAAKC,KAAK,GAAKM,EACfP,KAAKC,KAAK,GAAKO,EACfR,KAAKC,KAAK,GAAK6L,EACf9L,KAAKC,KAAK,GAAKQ,EACfT,KAAKC,KAAK,GAAKS,EACfV,KAAKC,KAAK,IAAMU,EAChBX,KAAKC,KAAK,IAAM8L,EAChB/L,KAAKC,KAAK,IAAMwN,EAChBzN,KAAKC,KAAK,IAAM+L,EAChBhM,KAAKC,KAAK,IAAMgM,EAChBjM,KAAKC,KAAK,IAAMiM,UAOpBtL,MAAA,WACI,IAAIE,EAAM,IAAIyM,EAKd,OAJAzM,EAAIZ,IAAIF,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,GACxDD,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,GACpDD,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,IAAKD,KAAKC,KAAK,IACrDD,KAAKC,KAAK,IAAKD,KAAKC,KAAK,IAAKD,KAAKC,KAAK,IAAKD,KAAKC,KAAK,KACpDa,KAMXG,SAAA,WAMI,OALAjB,KAAKE,IACD,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,WAQjBwN,sBAAA,WAEI,IAAIC,EAAU3N,KAAKC,KAAK,GACpB2N,EAAU5N,KAAKC,KAAK,GACpB4N,EAAU7N,KAAKC,KAAK,GACpB6N,EAAU9N,KAAKC,KAAK,GACpB8N,EAAU/N,KAAKC,KAAK,GACpB+N,EAAUhO,KAAKC,KAAK,GACpBgO,EAAUjO,KAAKC,KAAK,GACpBiO,EAAUlO,KAAKC,KAAK,GACpBkO,EAAWnO,KAAKC,KAAK,IAErBmO,EAAKpO,KAAKC,KAAK,IACfoO,EAAKrO,KAAKC,KAAK,IACfqO,EAAKtO,KAAKC,KAAK,IAEf0C,GAAKgL,EAAUS,EAAKR,EAAUS,EAAKR,EAAUS,EAC7C1L,GAAKkL,EAAUM,EAAKL,EAAUM,EAAKL,EAAUM,EAC7CjL,GAAK4K,EAAUG,EAAKF,EAAUG,EAAKF,EAAWG,EAmBlD,OAjBAtO,KAAKC,KAAK,GAAK0N,EACf3N,KAAKC,KAAK,GAAK6N,EACf9N,KAAKC,KAAK,GAAKgO,EACfjO,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK2N,EACf5N,KAAKC,KAAK,GAAK8N,EACf/N,KAAKC,KAAK,GAAKiO,EACflO,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK4N,EACf7N,KAAKC,KAAK,GAAK+N,EACfhO,KAAKC,KAAK,IAAMkO,EAChBnO,KAAKC,KAAK,IAAM,EAChBD,KAAKC,KAAK,IAAM0C,EAChB3C,KAAKC,KAAK,IAAM2C,EAChB5C,KAAKC,KAAK,IAAMoD,EAChBrD,KAAKC,KAAK,IAAM,UAQpBiB,OAAA,iBAE6FlB,KAAKC,KAAvFkB,OAAKC,OAAKC,OAAK+C,OAAK9C,OAAKC,OAAKC,OAAK6C,OAAK5C,OAAKC,OAAKC,QAAK2C,QAAKC,QAAKC,QAAKC,QAAKC,QAC9EvC,EAAMhB,EAAMI,EAAMH,EAAME,EACxBM,EAAMT,EAAMK,EAAMH,EAAMC,EACxBc,EAAMjB,EAAMkD,EAAMD,EAAM9C,EACxBqD,EAAMvD,EAAMI,EAAMH,EAAME,EACxBqD,EAAMxD,EAAMiD,EAAMD,EAAM7C,EACxBsD,EAAMxD,EAAMgD,EAAMD,EAAM5C,EACxBsD,EAAMrD,EAAM+C,EAAM9C,EAAM6C,EACxBQ,EAAMtD,EAAMgD,EAAM9C,EAAM4C,EACxBS,EAAMvD,EAAMiD,EAAMJ,EAAMC,EACxBU,EAAMvD,EAAM+C,EAAM9C,EAAM6C,EACxBnC,EAAMX,EAAMgD,EAAMJ,EAAME,EACxB3C,EAAMF,EAAM+C,EAAMJ,EAAMG,EAExB1C,EAAMI,EAAMN,EAAMD,EAAMS,EAAMD,EAAM6C,EAAMN,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,EAC5E,OAAK/C,GAGL/B,KAAKC,KAAO,EAAEsB,EAAMM,EAAML,EAAMa,EAAMgC,EAAMY,IAD5ClD,EAAM,EAAMA,IAC6CV,EAAMgB,EAAMjB,EAAMS,EAAMuC,EAAMa,GAAOlD,GAAMyC,EAAMK,EAAMJ,EAAMG,EAAMF,EAAMC,GAAO5C,GAAMJ,EAAMiD,EAAMlD,EAAMmD,EAAMP,EAAMK,GAAO5C,GACnLP,EAAMwD,EAAM1D,EAAMO,EAAMwC,EAAMU,GAAOhD,GAAMZ,EAAMU,EAAMR,EAAM2D,EAAMZ,EAAMW,GAAOhD,GAAM0C,EAAMrC,EAAMmC,EAAMM,EAAMH,EAAM9C,GAAOG,GAAMN,EAAMoD,EAAMlD,EAAMS,EAAMkC,EAAM1C,GAAOG,GACtKT,EAAMe,EAAMd,EAAMyD,EAAMX,EAAMS,GAAO/C,GAAMX,EAAM4D,EAAM7D,EAAMkB,EAAM+B,EAAMU,GAAO/C,GAAMwC,EAAMK,EAAMJ,EAAMpC,EAAMsC,EAAMvC,GAAOJ,GAAML,EAAMU,EAAMX,EAAMmD,EAAMN,EAAMnC,GAAOJ,GACtKR,EAAMwD,EAAMzD,EAAM2D,EAAMzD,EAAMsD,GAAO/C,GAAMZ,EAAM8D,EAAM7D,EAAM2D,EAAM1D,EAAMyD,GAAO/C,GAAMyC,EAAM5C,EAAM2C,EAAMI,EAAMF,EAAMtC,GAAOJ,GAAMN,EAAMkD,EAAMjD,EAAME,EAAMD,EAAMQ,GAAOJ,iBAO3KwM,UAAA,WAEI,IAAMnN,EAAMpB,KAAKC,KAAK,GAClBoB,EAAMrB,KAAKC,KAAK,GAChBmE,EAAMpE,KAAKC,KAAK,GAChBuB,EAAMxB,KAAKC,KAAK,GAChBoE,EAAMrE,KAAKC,KAAK,GAChBqE,EAAMtE,KAAKC,KAAK,IAcpB,OAZAD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GACzBD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GACzBD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IACzBD,KAAKC,KAAK,GAAKmB,EACfpB,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GACzBD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IACzBD,KAAKC,KAAK,GAAKoB,EACfrB,KAAKC,KAAK,GAAKuB,EACfxB,KAAKC,KAAK,IAAMD,KAAKC,KAAK,IAC1BD,KAAKC,KAAK,IAAMmE,EAChBpE,KAAKC,KAAK,IAAMoE,EAChBrE,KAAKC,KAAK,IAAMqE,UAOpBtC,QAAA,iBAC6FhC,KAAKC,KAAvFkB,OAAKC,OAAKC,OAAK+C,OAAK9C,OAAKC,OAAKC,OAAK6C,OAAK5C,OAAKC,OAAKC,QAAK2C,QAAKC,QAAKC,QAAKC,QAAKC,QAiBlF,OAhBA1E,KAAKC,KAAK,GAAMsB,GAAOI,EAAM+C,EAAMJ,EAAMG,GAAO/C,GAAOF,EAAMkD,EAAML,EAAMI,GAAOD,GAAOhD,EAAM8C,EAAMD,EAAM1C,GACzG3B,KAAKC,KAAK,KAAOmB,GAAOO,EAAM+C,EAAMJ,EAAMG,GAAO/C,GAAOL,EAAMqD,EAAMN,EAAMK,GAAOD,GAAOnD,EAAMiD,EAAMF,EAAMzC,IAC1G3B,KAAKC,KAAK,GAAMmB,GAAOI,EAAMkD,EAAML,EAAMI,GAAOlD,GAAOF,EAAMqD,EAAMN,EAAMK,GAAOD,GAAOnD,EAAMgD,EAAMD,EAAM5C,GACzGxB,KAAKC,KAAK,KAAOmB,GAAOI,EAAM8C,EAAMD,EAAM1C,GAAOJ,GAAOF,EAAMiD,EAAMF,EAAMzC,GAAOD,GAAOL,EAAMgD,EAAMD,EAAM5C,IAC1GxB,KAAKC,KAAK,KAAOqB,GAAOK,EAAM+C,EAAMJ,EAAMG,GAAOhD,GAAOD,EAAMkD,EAAML,EAAMI,GAAOF,GAAO/C,EAAM8C,EAAMD,EAAM1C,IAC1G3B,KAAKC,KAAK,GAAMkB,GAAOQ,EAAM+C,EAAMJ,EAAMG,GAAOhD,GAAOJ,EAAMqD,EAAMN,EAAMK,GAAOF,GAAOlD,EAAMiD,EAAMF,EAAMzC,GACzG3B,KAAKC,KAAK,KAAOkB,GAAOK,EAAMkD,EAAML,EAAMI,GAAOnD,GAAOD,EAAMqD,EAAMN,EAAMK,GAAOF,GAAOlD,EAAMgD,EAAMD,EAAM5C,IAC1GxB,KAAKC,KAAK,GAAMkB,GAAOK,EAAM8C,EAAMD,EAAM1C,GAAOL,GAAOD,EAAMiD,EAAMF,EAAMzC,GAAOF,GAAOJ,EAAMgD,EAAMD,EAAM5C,GACzGxB,KAAKC,KAAK,GAAMqB,GAAOI,EAAMgD,EAAMJ,EAAME,GAAO/C,GAAOF,EAAMmD,EAAML,EAAMG,GAAOD,GAAOhD,EAAM+C,EAAMD,EAAM3C,GACzG1B,KAAKC,KAAK,KAAOkB,GAAOO,EAAMgD,EAAMJ,EAAME,GAAO/C,GAAOL,EAAMsD,EAAMN,EAAMI,GAAOD,GAAOnD,EAAMkD,EAAMF,EAAM1C,IAC1G1B,KAAKC,KAAK,IAAOkB,GAAOI,EAAMmD,EAAML,EAAMG,GAAOlD,GAAOF,EAAMsD,EAAMN,EAAMI,GAAOD,GAAOnD,EAAMiD,EAAMD,EAAM7C,GAC1GvB,KAAKC,KAAK,MAAQkB,GAAOI,EAAM+C,EAAMD,EAAM3C,GAAOJ,GAAOF,EAAMkD,EAAMF,EAAM1C,GAAOD,GAAOL,EAAMiD,EAAMD,EAAM7C,IAC3GvB,KAAKC,KAAK,MAAQqB,GAAOI,EAAM+C,EAAM9C,EAAM6C,GAAO/C,GAAOF,EAAMkD,EAAMjD,EAAMgD,GAAOD,GAAOhD,EAAMI,EAAMH,EAAME,IAC3G1B,KAAKC,KAAK,IAAOkB,GAAOO,EAAM+C,EAAM9C,EAAM6C,GAAO/C,GAAOL,EAAMqD,EAAMpD,EAAMmD,GAAOD,GAAOnD,EAAMO,EAAMN,EAAMK,GAC1G1B,KAAKC,KAAK,MAAQkB,GAAOI,EAAMkD,EAAMjD,EAAMgD,GAAOlD,GAAOF,EAAMqD,EAAMpD,EAAMmD,GAAOD,GAAOnD,EAAMI,EAAMH,EAAME,IAC3GvB,KAAKC,KAAK,IAAOkB,GAAOI,EAAMI,EAAMH,EAAME,GAAOJ,GAAOF,EAAMO,EAAMN,EAAMK,GAAOD,GAAOL,EAAMI,EAAMH,EAAME,WAQ9GU,YAAA,iBAC6FjC,KAAKC,KAAvFkB,OAAKC,OAAKC,OAAK+C,OAAK9C,OAAKC,OAAKC,OAAK6C,OAAK5C,OAAKC,OAAKC,QAAK2C,QAAKC,QAAKC,QAAKC,QAAKC,QAclF,OAbUvD,EAAMI,EAAMH,EAAME,IAWlBK,EAAM+C,EAAMJ,EAAMG,IAVlBtD,EAAMK,EAAMH,EAAMC,IASlBI,EAAMgD,EAAMJ,EAAME,IARlBrD,EAAMkD,EAAMD,EAAM9C,IAOlBI,EAAM+C,EAAM9C,EAAM6C,IANlBpD,EAAMI,EAAMH,EAAME,IAKlBE,EAAMiD,EAAMJ,EAAMC,IAJlBnD,EAAMiD,EAAMD,EAAM7C,IAGlBE,EAAMgD,EAAM9C,EAAM4C,IAFlBlD,EAAMgD,EAAMD,EAAM5C,IAClBC,EAAM+C,EAAM9C,EAAM6C,MAgBhCiK,UAAA,WACI,IAAIC,GAAK,IAAI7H,GAAO1G,IAAIF,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,IAAIoH,MAC9DqH,GAAK,IAAI9H,GAAO1G,IAAIF,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,IAAIoH,MAC9DsH,GAAK,IAAI/H,GAAO1G,IAAIF,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,KAAKoH,MACvDrH,KAAKiC,cACP,IAAGwM,GAAMA,GACnB,IAAMG,GAAW,IAAIhI,GAAO1G,IAAIF,KAAKC,KAAK,IAAKD,KAAKC,KAAK,IAAKD,KAAKC,KAAK,KAClE4O,EAAQ,EAAIJ,EACdK,EAAQ,EAAIJ,EACZK,EAAQ,EAAIJ,EACVK,EAAKhP,KAAKY,QAYhB,OAXAoO,EAAG/O,KAAK,IAAM4O,EACdG,EAAG/O,KAAK,IAAM4O,EACdG,EAAG/O,KAAK,IAAM4O,EACdG,EAAG/O,KAAK,IAAM6O,EACdE,EAAG/O,KAAK,IAAM6O,EACdE,EAAG/O,KAAK,IAAM6O,EACdE,EAAG/O,KAAK,IAAM8O,EACdC,EAAG/O,KAAK,IAAM8O,EACdC,EAAG/O,KAAK,KAAO8O,EAGR,CAAEH,SAAAA,EAAUK,YAFA,IAAI1E,GAAOqB,sBAAsB5L,MAErBkD,OADjB,IAAI0D,GAAO1G,IAAIuO,EAAIC,EAAIC,OAQzCzM,SAAA,SAASpB,SACoFd,KAAKC,KAAvFkB,OAAKC,OAAKC,OAAK+C,OAAK9C,OAAKC,OAAKC,OAAK6C,OAAK5C,OAAKC,OAAKC,QAAK2C,QAAKC,QAAKC,QAAKC,QAAKC,QAE9EyB,EAAKrF,EAAIE,MAAM,GAAIoF,EAAKtF,EAAIE,MAAM,GAAIqF,EAAKvF,EAAIE,MAAM,GAAIsF,EAAKxF,EAAIE,MAAM,GAwB5E,OAvBAhB,KAAKC,KAAK,GAAKkG,EAAKhF,EAAMiF,EAAK9E,EAAM+E,EAAK5E,EAAM6E,EAAK/B,EACrDvE,KAAKC,KAAK,GAAKkG,EAAK/E,EAAMgF,EAAK7E,EAAM8E,EAAK3E,EAAM4E,EAAK9B,EACrDxE,KAAKC,KAAK,GAAKkG,EAAK9E,EAAM+E,EAAK5E,EAAM6E,EAAK1E,EAAM2E,EAAK7B,EACrDzE,KAAKC,KAAK,GAAKkG,EAAK/B,EAAMgC,EAAK/B,EAAMgC,EAAK/B,EAAMgC,EAAK5B,EAGrD1E,KAAKC,KAAK,IADVkG,EAAKrF,EAAIE,MAAM,IACKG,GADDiF,EAAKtF,EAAIE,MAAM,IACHM,GADO+E,EAAKvF,EAAIE,MAAM,IACXS,GADe6E,EAAKxF,EAAIE,MAAM,IACnBuD,EACrDvE,KAAKC,KAAK,GAAKkG,EAAK/E,EAAMgF,EAAK7E,EAAM8E,EAAK3E,EAAM4E,EAAK9B,EACrDxE,KAAKC,KAAK,GAAKkG,EAAK9E,EAAM+E,EAAK5E,EAAM6E,EAAK1E,EAAM2E,EAAK7B,EACrDzE,KAAKC,KAAK,GAAKkG,EAAK/B,EAAMgC,EAAK/B,EAAMgC,EAAK/B,EAAMgC,EAAK5B,EAGrD1E,KAAKC,KAAK,IADVkG,EAAKrF,EAAIE,MAAM,IACKG,GADDiF,EAAKtF,EAAIE,MAAM,IACHM,GADO+E,EAAKvF,EAAIE,MAAM,KACXS,GADgB6E,EAAKxF,EAAIE,MAAM,KACpBuD,EACrDvE,KAAKC,KAAK,GAAKkG,EAAK/E,EAAMgF,EAAK7E,EAAM8E,EAAK3E,EAAM4E,EAAK9B,EACrDxE,KAAKC,KAAK,IAAMkG,EAAK9E,EAAM+E,EAAK5E,EAAM6E,EAAK1E,EAAM2E,EAAK7B,EACtDzE,KAAKC,KAAK,IAAMkG,EAAK/B,EAAMgC,EAAK/B,EAAMgC,EAAK/B,EAAMgC,EAAK5B,EAGtD1E,KAAKC,KAAK,KADVkG,EAAKrF,EAAIE,MAAM,KACMG,GADDiF,EAAKtF,EAAIE,MAAM,KACHM,GADQ+E,EAAKvF,EAAIE,MAAM,KACZS,GADiB6E,EAAKxF,EAAIE,MAAM,KACrBuD,EACtDvE,KAAKC,KAAK,IAAMkG,EAAK/E,EAAMgF,EAAK7E,EAAM8E,EAAK3E,EAAM4E,EAAK9B,EACtDxE,KAAKC,KAAK,IAAMkG,EAAK9E,EAAM+E,EAAK5E,EAAM6E,EAAK1E,EAAM2E,EAAK7B,EACtDzE,KAAKC,KAAK,IAAMkG,EAAK/B,EAAMgC,EAAK/B,EAAMgC,EAAK/B,EAAMgC,EAAK5B,UAQ1Da,IAAA,SAAIzE,GAiBA,OAhBAd,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,IAAMa,EAAIE,MAAM,GAC1BhB,KAAKC,KAAK,KAAOa,EAAIE,MAAM,IAC3BhB,KAAKC,KAAK,KAAOa,EAAIE,MAAM,IAC3BhB,KAAKC,KAAK,KAAOa,EAAIE,MAAM,IAC3BhB,KAAKC,KAAK,KAAOa,EAAIE,MAAM,IAC3BhB,KAAKC,KAAK,KAAOa,EAAIE,MAAM,IAC3BhB,KAAKC,KAAK,KAAOa,EAAIE,MAAM,YAa/ByB,UAAA,SAAUkF,SACYA,EAAG3G,MAAd2B,OAAGC,OAAGS,SAC0ErD,KAAKC,KAAlFmB,OAAKC,OAAK+C,OAAU7C,OAAKC,OAAK6C,OAAU3C,OAAKC,QAAK2C,QAAUE,QAAKC,QAAKC,QAKhF,OAJA1E,KAAKC,KAAK,SAAY0C,OAAUC,OAAUS,QAC1CrD,KAAKC,KAAK,IAAMmB,EAAMuB,EAAIpB,EAAMqB,EAAIlB,EAAM2B,EAAImB,EAC9CxE,KAAKC,KAAK,IAAMoB,EAAMsB,EAAInB,EAAMoB,EAAIjB,EAAM0B,EAAIoB,EAC9CzE,KAAKC,KAAK,IAAMmE,EAAMzB,EAAI0B,EAAMzB,EAAI0B,EAAMjB,EAAIqB,UAQlDxB,MAAA,SAAM2D,SACcA,EAAI7F,MAAf2B,OAAGC,OAAGS,OAaX,OAZArD,KAAKC,KAAK,IAAM0C,EAChB3C,KAAKC,KAAK,IAAM0C,EAChB3C,KAAKC,KAAK,IAAM0C,EAChB3C,KAAKC,KAAK,IAAM0C,EAChB3C,KAAKC,KAAK,IAAM2C,EAChB5C,KAAKC,KAAK,IAAM2C,EAChB5C,KAAKC,KAAK,IAAM2C,EAChB5C,KAAKC,KAAK,IAAM2C,EAChB5C,KAAKC,KAAK,IAAMoD,EAChBrD,KAAKC,KAAK,IAAMoD,EAChBrD,KAAKC,KAAK,KAAOoD,EACjBrD,KAAKC,KAAK,KAAOoD,UASrBR,OAAA,SAAOpD,EAAa+L,SACqDxL,KAAKgB,MAAnEG,OAAKC,OAAKC,OAAK+C,OAAK9C,OAAKC,OAAKC,OAAK6C,OAAK5C,OAAKC,OAAKC,QAAK2C,UAC9CkH,EAAKxK,MAAhB2B,OAAGC,OAAGS,OACPgE,EAAMmE,EAAKnE,MACf,GAAIlI,KAAKS,IAAIyH,GAAOhI,EAASQ,QAAS,UAAUqF,MAAM,UACtD,IAAMnD,EAAM,EAAMsF,EAClB1E,GAAKZ,EACLa,GAAKb,EACLsB,GAAKtB,EACL,IAAIe,EAAI3D,KAAK4D,IAAItD,GACbuD,EAAI7D,KAAK8D,IAAIxD,GACb0I,EAAI,EAAInF,EAERb,EAAMQ,EAAIA,EAAIwF,EAAInF,EAClBpB,EAAMgB,EAAID,EAAIwF,EAAI9E,EAAIP,EACtBV,EAAMiB,EAAIV,EAAIwF,EAAIvF,EAAIE,EACtBT,EAAMM,EAAIC,EAAIuF,EAAI9E,EAAIP,EACtBjB,EAAMe,EAAIA,EAAIuF,EAAInF,EAClBV,EAAMe,EAAIT,EAAIuF,EAAIxF,EAAIG,EACtBP,EAAMI,EAAIU,EAAI8E,EAAIvF,EAAIE,EACtBhB,EAAMc,EAAIS,EAAI8E,EAAIxF,EAAIG,EACtBN,EAAMa,EAAIA,EAAI8E,EAAInF,EActB,OAZAhD,KAAKC,KAAK,GAAKkB,EAAMgB,EAAMb,EAAMM,EAAMH,EAAMW,EAC7CpC,KAAKC,KAAK,GAAKmB,EAAMe,EAAMZ,EAAMK,EAAMF,EAAMU,EAC7CpC,KAAKC,KAAK,GAAKoB,EAAMc,EAAMX,EAAMI,EAAMD,EAAMS,EAC7CpC,KAAKC,KAAK,GAAKmE,EAAMjC,EAAMkC,EAAMzC,EAAM0C,EAAMlC,EAC7CpC,KAAKC,KAAK,GAAKkB,EAAMkB,EAAMf,EAAMO,EAAMJ,EAAMa,EAC7CtC,KAAKC,KAAK,GAAKmB,EAAMiB,EAAMd,EAAMM,EAAMH,EAAMY,EAC7CtC,KAAKC,KAAK,GAAKoB,EAAMgB,EAAMb,EAAMK,EAAMF,EAAMW,EAC7CtC,KAAKC,KAAK,GAAKmE,EAAM/B,EAAMgC,EAAMxC,EAAMyC,EAAMhC,EAC7CtC,KAAKC,KAAK,GAAKkB,EAAMoB,EAAMjB,EAAMQ,EAAML,EAAMe,EAC7CxC,KAAKC,KAAK,GAAKmB,EAAMmB,EAAMhB,EAAMO,EAAMJ,EAAMc,EAC7CxC,KAAKC,KAAK,IAAMoB,EAAMkB,EAAMf,EAAMM,EAAMH,EAAMa,EAC9CxC,KAAKC,KAAK,IAAMmE,EAAM7B,EAAM8B,EAAMvC,EAAMwC,EAAM9B,UAQlDkH,QAAA,SAAQjK,GACJ,IAAMqD,EAAI3D,KAAK4D,IAAItD,GACfuD,EAAI7D,KAAK8D,IAAIxD,GACb6B,EAAMtB,KAAKC,KAAK,GAChBsB,EAAMvB,KAAKC,KAAK,GAChBuB,EAAMxB,KAAKC,KAAK,GAChBoE,EAAMrE,KAAKC,KAAK,GAChBwB,EAAMzB,KAAKC,KAAK,GAChByB,EAAM1B,KAAKC,KAAK,GAChB0B,EAAM3B,KAAKC,KAAK,IAChBqE,EAAMtE,KAAKC,KAAK,IAUpB,OARAD,KAAKC,KAAK,GAAKqB,EAAM0B,EAAIvB,EAAMqB,EAC/B9C,KAAKC,KAAK,GAAKsB,EAAMyB,EAAItB,EAAMoB,EAC/B9C,KAAKC,KAAK,GAAKuB,EAAMwB,EAAIrB,EAAMmB,EAC/B9C,KAAKC,KAAK,GAAKoE,EAAMrB,EAAIsB,EAAMxB,EAC/B9C,KAAKC,KAAK,GAAKwB,EAAMuB,EAAI1B,EAAMwB,EAC/B9C,KAAKC,KAAK,GAAKyB,EAAMsB,EAAIzB,EAAMuB,EAC/B9C,KAAKC,KAAK,IAAM0B,EAAMqB,EAAIxB,EAAMsB,EAChC9C,KAAKC,KAAK,IAAMqE,EAAMtB,EAAIqB,EAAMvB,UAQpC+G,QAAA,SAAQpK,GACJ,IAAMqD,EAAI3D,KAAK4D,IAAItD,GACfuD,EAAI7D,KAAK8D,IAAIxD,GACb0B,EAAMnB,KAAKC,KAAK,GAChBmB,EAAMpB,KAAKC,KAAK,GAChBoB,EAAMrB,KAAKC,KAAK,GAChBmE,EAAMpE,KAAKC,KAAK,GAChBwB,EAAMzB,KAAKC,KAAK,GAChByB,EAAM1B,KAAKC,KAAK,GAChB0B,EAAM3B,KAAKC,KAAK,IAChBqE,EAAMtE,KAAKC,KAAK,IAUpB,OARAD,KAAKC,KAAK,GAAKkB,EAAM6B,EAAIvB,EAAMqB,EAC/B9C,KAAKC,KAAK,GAAKmB,EAAM4B,EAAItB,EAAMoB,EAC/B9C,KAAKC,KAAK,GAAKoB,EAAM2B,EAAIrB,EAAMmB,EAC/B9C,KAAKC,KAAK,GAAKmE,EAAMpB,EAAIsB,EAAMxB,EAC/B9C,KAAKC,KAAK,GAAKkB,EAAM2B,EAAIrB,EAAMuB,EAC/BhD,KAAKC,KAAK,GAAKmB,EAAM0B,EAAIpB,EAAMsB,EAC/BhD,KAAKC,KAAK,IAAMoB,EAAMyB,EAAInB,EAAMqB,EAChChD,KAAKC,KAAK,IAAMmE,EAAMtB,EAAIwB,EAAMtB,UAQpC8G,QAAA,SAAQrK,GACJ,IAAMqD,EAAI3D,KAAK4D,IAAItD,GACfuD,EAAI7D,KAAK8D,IAAIxD,GACb0B,EAAMnB,KAAKC,KAAK,GAChBmB,EAAMpB,KAAKC,KAAK,GAChBoB,EAAMrB,KAAKC,KAAK,GAChBmE,EAAMpE,KAAKC,KAAK,GAChBqB,EAAMtB,KAAKC,KAAK,GAChBsB,EAAMvB,KAAKC,KAAK,GAChBuB,EAAMxB,KAAKC,KAAK,GAChBoE,EAAMrE,KAAKC,KAAK,GAUpB,OARAD,KAAKC,KAAK,GAAKkB,EAAM6B,EAAI1B,EAAMwB,EAC/B9C,KAAKC,KAAK,GAAKmB,EAAM4B,EAAIzB,EAAMuB,EAC/B9C,KAAKC,KAAK,GAAKoB,EAAM2B,EAAIxB,EAAMsB,EAC/B9C,KAAKC,KAAK,GAAKmE,EAAMpB,EAAIqB,EAAMvB,EAC/B9C,KAAKC,KAAK,GAAKqB,EAAM0B,EAAI7B,EAAM2B,EAC/B9C,KAAKC,KAAK,GAAKsB,EAAMyB,EAAI5B,EAAM0B,EAC/B9C,KAAKC,KAAK,GAAKuB,EAAMwB,EAAI3B,EAAMyB,EAC/B9C,KAAKC,KAAK,GAAKoE,EAAMrB,EAAIoB,EAAMtB,UAW5BoM,oBAAP,SAA2BvH,SACLA,EAAG3G,MAAd2B,OAAGC,OAAGS,OACTiH,EAAK,IAAIiD,EAKb,OAJAjD,EAAGpK,IAAI,EAAG,EAAG,EAAG,EACZ,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,EACTyC,EAAGC,EAAGS,EAAG,GACNiH,KAQJ6E,oBAAP,SAA2BC,EAAWtO,GAClC,WAAWyM,GAAOrN,IACdkP,EAAInP,KAAK,GAAImP,EAAInP,KAAK,GAAImP,EAAInP,KAAK,GAAIa,EAAI6B,EAC3CyM,EAAInP,KAAK,GAAImP,EAAInP,KAAK,GAAImP,EAAInP,KAAK,GAAIa,EAAI8B,EAC3CwM,EAAInP,KAAK,GAAImP,EAAInP,KAAK,GAAImP,EAAInP,KAAK,GAAIa,EAAIuC,EAC3C,EAAK,EAAK,EAAK,MAWhBgM,YAAP,SAAmBxI,SACGA,EAAI7F,MAAf2B,OAAGC,OAAGS,OACTvC,EAAM,IAAIyM,EAKd,OAJAzM,EAAIZ,IAAIyC,EAAG,EAAG,EAAG,EACb,EAAGC,EAAG,EAAG,EACT,EAAG,EAAGS,EAAG,EACT,EAAG,EAAG,EAAG,GACNvC,KAWJwO,aAAP,SAAoB7P,EAAa+L,OAIzB1I,EAAGE,EAAGmF,IAHMqD,EAAKxK,MAAhB2B,OAAGC,OAAGS,OACPgE,EAAMmE,EAAKnE,MACXvG,EAAM,IAAIyM,EAEd,GAAIlG,EAAMhI,EAASQ,QAAS,UAAUqF,MAAM,QAa5C,OAXAvC,GADA0E,EAAM,EAAMA,EAEZzE,GAAKyE,EACLhE,GAAKgE,EACLvE,EAAI3D,KAAK4D,IAAItD,GACbuD,EAAI7D,KAAK8D,IAAIxD,GAGbqB,EAAIZ,IAAIyC,EAAIA,GAFZwF,EAAI,EAAInF,GAEYA,EAAGJ,EAAID,EAAIwF,EAAI9E,EAAIP,EAAGO,EAAIV,EAAIwF,EAAIvF,EAAIE,EAAG,EACzDH,EAAIC,EAAIuF,EAAI9E,EAAIP,EAAGF,EAAIA,EAAIuF,EAAInF,EAAGK,EAAIT,EAAIuF,EAAIxF,EAAIG,EAAG,EACrDH,EAAIU,EAAI8E,EAAIvF,EAAIE,EAAGF,EAAIS,EAAI8E,EAAIxF,EAAIG,EAAGO,EAAIA,EAAI8E,EAAInF,EAAG,EACrD,EAAG,EAAG,EAAG,GACNlC,KAUJyO,cAAP,SAAqB9P,GACjB,IAAMqB,EAAM,IAAIyM,EACZzK,EAAI3D,KAAK4D,IAAItD,GACbuD,EAAI7D,KAAK8D,IAAIxD,GAKjB,OAJAqB,EAAIZ,IAAI,EAAG,EAAG,EAAG,EACb,EAAG8C,EAAGF,EAAG,EACT,GAAIA,EAAGE,EAAG,EACV,EAAG,EAAG,EAAG,GACNlC,KAWJ0O,cAAP,SAAqB/P,GACjB,IAAMqB,EAAM,IAAIyM,EACZzK,EAAI3D,KAAK4D,IAAItD,GACbuD,EAAI7D,KAAK8D,IAAIxD,GAMjB,OAJAqB,EAAIZ,IAAI8C,EAAG,GAAIF,EAAG,EACd,EAAG,EAAG,EAAG,EACTA,EAAG,EAAGE,EAAG,EACT,EAAG,EAAG,EAAG,GACNlC,KAWJ2O,cAAP,SAAqBhQ,GACjB,IAAMqB,EAAM,IAAIyM,EACZzK,EAAI3D,KAAK4D,IAAItD,GACbuD,EAAI7D,KAAK8D,IAAIxD,GAMjB,OAJAqB,EAAIZ,IAAI8C,EAAGF,EAAG,EAAG,GACZA,EAAGE,EAAG,EAAG,EACV,EAAG,EAAG,EAAG,EACT,EAAG,EAAG,EAAG,GACNlC,KAUX4O,eAAA,WACI,IAAM/H,EAAK,IAAIf,EAEf,OADAe,EAAGzH,IAAIF,KAAKC,KAAK,IAAKD,KAAKC,KAAK,IAAKD,KAAKC,KAAK,KACxC0H,KAOXgI,eAAA,SAAehI,GAIX,OAHA3H,KAAKC,KAAK,IAAM0H,EAAGhF,EACnB3C,KAAKC,KAAK,IAAM0H,EAAG/E,EACnB5C,KAAKC,KAAK,IAAM0H,EAAGtE,UAgBhBuM,wBAAP,SAA+BlF,EAAW7D,GAEhC,IAAA/F,EAAM,IAAIyM,IACG7C,EAAI1J,MAAlB2B,OAAGC,OAAGS,OAAGC,SACKuD,EAAI7F,MACnBuC,EAAKZ,EAAIA,EACTa,EAAKZ,EAAIA,EACTa,EAAKJ,EAAIA,EACTK,EAAKf,EAAIY,EACTsM,EAAKlN,EAAIa,EACTsM,EAAKnN,EAAIc,EACTG,EAAKhB,EAAIY,EACTuM,EAAKnN,EAAIa,EACTM,EAAKV,EAAII,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAKb,OAJA3C,EAAIZ,IAAI,GAAK0D,EAAKG,GAAK8L,EAAK3L,EAAI4L,EAAK7L,EAAI,EACrC4L,EAAK3L,EAAI,GAAKR,EAAKK,GAAKgM,EAAK/L,EAAI,EACjC8L,EAAK7L,EAAI8L,EAAK/L,EAAI,GAAKN,EAAKE,GAAK,iBACrB,GACT9C,KAWXkP,WAAA,WACI,IAAIzP,EAAMP,KAAKC,KAAK,GAChBO,EAAMR,KAAKC,KAAK,GAChB6L,EAAM9L,KAAKC,KAAK,GAChBS,EAAMV,KAAKC,KAAK,GAChBU,EAAMX,KAAKC,KAAK,GAChB8L,EAAM/L,KAAKC,KAAK,GAChB+L,EAAMhM,KAAKC,KAAK,GAChBgM,EAAMjM,KAAKC,KAAK,GAChBiM,EAAMlM,KAAKC,KAAK,IACd0C,EAAIxD,KAAKkG,KAAK9E,EAAMA,EAAMC,EAAMA,EAAMsL,EAAMA,GAC9ClJ,EAAIzD,KAAKkG,KAAK3E,EAAMA,EAAMC,EAAMA,EAAMoL,EAAMA,GAC5C1I,EAAIlE,KAAKkG,KAAK2G,EAAMA,EAAMC,EAAMA,EAAMC,EAAMA,GAEhD,OADY,IAAItF,GAAO1G,IAAIyC,EAAGC,EAAGS,MAYrC4M,YAAA,WACI,IACItN,EAAGC,EAAGS,EAAGC,EADT4M,EAAI,EAEJxF,EAAM,IAAIH,EACV4B,EAAQnM,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IA2BpD,OA1BIkM,EAAQ,GAER7I,EAAI,KADJ4M,EAA6B,EAAzB/Q,KAAKkG,KAAK8G,EAAQ,IAEtBxJ,GAAK3C,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,EACpCtN,GAAK5C,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,EACpC7M,GAAKrD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,GAC5BlQ,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAQD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,KAClEiQ,EAAmE,EAA/D/Q,KAAKkG,KAAK,EAAMrF,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,KAC5DqD,GAAKtD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,EACpCvN,EAAI,IAAOuN,EACXtN,GAAK5C,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,EACpC7M,GAAKrD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,GAC7BlQ,KAAKC,KAAK,GAAKD,KAAKC,KAAK,KAChCiQ,EAAmE,EAA/D/Q,KAAKkG,KAAK,EAAMrF,KAAKC,KAAK,GAAKD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,KAC5DqD,GAAKtD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,EACpCvN,GAAK3C,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,EACpCtN,EAAI,IAAOsN,EACX7M,GAAKrD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,IAEpCA,EAAmE,EAA/D/Q,KAAKkG,KAAK,EAAMrF,KAAKC,KAAK,IAAMD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAC7DqD,GAAKtD,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,EACpCvN,GAAK3C,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,EACpCtN,GAAK5C,KAAKC,KAAK,GAAKD,KAAKC,KAAK,IAAMiQ,EACpC7M,EAAI,IAAO6M,GAEfxF,EAAIxK,IAAIyC,EAAGC,EAAGS,EAAGC,GACVoH,KAiBJyF,6BAAP,SAAoC/M,EAASV,EAASI,GAC5C,IAAAhC,EAAM,IAAIyM,IACGnK,EAAEpC,MAAhB2B,OAAGC,OAAGS,OAAGC,SACKZ,EAAE1B,QACF8B,EAAE9B,MAAhByN,OAAIC,OAAIC,OACTpL,EAAKZ,EAAIA,EACTa,EAAKZ,EAAIA,EACTa,EAAKJ,EAAIA,EACTK,EAAKf,EAAIY,EACTsM,EAAKlN,EAAIa,EACTsM,EAAKnN,EAAIc,EACTG,EAAKhB,EAAIY,EACTuM,EAAKnN,EAAIa,EACTM,EAAKV,EAAII,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAKb,OAJA3C,EAAIZ,KAAK,GAAK0D,EAAKG,IAAO0K,GAAKoB,EAAK3L,GAAMuK,GAAKqB,EAAK7L,GAAMwK,EAAI,GACzDoB,EAAK3L,GAAMwK,GAAK,GAAKhL,EAAKK,IAAO2K,GAAKqB,EAAK/L,GAAM0K,EAAI,GACrDoB,EAAK7L,GAAM0K,GAAKoB,EAAK/L,GAAM2K,GAAK,GAAKjL,EAAKE,IAAO+K,EAAI,iBAC1C,GACT7N,KAqBJsP,mCAAP,SAA0ChN,EAASV,EAASI,EAASuN,GAE3D,IAAAvP,EAAM,IAAIyM,IACGnK,EAAEpC,MAAhB2B,OAAGC,OAAGS,OAAGC,SACKZ,EAAE1B,MAAhByN,OAAIC,OAAIC,SACM0B,EAAErP,MAAhBsP,OAAIC,OAAIC,SACM9N,EAAE1B,MACjBuC,EAAKZ,EAAIA,EACTa,EAAKZ,EAAIA,EACTa,EAAKJ,EAAIA,EACTK,EAAKf,EAAIY,EACTsM,EAAKlN,EAAIa,EACTsM,EAAKnN,EAAIc,EACTG,EAAKhB,EAAIY,EACTuM,EAAKnN,EAAIa,EACTM,EAAKV,EAAII,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EACPgN,GAAM,GAAK7M,EAAKG,IAAO0K,EACzBiC,GAAMb,EAAK3L,GAAMuK,EACjBkC,GAAMb,EAAK7L,GAAMwK,EACjBmC,GAAMf,EAAK3L,GAAMwK,EACjBmC,GAAM,GAAKnN,EAAKK,IAAO2K,EACvBoC,GAAMf,EAAK/L,GAAM0K,EACjBqC,GAAMjB,EAAK7L,GAAM0K,EACjBqC,GAAMjB,EAAK/L,GAAM2K,EACjBsC,GAAO,GAAKvN,EAAKE,IAAO+K,EAQ5B,OAJA7N,EAAIZ,IAAIuQ,EAAIC,EAAIC,EAAI,EAChBC,EAAIC,EAAIC,EAAI,EACZC,EAAIC,EAAIC,EAAK,OALFX,GAAMG,EAAKH,EAAKM,EAAKL,EAAKQ,EAAKP,QAC/BD,GAAMG,EAAKJ,EAAKO,EAAKN,EAAKS,EAAKR,QAC/BA,GAAMG,EAAKL,EAAKQ,EAAKP,EAAKU,EAAMT,GAI5B,GACZ1P,KAQJqC,SAAP,SAAgBC,GACN,IAAAtC,EAAM,IAAIyM,IACGnK,EAAEpC,MAAhB2B,OAAGC,OAAGS,OAAGC,OACVC,EAAKZ,EAAIA,EACTa,EAAKZ,EAAIA,EACTa,EAAKJ,EAAIA,EACTK,EAAKf,EAAIY,EACTI,EAAKf,EAAIW,EACTK,EAAKhB,EAAIY,EACTK,EAAKR,EAAIE,EACTO,EAAKT,EAAIG,EACTO,EAAKV,EAAII,EACTO,EAAKV,EAAIC,EACTU,EAAKX,EAAIE,EACTU,EAAKZ,EAAIG,EAKb,OAJA3C,EAAIZ,IAAI,EAAI0D,EAAKG,EAAIJ,EAAKO,EAAIL,EAAKI,EAAI,EACnCN,EAAKO,EAAI,EAAIR,EAAKK,EAAID,EAAKE,EAAI,EAC/BH,EAAKI,EAAIH,EAAKE,EAAI,EAAIN,EAAKE,EAAI,EAC/B,EAAG,EAAG,EAAG,GACN9C,KAaJoQ,QAAP,SAAeC,EAAWvH,EAAWjK,EAAWwI,EAAWhB,EAAWiK,GAClE,IAAItQ,EAAM,IAAIyM,EACV8D,EAAK,GAAKzH,EAAIuH,GACdG,EAAK,GAAKnJ,EAAIxI,GACd4R,EAAK,GAAKpK,EAAIiK,GAKlB,OAJAtQ,EAAIZ,IAAS,EAAJiH,EAASkK,EAAI,EAAG,EAAG,EACxB,EAAQ,EAAJlK,EAASmK,EAAI,EAAG,GACnB1H,EAAIuH,GAAKE,GAAKlJ,EAAIxI,GAAK2R,GAAKF,EAAIjK,GAAKoK,GAAK,EAC3C,EAAG,EAAIH,EAAIjK,EAAI,EAAKoK,EAAI,GACrBzQ,KAWJ0Q,YAAP,SAAmBC,EAAcC,EAAgBC,EAAcC,GAC3D,IAAMtH,EAAK,IAAIiD,EAIX6D,EAAIjS,KAAK0S,IAAuB,IAAlB1S,KAAKC,GAAKqS,IACxBF,EAAK,GAAOI,EAAOC,GAKvB,OAJAtH,EAAGpK,IAAIkR,EAAIM,EAAQ,EAAG,EAAG,EACrB,EAAGN,EAAG,EAAG,EACT,EAAG,GAAIQ,EAAMD,GAAQJ,GAAK,EAC1B,EAAG,EAAI,EAAIK,EAAMD,EAAQJ,EAAI,GAC1BjH,KAYJwH,eAAP,SAAsBL,EAAcC,EAAgBC,EAAcC,GAC9D,IAAMtH,EAAK,IAAIiD,EACX6D,EAAI,EAAMjS,KAAK0S,IAAIJ,EAAO,GAC1BF,EAAK,GAAKI,EAAOC,GAUrB,OAJAtH,EAAGpK,IAAIkR,EAAIM,EAAQ,EAAG,EAAG,EACrB,EAAGN,EAAG,EAAG,EACT,EAAG,GAAIQ,EAAMD,GAAQJ,GAAK,EAC1B,EAAG,EAAG,EAAIK,EAAMD,EAAOJ,EAAI,GACxBjH,KAUJyH,cAAP,SAAqBN,EAAcC,EAAgBC,EAAcC,GAC7D,IAAMtH,EAAK,IAAIiD,EACX6D,EAAI,EAAMjS,KAAK0S,IAAIJ,EAAO,GAC1BF,EAAK,GAAKI,EAAOC,GAUrB,OAJAtH,EAAGpK,IAAIkR,EAAIM,EAAQ,EAAG,EAAG,EACrB,EAAGN,EAAG,EAAG,EACT,EAAG,EAAGQ,EAAML,GAAK,EACjB,EAAG,EAAGK,EAAMD,EAAOJ,EAAI,GACpBjH,KAYJ0H,2BAAP,SAAkCC,EAAYC,EAAcC,EAAcC,EAAeT,EAAcC,GACnG,IAAMtH,EAAK,IAAIiD,EACX8E,EAAQlT,KAAK0S,IAAII,EAAK9S,KAAKC,GAAK,KAChCkT,EAAUnT,KAAK0S,IAAIK,EAAO/S,KAAKC,GAAK,KACpCmT,EAAUpT,KAAK0S,IAAIM,EAAOhT,KAAKC,GAAK,KACpCoT,EAAWrT,KAAK0S,IAAIO,EAAQjT,KAAKC,GAAK,KACtCqT,EAAS,GAAOF,EAAUC,GAC1BE,EAAS,GAAOL,EAAQC,GAK5B,OAJAhI,EAAGpK,IAAIuS,EAAQ,EAAG,EAAG,EACjB,EAAGC,EAAQ,EAAG,IACXH,EAAUC,GAAYC,EAAS,IAAQJ,EAAQC,GAAWI,EAAS,GAAMd,GAAOD,EAAOC,IAAO,EACjG,EAAG,EAAIA,EAAMD,GAASA,EAAOC,GAAM,GAChCtH,KAcJqI,MAAP,SAAaR,EAAcC,EAAeQ,EAAgBC,EAAalB,EAAcC,GACjF,IAAM9Q,EAAM,IAAIyM,EACZuF,EAAK,GAAOX,EAAOC,GACnBW,EAAK,GAAOH,EAASC,GACrBtB,EAAK,GAAOI,EAAOC,GAKvB,OAJA9Q,EAAIZ,KAAK,EAAI4S,EAAI,EAAG,EAAG,EACnB,GAAI,EAAIC,EAAI,EAAG,EACf,EAAG,EAAG,EAAIxB,EAAI,GACbY,EAAOC,GAASU,GAAKD,EAAMD,GAAUG,GAAKnB,EAAMD,GAAQJ,EAAI,GAC1DzQ,KAUXkS,OAAA,SAAOC,EAAsBC,EAAcjB,GACvC,IAAMkB,EAAQF,EAAerS,QAAQ4E,IAAI0N,GAAQ1L,YAC7C4L,EAAQnB,EAAGrR,QAAQ8G,MAAMyL,GACzBE,EAAQF,EAAMvS,QAAQ8G,MAAM0L,GAOhC,OANApT,KAAKE,IACDkT,EAAMpS,MAAM,GAAIoS,EAAMpS,MAAM,GAAIoS,EAAMpS,MAAM,GAAI,EAChDqS,EAAMrS,MAAM,GAAIqS,EAAMrS,MAAM,GAAIqS,EAAMrS,MAAM,GAAI,EAChDmS,EAAMnS,MAAM,GAAImS,EAAMnS,MAAM,GAAImS,EAAMnS,MAAM,GAAI,EAChDiS,EAAejS,MAAM,GAAIiS,EAAejS,MAAM,GAAIiS,EAAejS,MAAM,GAAI,WASnFmE,SAAA,WACI,MAAO,QACHnF,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KACjFD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KACjFD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,IAAM,KAAOD,KAAKC,KAAK,IAAM,KACnFD,KAAKC,KAAK,IAAM,KAAOD,KAAKC,KAAK,IAAM,KAAOD,KAAKC,KAAK,IAAM,KAAOD,KAAKC,KAAK,IAAM,OAO7FqT,KAAA,WACI,OAAOnU,KAAKkG,KAAKlG,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GACxHd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAC3Gd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,GAAI,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,IAAK,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,IAAK,GAC7Gd,KAAKmG,IAAItF,KAAKC,KAAK,IAAK,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,IAAK,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,IAAK,GAAKd,KAAKmG,IAAItF,KAAKC,KAAK,IAAK,OAQvHuF,IAAA,SAAI8E,GAiBA,OAhBAtK,KAAKC,KAAK,IAAMqK,EAAGtJ,MAAM,GACzBhB,KAAKC,KAAK,IAAMqK,EAAGtJ,MAAM,GACzBhB,KAAKC,KAAK,IAAMqK,EAAGtJ,MAAM,GACzBhB,KAAKC,KAAK,IAAMqK,EAAGtJ,MAAM,GACzBhB,KAAKC,KAAK,IAAMqK,EAAGtJ,MAAM,GACzBhB,KAAKC,KAAK,IAAMqK,EAAGtJ,MAAM,GACzBhB,KAAKC,KAAK,IAAMqK,EAAGtJ,MAAM,GACzBhB,KAAKC,KAAK,IAAMqK,EAAGtJ,MAAM,GACzBhB,KAAKC,KAAK,IAAMqK,EAAGtJ,MAAM,GACzBhB,KAAKC,KAAK,IAAMqK,EAAGtJ,MAAM,GACzBhB,KAAKC,KAAK,KAAOqK,EAAGtJ,MAAM,IAC1BhB,KAAKC,KAAK,KAAOqK,EAAGtJ,MAAM,IAC1BhB,KAAKC,KAAK,KAAOqK,EAAGtJ,MAAM,IAC1BhB,KAAKC,KAAK,KAAOqK,EAAGtJ,MAAM,IAC1BhB,KAAKC,KAAK,KAAOqK,EAAGtJ,MAAM,IAC1BhB,KAAKC,KAAK,KAAOqK,EAAGtJ,MAAM,YAS9ByE,OAAA,SAAO6E,SAC4EtK,KAAKC,KAA7EyF,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIqN,OAAIjS,QAAKC,QAAKC,QAAK6C,QAAKmP,QAAKC,UACKnJ,EAAGtJ,MAA3EmF,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAIC,OAAI+M,OAAIrR,QAAKR,QAAKS,QAAKqR,QAAKC,QAAKC,QACtE,OAAQ1U,KAAKS,IAAI8F,EAAKS,IAAO9G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI8F,GAAKvG,KAAKS,IAAIuG,KACjFhH,KAAKS,IAAI+F,EAAKS,IAAO/G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI+F,GAAKxG,KAAKS,IAAIwG,KAC7EjH,KAAKS,IAAIgG,EAAKS,IAAOhH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIgG,GAAKzG,KAAKS,IAAIyG,KAC7ElH,KAAKS,IAAIiG,EAAKS,IAAOjH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIiG,GAAK1G,KAAKS,IAAI0G,KAC7EnH,KAAKS,IAAIkG,EAAKS,IAAOlH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIkG,GAAK3G,KAAKS,IAAI2G,KAC7EpH,KAAKS,IAAImG,EAAKS,IAAOnH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAImG,GAAK5G,KAAKS,IAAI4G,KAC7ErH,KAAKS,IAAIoG,EAAKS,IAAOpH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIoG,GAAK7G,KAAKS,IAAI6G,KAC7EtH,KAAKS,IAAIqG,EAAKS,IAAOrH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIqG,GAAK9G,KAAKS,IAAI8G,KAC7EvH,KAAKS,IAAIsG,EAAKS,IAAOtH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIsG,GAAK/G,KAAKS,IAAI+G,KAC7ExH,KAAKS,IAAI2T,EAAKG,IAAOrU,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI2T,GAAKpU,KAAKS,IAAI8T,KAC7EvU,KAAKS,IAAI0B,EAAMe,IAAQhD,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI0B,GAAMnC,KAAKS,IAAIyC,KAChFlD,KAAKS,IAAI2B,EAAMM,IAAQxC,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI2B,GAAMpC,KAAKS,IAAIiC,KAChF1C,KAAKS,IAAI4B,EAAMc,IAAQjD,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI4B,GAAMrC,KAAKS,IAAI0C,KAChFnD,KAAKS,IAAIyE,EAAMsP,IAAQtU,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIyE,GAAMlF,KAAKS,IAAI+T,KAChFxU,KAAKS,IAAI4T,EAAMI,IAAQvU,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI4T,GAAMrU,KAAKS,IAAIgU,KAChFzU,KAAKS,IAAI6T,EAAMI,IAAQxU,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI6T,GAAMtU,KAAKS,IAAIiU,sCAziCpF,YAAY5T,cC9DP6T,aAQT,aACI9T,KAAKC,KAAO,IAAIX,MAAM,GACtBU,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EAXvB6T,EAqCWvU,OAAP,SAAc2D,YAAAA,IAAAA,EAAgB,GAC1BA,EAAQA,GAAS,EACjB,IAAM0G,EAAwB,EAApBvK,EAAS0U,SAAiB5U,KAAKC,GAEzC,OADU,IAAI0U,GAAO5T,IAAIf,KAAK8D,IAAI2G,GAAK1G,EAAO/D,KAAK4D,IAAI6G,GAAK1G,+BAMhEhD,IAAA,SAAIyC,EAAWC,GAGX,OAFA5C,KAAKC,KAAK,GAAK0C,EACf3C,KAAKC,KAAK,GAAK2C,UAMnBhC,MAAA,WACI,IAAIiG,EAAM,IAAIiN,EAEd,OADAjN,EAAI3G,IAAIF,KAAKC,KAAK,GAAID,KAAKC,KAAK,IACzB4G,KAMXtB,IAAA,SAAIsB,GAGA,OAFA7G,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,WAO7BuF,IAAA,SAAIqB,GAGA,OAFA7G,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,WAO7BiC,SAAA,SAAS2E,GAGL,OAFA7G,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,WAO7B6G,OAAA,SAAOD,GAGH,OAFA7G,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,GACzBD,KAAKC,KAAK,IAAM4G,EAAI5G,KAAK,WAO7B8G,KAAA,WAGI,OAFA/G,KAAKC,KAAK,GAAKd,KAAK4H,KAAK/G,KAAKC,KAAK,IACnCD,KAAKC,KAAK,GAAKd,KAAK4H,KAAK/G,KAAKC,KAAK,YAMvC+G,MAAA,WAGI,OAFAhH,KAAKC,KAAK,GAAKd,KAAK6H,MAAMhH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK6H,MAAMhH,KAAKC,KAAK,YAMxCgH,MAAA,WAGI,OAFAjH,KAAKC,KAAK,GAAKd,KAAK8H,MAAMjH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK8H,MAAMjH,KAAKC,KAAK,YAOxCiH,IAAA,SAAIL,GAGA,OAFA7G,KAAKC,KAAK,GAAKd,KAAK+H,IAAIlH,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,IAC/CD,KAAKC,KAAK,GAAKd,KAAK+H,IAAIlH,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,YAMnDH,IAAA,SAAI+G,GAGA,OAFA7G,KAAKC,KAAK,GAAKd,KAAKW,IAAIE,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,IAC/CD,KAAKC,KAAK,GAAKd,KAAKW,IAAIE,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,YAOnDiD,MAAA,SAAMiE,GAGF,OAFAnH,KAAKC,KAAK,IAAMkH,EAChBnH,KAAKC,KAAK,IAAMkH,UAMpBC,SAAA,SAAS1E,GACL,IAAMC,EAAI3C,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAC5B2C,EAAI5C,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,GAC9B,OAAOd,KAAKkG,KAAK1C,EAAIA,EAAIC,EAAIA,MAKjCoR,kBAAA,SAAkBtR,GAGd,OAFUvD,KAAKS,IAAII,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,IACjCd,KAAKS,IAAII,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,OAM3CgU,kBAAA,SAAkBvR,GACd,IAAMC,EAAIxD,KAAKS,IAAII,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,IACrC2C,EAAIzD,KAAKS,IAAII,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,IACvC,OAAOd,KAAKW,IAAI6C,EAAGC,MAKvByE,IAAA,WACI,YAAYD,SAAS,IAAI0M,MAK7BxM,OAAA,WAGI,OAFAtH,KAAKC,KAAK,IAAMD,KAAKC,KAAK,GAC1BD,KAAKC,KAAK,IAAMD,KAAKC,KAAK,WAM9BsH,QAAA,WAGI,OAFAvH,KAAKC,KAAK,GAAK,EAAMD,KAAKC,KAAK,GAC/BD,KAAKC,KAAK,GAAK,EAAMD,KAAKC,KAAK,WAMnCuH,UAAA,WACI,IAAMH,EAAMrH,KAAKqH,MAOjB,OANIA,EAAM,IAGNrH,KAAKC,KAAK,IAAMoH,EAChBrH,KAAKC,KAAK,IAAMoH,WAOxBI,IAAA,SAAI/E,GACA,YAAYzC,KAAK,GAAKyC,EAAEzC,KAAK,GAAKD,KAAKC,KAAK,GAAKyC,EAAEzC,KAAK,MAO5DiI,KAAA,SAAKxF,EAASyF,SACOnI,KAAKC,KAAf2H,OAAIC,SACInF,EAAEzC,KAAR+H,OAGT,OAFAhI,KAAKC,KAAK,GAAK2H,EAAKO,QAAUP,GAC9B5H,KAAKC,KAAK,GAAK4H,EAAKM,GAAKH,EAAKH,WAMlC1C,SAAA,WACI,MAAO,QAAUnF,KAAKC,KAAK,GAAK,IAAMD,KAAKC,KAAK,GAAK,OAMzD+I,cAAA,SAAclI,SACKd,KAAKC,KAAb0C,OAAGC,OAGV,OAFA5C,KAAKC,KAAK,GAAKa,EAAIb,KAAK,GAAK0C,EAAI7B,EAAIb,KAAK,GAAK2C,EAAI9B,EAAIb,KAAK,GAC5DD,KAAKC,KAAK,GAAKa,EAAIb,KAAK,GAAK0C,EAAI7B,EAAIb,KAAK,GAAK2C,EAAI9B,EAAIb,KAAK,WAMhE8I,cAAA,SAAcjI,SACKd,KAAKC,KAAb0C,OAAGC,OAGV,OAFA5C,KAAKC,KAAK,GAAKa,EAAIE,MAAM,GAAK2B,EAAI7B,EAAIE,MAAM,GAAK4B,EAAI9B,EAAIE,MAAM,GAC/DhB,KAAKC,KAAK,GAAKa,EAAIE,MAAM,GAAK2B,EAAI7B,EAAIE,MAAM,GAAK4B,EAAI9B,EAAIE,MAAM,YAOnEyE,OAAA,SAAOoB,SACc7G,KAAKC,KAAfyF,OAAIC,SACIkB,EAAI5G,KAAdkG,OAAIC,OACT,OAAQjH,KAAKS,IAAI8F,EAAKS,IAAO9G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI8F,GAAKvG,KAAKS,IAAIuG,KACjFhH,KAAKS,IAAI+F,EAAKS,IAAO/G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI+F,GAAKxG,KAAKS,IAAIwG,kCA/OjF,YAAYnG,KAAK,6BAMjB,YAAYA,KAAK,iCASjB,YAAYA,cC/BPiU,aAQT,aACIlU,KAAKC,KAAO,IAAIX,MAAM,GACtBU,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EACfD,KAAKC,KAAK,GAAK,EAbvBiU,EAoDW3U,OAAP,SAAcuD,YAAAA,IAAAA,EAAY,GACtBA,EAAIA,GAAK,EACT,IAAM+D,EAAM,IAAIqN,EAGhB,OADArN,EAAI3G,IAAIb,EAAS0U,SAAU1U,EAAS0U,SAAU1U,EAAS0U,SAAU1U,EAAS0U,UAAUvM,YAAYtE,MAAMJ,GAC/F+D,8BAKX3G,IAAA,SAAIyC,EAAWC,EAAWS,EAAWC,GAKjC,OAJAtD,KAAKC,KAAK,GAAK0C,EACf3C,KAAKC,KAAK,GAAK2C,EACf5C,KAAKC,KAAK,GAAKoD,EACfrD,KAAKC,KAAK,GAAKqD,UAMnB1C,MAAA,WACI,IAAMiG,EAAM,IAAIqN,EAEhB,OADArN,EAAI3G,IAAIF,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,GAAID,KAAKC,KAAK,IACrD4G,KAMXtB,IAAA,SAAIsB,GAKA,OAJA7G,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,WAM9BwE,IAAA,SAAIqB,GAKA,OAJA7G,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,WAM9BkB,SAAA,SAAS2E,GAKL,OAJA7G,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,WAM9B8F,OAAA,SAAOD,GAKH,OAJA7G,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,GAC1BhB,KAAKC,KAAK,IAAM4G,EAAI7F,MAAM,WAM9B+F,KAAA,WAKI,OAJA/G,KAAKC,KAAK,GAAKd,KAAK4H,KAAK/G,KAAKC,KAAK,IACnCD,KAAKC,KAAK,GAAKd,KAAK4H,KAAK/G,KAAKC,KAAK,IACnCD,KAAKC,KAAK,GAAKd,KAAK4H,KAAK/G,KAAKC,KAAK,IACnCD,KAAKC,KAAK,GAAKd,KAAK4H,KAAK/G,KAAKC,KAAK,YAMvCgH,MAAA,WAKI,OAJAjH,KAAKC,KAAK,GAAKd,KAAK8H,MAAMjH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK8H,MAAMjH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK8H,MAAMjH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK8H,MAAMjH,KAAKC,KAAK,YAMxC+G,MAAA,WAKI,OAJAhH,KAAKC,KAAK,GAAKd,KAAK6H,MAAMhH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK6H,MAAMhH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK6H,MAAMhH,KAAKC,KAAK,IACpCD,KAAKC,KAAK,GAAKd,KAAK6H,MAAMhH,KAAKC,KAAK,YAOxCiH,IAAA,SAAIL,GAKA,OAJA7G,KAAKC,KAAK,GAAKd,KAAK+H,IAAIlH,KAAKC,KAAK,GAAI4G,EAAI7F,MAAM,IAChDhB,KAAKC,KAAK,GAAKd,KAAK+H,IAAIlH,KAAKC,KAAK,GAAI4G,EAAI7F,MAAM,IAChDhB,KAAKC,KAAK,GAAKd,KAAK+H,IAAIlH,KAAKC,KAAK,GAAI4G,EAAI7F,MAAM,IAChDhB,KAAKC,KAAK,GAAKd,KAAK+H,IAAIlH,KAAKC,KAAK,GAAI4G,EAAI7F,MAAM,YAOpDlB,IAAA,SAAI+G,GAKA,OAJA7G,KAAKC,KAAK,GAAKd,KAAKW,IAAIE,KAAKC,KAAK,GAAI4G,EAAI7F,MAAM,IAChDhB,KAAKC,KAAK,GAAKd,KAAKW,IAAIE,KAAKC,KAAK,GAAI4G,EAAI7F,MAAM,IAChDhB,KAAKC,KAAK,GAAKd,KAAKW,IAAIE,KAAKC,KAAK,GAAI4G,EAAI7F,MAAM,IAChDhB,KAAKC,KAAK,GAAKd,KAAKW,IAAIE,KAAKC,KAAK,GAAI4G,EAAI5G,KAAK,YAOnDiD,MAAA,SAAMJ,GAKF,OAJA9C,KAAKC,KAAK,IAAM6C,EAChB9C,KAAKC,KAAK,IAAM6C,EAChB9C,KAAKC,KAAK,IAAM6C,EAChB9C,KAAKC,KAAK,IAAM6C,UAOpBsE,SAAA,SAASP,SACkB7G,KAAKC,OACL4G,EAAI5G,KACvB0C,YACAC,YACAS,YACAC,YACJ,OAAOnE,KAAKkG,KAAK1C,EAAIA,EAAIC,EAAIA,EAAIS,EAAIA,EAAIC,EAAIA,MAKjD+D,IAAA,WACI,YAAYD,SAAS,IAAI8M,MAK7B5M,OAAA,WAKI,OAJAtH,KAAKC,KAAK,IAAMD,KAAKC,KAAK,GAC1BD,KAAKC,KAAK,IAAMD,KAAKC,KAAK,GAC1BD,KAAKC,KAAK,IAAMD,KAAKC,KAAK,GAC1BD,KAAKC,KAAK,IAAMD,KAAKC,KAAK,WAM9BsH,QAAA,WACIvH,KAAKC,KAAK,GAAK,EAAMD,KAAKC,KAAK,GAC/BD,KAAKC,KAAK,GAAK,EAAMD,KAAKC,KAAK,GAC/BD,KAAKC,KAAK,GAAK,EAAMD,KAAKC,KAAK,GAC/BD,KAAKC,KAAK,GAAK,EAAMD,KAAKC,KAAK,MAKnCuH,UAAA,WACI,IAAIH,EAAMrH,KAAKqH,MAOf,OANIA,EAAM,IACNrH,KAAKC,KAAK,IAAMoH,EAChBrH,KAAKC,KAAK,IAAMoH,EAChBrH,KAAKC,KAAK,IAAMoH,EAChBrH,KAAKC,KAAK,IAAMoH,WAOxBI,IAAA,SAAIZ,SACyB7G,KAAKgB,QACP6F,EAAI7F,MAC3B,kDAQJkH,KAAA,SAAKG,EAAUC,EAAUH,SACIE,EAAGrH,MAArB4G,OAAIC,OAAIC,OAAIuE,SACI/D,EAAGtH,MAAjBgH,OAAIC,OAAIqE,OAKjB,OAJAtM,KAAKC,KAAK,GAAK2H,EAAKO,QAAUP,GAC9B5H,KAAKC,KAAK,GAAK4H,EAAKM,GAAKH,EAAKH,GAC9B7H,KAAKC,KAAK,GAAK6H,EAAKK,GAAKF,EAAKH,GAC9B9H,KAAKC,KAAK,GAAKoM,EAAKlE,GAAKmE,EAAKD,WAOlCtD,cAAA,SAAcjI,SACSd,KAAKC,KAAnB0C,OAAGC,OAAGS,OAAGC,OAKd,OAJAtD,KAAKC,KAAK,GAAKa,EAAIE,MAAM,GAAK2B,EAAI7B,EAAIE,MAAM,GAAK4B,EAAI9B,EAAIE,MAAM,GAAKqC,EAAIvC,EAAIE,MAAM,IAAMsC,EACxFtD,KAAKC,KAAK,GAAKa,EAAIE,MAAM,GAAK2B,EAAI7B,EAAIE,MAAM,GAAK4B,EAAI9B,EAAIE,MAAM,GAAKqC,EAAIvC,EAAIE,MAAM,IAAMsC,EACxFtD,KAAKC,KAAK,GAAKa,EAAIE,MAAM,GAAK2B,EAAI7B,EAAIE,MAAM,GAAK4B,EAAI9B,EAAIE,MAAM,IAAMqC,EAAIvC,EAAIE,MAAM,IAAMsC,EACzFtD,KAAKC,KAAK,GAAKa,EAAIE,MAAM,GAAK2B,EAAI7B,EAAIE,MAAM,GAAK4B,EAAI9B,EAAIE,MAAM,IAAMqC,EAAIvC,EAAIE,MAAM,IAAMsC,UAO7F2F,cAAA,SAAc7F,SACSpD,KAAKC,KAAnB0C,OAAGC,OAAGS,SACYD,EAAEpC,MAApBkI,OAAIC,OAAIC,OAAIC,OACbC,EAAKD,EAAK1G,EAAIwG,EAAK9F,EAAI+F,EAAKxG,EAC5B2G,EAAKF,EAAKzG,EAAIwG,EAAKzG,EAAIuG,EAAK7F,EAC5BmG,EAAKH,EAAKhG,EAAI6F,EAAKtG,EAAIuG,EAAKxG,EAC5B8G,GAAMP,EAAKvG,EAAIwG,EAAKvG,EAAIwG,EAAK/F,EAMjC,OAJArD,KAAKC,KAAK,GAAKqJ,EAAKD,EAAKI,GAAMP,EAAKK,GAAMH,EAAKI,GAAML,EACrDnJ,KAAKC,KAAK,GAAKsJ,EAAKF,EAAKI,GAAMN,EAAKK,GAAMN,EAAKI,GAAMF,EACrDpJ,KAAKC,KAAK,GAAKuJ,EAAKH,EAAKI,GAAML,EAAKE,GAAMH,EAAKI,GAAML,EACrDlJ,KAAKC,KAAK,GAAKmD,EAAEpC,MAAM,WAM3BmE,SAAA,WACI,MAAO,QAAUnF,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,KAAOD,KAAKC,KAAK,GAAK,OAMtGwF,OAAA,SAAOoB,SACsB7G,KAAKC,KAAvByF,OAAIC,OAAIC,OAAIC,SACIgB,EAAI5G,KAAtBkG,OAAIC,OAAIC,OAAIC,OACjB,OAAQnH,KAAKS,IAAI8F,EAAKS,IAAO9G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI8F,GAAKvG,KAAKS,IAAIuG,KACjFhH,KAAKS,IAAI+F,EAAKS,IAAO/G,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAI+F,GAAKxG,KAAKS,IAAIwG,KAC7EjH,KAAKS,IAAIgG,EAAKS,IAAOhH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIgG,GAAKzG,KAAKS,IAAIyG,KAC7ElH,KAAKS,IAAIiG,EAAKS,IAAOjH,EAASQ,QAAUV,KAAKW,IAAI,EAAKX,KAAKS,IAAIiG,GAAK1G,KAAKS,IAAI0G,kCA1RjF,YAAYrG,KAAK,6BAMjB,YAAYA,KAAK,6BAMjB,YAAYA,KAAK,6BAMjB,YAAYA,KAAK,iCASjB,YAAYA;;;;;;;;;;;ACvDpB,IAAM,GAAG,GAAG,SAAN,GAAM,CAAU,CAAV,EAAmB;AAC3B,SAAO,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,CAAd,GAAkB,CAAzB;AACH,CAFD;;;;AAQA,IAAM,GAAG,GAAG,SAAN,GAAM,CAAU,CAAV,EAAmB;AAC3B,SAAO,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,CAAd,GAAkB,CAAzB;AACH,CAFD;;;;AAIA,IAAM,GAAG,GAAG,SAAN,GAAM,CAAU,CAAV,EAAmB;AAC3B,SAAO,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,CAAd,GAAkB,CAAzB;AACH,CAFD;;;;AAIA,IAAM,IAAI,GAAG,SAAP,IAAO,CAAU,CAAV,EAAmB;AAC5B,SAAO,IAAI,CAAC,IAAL,CAAU,CAAV,IAAe,CAAf,GAAmB,CAA1B;AACH,CAFD;;;;AAIA,IAAM,GAAG,GAAG,SAAN,GAAM,CAAC,CAAD,EAAsB;AAC9B,SAAO,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,CAAd,GAAkB,CAAzB;AACH,CAFD;;;;AAIA,IAAM,GAAG,GAAG,SAAN,GAAM,CAAU,CAAV,EAAmB;AAC3B,SAAO,IAAI,CAAC,GAAL,CAAS,CAAT,IAAc,CAAd,GAAkB,CAAzB;AACH,CAFD;;;;;;;;;;AC9BA,IAAK,KAAL;;;AAAA,CAAA,UAAK,KAAL,EAAU;AAIN,EAAA,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,GAAA,OAAA,CAAA,GAAA,UAAA;AAKA,EAAA,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,GAAA,OAAA,CAAA,GAAA,UAAA;AAKA,EAAA,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,GAAA,iBAAA,CAAA,GAAA,UAAA;AACH,CAfD,EAAK,KAAK,qBAAL,KAAK,GAAA,EAAA,CAAV;;AAiBA,IAAK,KAAL;;;AAAA,CAAA,UAAK,KAAL,EAAU;AAIN,EAAA,KAAA,CAAA,KAAA,CAAA,cAAA,CAAA,GAAA,OAAA,CAAA,GAAA,cAAA;AACH,CALD,EAAK,KAAK,qBAAL,KAAK,GAAA,EAAA,CAAV;;AAOA,IAAK,KAAL;;;AAAA,CAAA,UAAK,KAAL,EAAU;AAIN,EAAA,KAAA,CAAA,KAAA,CAAA,cAAA,CAAA,GAAA,SAAA,CAAA,GAAA,cAAA;AACH,CALD,EAAK,KAAK,qBAAL,KAAK,GAAA,EAAA,CAAV;;;;;;;;ACvBA,IAAK,OAAL;;;AAAA,CAAA,UAAK,OAAL,EAAY;AAIR,EAAA,OAAA,CAAA,OAAA,CAAA,UAAA,CAAA,GAAA,GAAA,CAAA,GAAA,UAAA;AAKA,EAAA,OAAA,CAAA,OAAA,CAAA,UAAA,CAAA,GAAA,IAAA,CAAA,GAAA,UAAA;AAKA,EAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,GAAA,KAAA,CAAA,GAAA,WAAA;AAKA,EAAA,OAAA,CAAA,OAAA,CAAA,WAAA,CAAA,GAAA,KAAA,CAAA,GAAA,WAAA;AACH,CApBD,EAAK,OAAO,uBAAP,OAAO,GAAA,EAAA,CAAZ;;;;;;;;;;;;;;;ICeM;;;AAsBF,8BAAY,GAAZ,EAAyB,GAAzB,EAAuD;AAAA;;AAAA,QAAjB,GAAiB,uEAAH,GAAG;;AAAA;;AAUhD,SAAA,UAAA,GAAa,YAAK;AACrB,aAAO,IAAI,kBAAJ,CAAuB,KAAI,CAAC,GAA5B,EAAiC,KAAI,CAAC,GAAtC,EAA2C,CAA3C,CAAP;AACH,KAFM;;AAQA,SAAA,UAAA,GAAa,YAAc;AAC9B,aAAO,KAAI,CAAC,GAAL,KAAa,CAApB;AACH,KAFM;;AAjBH,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACA,SAAK,GAAL,GAAW,GAAX;AACH;;;;SAqBD,eAAY;AACR,aAAO,KAAK,GAAZ;AACH;;;SAKD,eAAa;AACT,aAAO,KAAK,GAAZ;AACH;;;SAKD,eAAY;AACR,aAAO,KAAK,GAAZ;AACH;SAKD,aAAa,CAAb,EAAsB;AAClB,WAAK,GAAL,GAAW,CAAX;AACH;;;;;;;;;;;;;;;ACrFL;;AAEA;;AACA;;AACA;;AACA;;;;;;;;AAGA,IAAM,aAAa,GAAG,IAAI,CAAC,GAAL,CAAS,gBAAM,QAAf,EAAyB,gBAAM,QAA/B,EAAyC,gBAAM,QAA/C,CAAtB;;IAMM;;;AAgDF,qBAAY,CAAZ,EAAuB,CAAvB,EAAkC,CAAlC,EAA2C;AAAA;;AACvC,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,KAAL,GAAa,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAb;AACA,SAAK,YAAL,GAAoB,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAC,GAAG,CAAnB,EAAsB,CAAC,GAAG,CAA1B,EAA6B,CAAC,GAAG,CAAjC,CAApB;AACA,SAAK,YAAL,GAAoB,IAAI,UAAJ,GAAW,GAAX,CAAe,IAAI,CAAnB,EAAsB,IAAI,CAA1B,EAA6B,IAAI,CAAjC,CAApB;AACA,SAAK,mBAAL,GAA2B,IAAI,UAAJ,GAAW,GAAX,CAAe,KAAK,CAAC,GAAG,CAAT,CAAf,EAA4B,KAAK,CAAC,GAAG,CAAT,CAA5B,EAAyC,KAAK,CAAC,GAAG,CAAT,CAAzC,CAA3B;AACA,SAAK,oBAAL,GAA4B,IAAI,KAAK,aAArC;AACH;;;;SAKD,eAAgB;AACZ,aAAO,KAAK,YAAZ;AACH;;;SAKD,eAAS;AACL,aAAO,KAAK,KAAZ;AACH;;;SAKD,eAAgB;AACZ,aAAO,KAAK,YAAZ;AACH;;;SAKD,eAAiB;AACb,aAAO,IAAI,CAAC,GAAL,CAAS,KAAK,CAAd,EAAiB,KAAK,CAAtB,EAAyB,KAAK,CAA9B,CAAP;AACH;;;SAKD,eAAwB;AACpB,aAAO,KAAK,oBAAZ;AACH;;;WAMO,4CAAmC,YAAnC,EAAmE;AACvE,UAAM,SAAS,GAAG,eAAS,QAAT,CAAkB,YAAY,CAAC,SAA/B,CAAlB;AAAA,UACI,QAAQ,GAAG,eAAS,QAAT,CAAkB,YAAY,CAAC,QAA/B,CADf;AAAA,UAEI,WAAW,GAAG,gBAAI,QAAJ,CAFlB;;AAGA,UAAM,CAAC,GAAG,WAAW,GAAG,gBAAI,SAAJ,CAAxB;AAAA,UACI,CAAC,GAAG,WAAW,GAAG,gBAAI,SAAJ,CADtB;AAAA,UAEI,CAAC,GAAG,gBAAI,QAAJ,CAFR;AAGA,aAAO,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAP;AACH;;;WAMO,gCAAuB,SAAvB,EAAsC;AAC1C,UAAM,mBAAmB,GAAG,KAAK,mBAAjC;AACA,UAAM,MAAM,GAAG,SAAS,CAAC,KAAV,GAAkB,QAAlB,CAA2B,mBAA3B,CAAf;AACA,aAAO,MAAM,CAAC,SAAP,EAAP;AACH;;;WAMO,gCAAuB,QAAvB,EAAqC;AAEzC,UAAM,SAAS,GAAG,QAAQ,CAAC,CAA3B;AACA,UAAM,SAAS,GAAG,QAAQ,CAAC,CAA3B;AACA,UAAM,SAAS,GAAG,QAAQ,CAAC,CAA3B;AAEA,UAAM,YAAY,GAAG,KAAK,YAA1B;AACA,UAAM,aAAa,GAAG,YAAY,CAAC,CAAnC;AACA,UAAM,aAAa,GAAG,YAAY,CAAC,CAAnC;AACA,UAAM,aAAa,GAAG,YAAY,CAAC,CAAnC;AAEA,UAAM,EAAE,GAAG,SAAS,GAAG,SAAZ,GAAwB,aAAxB,GAAwC,aAAnD;AACA,UAAM,EAAE,GAAG,SAAS,GAAG,SAAZ,GAAwB,aAAxB,GAAwC,aAAnD;AACA,UAAM,EAAE,GAAG,SAAS,GAAG,SAAZ,GAAwB,aAAxB,GAAwC,aAAnD;AAEA,UAAM,WAAW,GAAG,EAAE,GAAG,EAAL,GAAU,EAA9B;AACA,UAAM,KAAK,GAAG,IAAI,CAAC,IAAL,CAAU,MAAM,WAAhB,CAAd;AAEA,UAAM,YAAY,GAAG,QAAQ,CAAC,KAAT,GAAiB,KAAjB,CAAuB,KAAvB,CAArB;;AAEA,UAAI,WAAW,GAAG,iBAAQ,QAA1B,EAAoC;AAChC,eAAO,CAAC,QAAQ,CAAC,KAAD,CAAT,GAAmB,SAAnB,GAA+B,YAAY,CAAC,KAAb,EAAtC;AACH;;AACD,UAAM,mBAAmB,GAAG,KAAK,mBAAjC;AACA,UAAM,oBAAoB,GAAG,mBAAmB,CAAC,CAAjD;AACA,UAAM,oBAAoB,GAAG,mBAAmB,CAAC,CAAjD;AACA,UAAM,oBAAoB,GAAG,mBAAmB,CAAC,CAAjD;AAGA,UAAM,QAAQ,GAAG,IAAI,UAAJ,GAAW,GAAX,CACb,YAAY,CAAC,CAAb,GAAiB,oBAAjB,GAAwC,GAD3B,EAEb,YAAY,CAAC,CAAb,GAAiB,oBAAjB,GAAwC,GAF3B,EAGb,YAAY,CAAC,CAAb,GAAiB,oBAAjB,GAAwC,GAH3B,CAAjB;AAMA,UAAI,MAAM,GAAG,CAAC,MAAM,KAAP,IAAgB,QAAQ,CAAC,GAAT,EAAhB,IAAkC,MAAM,QAAQ,CAAC,GAAT,EAAxC,CAAb;AACA,UAAI,UAAU,GAAG,GAAjB;AACA,UAAI,IAAJ;AACA,UAAI,WAAJ;AACA,UAAI,WAAJ;AACA,UAAI,WAAJ;AACA,UAAI,WAAJ;AACA,UAAI,YAAJ;AACA,UAAI,YAAJ;AACA,UAAI,YAAJ;AACA,UAAI,YAAJ;AACA,UAAI,YAAJ;AACA,UAAI,YAAJ;;AACA,SAAG;AACC,QAAA,MAAM,IAAI,UAAV;AACA,QAAA,WAAW,GAAG,OAAO,MAAM,MAAM,GAAG,oBAAtB,CAAd;AACA,QAAA,WAAW,GAAG,OAAO,MAAM,MAAM,GAAG,oBAAtB,CAAd;AACA,QAAA,WAAW,GAAG,OAAO,MAAM,MAAM,GAAG,oBAAtB,CAAd;AACA,QAAA,YAAY,GAAG,WAAW,GAAG,WAA7B;AACA,QAAA,YAAY,GAAG,WAAW,GAAG,WAA7B;AACA,QAAA,YAAY,GAAG,WAAW,GAAG,WAA7B;AACA,QAAA,YAAY,GAAG,YAAY,GAAG,WAA9B;AACA,QAAA,YAAY,GAAG,YAAY,GAAG,WAA9B;AACA,QAAA,YAAY,GAAG,YAAY,GAAG,WAA9B;AACA,QAAA,IAAI,GAAG,EAAE,GAAG,YAAL,GAAoB,EAAE,GAAG,YAAzB,GAAwC,EAAE,GAAG,YAA7C,GAA4D,GAAnE;AAGA,QAAA,WAAW,GAAG,EAAE,GAAG,YAAL,GAAoB,oBAApB,GAA2C,EAAE,GAAG,YAAL,GAAoB,oBAA/D,GAAsF,EAAE,GAAG,YAAL,GAAoB,oBAAxH;AACA,YAAM,UAAU,GAAG,CAAC,GAAD,GAAO,WAA1B;AACA,QAAA,UAAU,GAAG,IAAI,GAAG,UAApB;AACH,OAjBD,QAiBS,IAAI,CAAC,GAAL,CAAS,IAAT,IAAiB,iBAAQ,SAjBlC;;AAmBA,aAAO,IAAI,UAAJ,GAAW,GAAX,CAAe,SAAS,GAAG,WAA3B,EAAwC,SAAS,GAAG,WAApD,EAAiE,SAAS,GAAG,WAA7E,CAAP;AACH;;;WAcM,2BAAkB,UAAlB,EAAkC;AACrC,UAAM,CAAC,GAAG,KAAK,sBAAL,CAA4B,UAA5B,CAAV;;AACA,UAAM,CAAC,GAAG,KAAK,sBAAL,CAA4B,CAA5B,CAAV;;AACA,UAAM,CAAC,GAAG,UAAU,CAAC,KAAX,GAAmB,GAAnB,CAAuB,CAAvB,CAAV;AACA,UAAI,SAAS,GAAG,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,CAAb,EAAgB,CAAC,CAAC,CAAlB,CAAhB;AACA,UAAI,QAAQ,GAAG,IAAI,CAAC,IAAL,CAAU,CAAC,CAAC,CAAZ,CAAf;AACA,UAAI,MAAM,GAAG,IAAI,CAAC,IAAL,CAAU,CAAC,CAAC,KAAF,GAAU,GAAV,CAAc,UAAd,CAAV,IAAuC,CAAC,CAAC,GAAF,EAApD;AACA,aAAO,IAAI,sCAAJ,CAAuB,eAAS,QAAT,CAAkB,SAAlB,CAAvB,EAAqD,eAAS,QAAT,CAAkB,QAAlB,CAArD,EAAkF,MAAlF,CAAP;AACH;;;WAOM,2BAAkB,UAAlB,EAAgD;AACnD,UAAM,YAAY,GAAG,KAAK,YAA1B;AAAA,UACI,CAAC,GAAG,KAAK,kCAAL,CAAwC,UAAxC,CADR;AAAA,UAEI,CAAC,GAAG,YAAY,CAAC,KAAb,GAAqB,QAArB,CAA8B,CAA9B,CAFR;;AAGA,UAAM,KAAK,GAAG,IAAI,CAAC,IAAL,CAAU,CAAC,CAAC,KAAF,GAAU,GAAV,CAAc,CAAd,CAAV,CAAd;AACA,MAAA,CAAC,CAAC,KAAF,CAAQ,IAAI,KAAZ;AACA,MAAA,CAAC,CAAC,KAAF,CAAQ,UAAU,CAAC,QAAnB;AACA,aAAO,CAAC,CAAC,GAAF,CAAM,CAAN,CAAP;AACH;;;;;;;AAIL,IAAM,KAAK,GAAG,IAAI,SAAJ,CAAc,gBAAM,QAApB,EAA8B,gBAAM,QAApC,EAA8C,gBAAM,QAApD,CAAd;;AAGA,IAAM,cAAc,GAAG,IAAI,SAAJ,CAAc,aAAd,EAA6B,aAA7B,EAA4C,aAA5C,CAAvB;;;;;;;;;;ACxPA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;IAMe;;;AAmBX,sBAAY,SAAZ,EAAgC;AAAA;;AAC5B,SAAK,SAAL,GAAiB,SAAjB;AACA,SAAK,aAAL,GAAqB,KAAK,SAAL,CAAe,aAApC;AACA,SAAK,oBAAL,GAA4B,MAAM,KAAK,aAAvC;AACH;;;;SAKD,eAAa;AACT,aAAO,KAAK,SAAZ;AACH;;;;;;;;IAuBC;;;;;;;AASF,mCAAA;AAAA;;AAAA;;AACI,8BAAM,yBAAN;AATI,UAAA,eAAA,GAA0B,aAA1B;AAEA,UAAA,OAAA,GAAkB,EAAlB;AAEE,UAAA,WAAA,GAAwB,EAAxB;AAEF,UAAA,aAAA,GAAwB,GAAxB;AAIJ,QAAM,WAAW,GAAa,EAA9B;AACA,QAAM,CAAC,GAAG,IAAI,MAAK,aAAT,GAAyB,IAAI,CAAC,EAAxC;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAK,OAAzB,EAAkC,CAAC,EAAnC;AACI,MAAA,WAAW,CAAC,CAAD,CAAX,GAAiB,CAAC,IAAI,MAAK,aAAL,GAAqB,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAAzB,CAAlB;AADJ;;AAEA,UAAK,WAAL,GAAmB,WAAnB;AANJ;AAOC;;;;WAMO,yCAAgC,aAAhC,EAAqD;AACzD,aAAO,IAAI,CAAC,EAAL,GAAU,CAAV,GAAe,MAAM,iBAAK,gBAAI,CAAC,aAAL,CAAL,CAA5B;AACH;;;WAMO,yCAAgC,QAAhC,EAAgD;AACpD,UAAM,eAAe,GAAG,KAAK,eAA7B;AACA,UAAI,QAAQ,GAAG,eAAf,EACI,QAAQ,GAAG,eAAX,CADJ,KAEK,IAAI,QAAQ,GAAG,CAAC,eAAhB,EACD,QAAQ,GAAG,CAAC,eAAZ;AACJ,UAAM,WAAW,GAAG,gBAAI,QAAJ,CAApB;AACA,aAAO,MAAM,gBAAI,CAAC,MAAM,WAAP,KAAuB,MAAM,WAA7B,CAAJ,CAAb;AACH;;;WAMM,iBAAQ,UAAR,EAAsC;AACzC,UAAM,aAAa,GAAG,KAAK,aAA3B;AACA,UAAM,CAAC,GAAG,eAAS,QAAT,CAAkB,UAAU,CAAC,SAA7B,IAA0C,aAApD;AAAA,UACI,CAAC,GAAG,KAAK,+BAAL,CAAqC,eAAS,QAAT,CAAkB,UAAU,CAAC,QAA7B,CAArC,IAA+E,aADvF;AAAA,UAEI,CAAC,GAAG,UAAU,CAAC,QAFnB;AAGA,aAAO,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAP;AACH;;;WAMM,mBAAU,EAAV,EAAkB;AACrB,UAAM,yBAAyB,GAAG,KAAK,oBAAvC;AAAA,UACI,SAAS,GAAG,EAAE,CAAC,CAAH,GAAO,yBADvB;AAAA,UAEI,QAAQ,GAAG,KAAK,+BAAL,CAAqC,EAAE,CAAC,CAAH,GAAO,yBAA5C,CAFf;AAAA,UAGI,MAAM,GAAG,EAAE,CAAC,CAHhB;AAIA,aAAO,IAAI,sCAAJ,CAAuB,eAAS,QAAT,CAAkB,SAAlB,CAAvB,EAAqD,eAAS,QAAT,CAAkB,QAAlB,CAArD,EAAkF,MAAlF,CAAP;AACH;;;WAOM,uBAAc,SAAd,EAA+B;AAClC,aAAO,KAAK,WAAL,CAAiB,SAAjB,CAAP;AACH;;;WAMM,gCAAoB;AACvB,UAAM,OAAO,GAAG,KAAK,OAAL,GAAe,CAA/B;AACA,aAAO,KAAK,WAAL,CAAiB,OAAjB,CAAP;AACH;;;;EAhF+B;;;;;;;;;;;AC/DpC;;AACA;;AAEA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;IAOM;;;;;;;AAiIF,iBACI,IADJ,EAYK;AAAA;;AAAA;;AAED;AAhFI,UAAA,UAAA,GAAgD,EAAhD;;AAmGA,UAAA,mBAAA,GAAsB,YAAW;AACrC,UAAM,CAAC,GAAG,MAAK,MAAL,CAAY,MAAtB;AAAA,UAA8B,CAAC,GAAG,MAAK,gBAAvC;AACA,UAAM,CAAC,GAAG,MAAK,KAAf;AAAA,UAAsB,CAAC,GAAG,MAAK,MAA/B;AAAA,UAAuC,EAAE,GAAG,CAAC,GAAG,CAAhD;AAAA,UAAmD,EAAE,GAAG,CAAC,GAAG,CAA5D;AACA,YAAK,MAAL,CAAY,KAAZ,GAAoB,EAApB;AACA,YAAK,MAAL,CAAY,MAAZ,GAAqB,EAArB;AACA,YAAK,MAAL,CAAY,KAAZ,CAAkB,KAAlB,aAA6B,CAA7B;AACA,YAAK,MAAL,CAAY,KAAZ,CAAkB,MAAlB,aAA8B,CAA9B;;AAEA,YAAK,cAAL,CAAoB,CAApB;AACH,KATO;;AAWA,UAAA,SAAA,GAAY,YAAW;;;AAC3B,OAAA,EAAA,GAAA,KAAK,CAAC,KAAN,MAAW,IAAX,IAAW,EAAA,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAW,EAAA,CAAE,OAAF,CAAU,UAAA,IAAI,EAAG;AACxB,YAAQ,IAAR,GAAuB,IAAvB,CAAQ,IAAR;AAAA,YAAc,IAAd,GAAuB,IAAvB,CAAc,IAAd;AACA,QAAA,IAAI,CAAC,KAAL,gCAAiB,IAAjB;AACH,OAHU,CAAX;AAIH,KALO;;AAOA,UAAA,YAAA,GAAe,YAAW,CAEjC,CAFO;;AAID,UAAA,GAAA,GAAM,UAAiC,IAAjC,EAAuD;AAChE,YAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB;;AACA,MAAA,IAAI,CAAC,MAAL;;AACA,YAAK,iCAAL;AACH,KAJM;;AAxCH,UAAK,MAAL,GAAe,wBAAS,IAAI,CAAC,MAAd,IAAwB,QAAQ,CAAC,cAAT,CAAwB,IAAI,CAAC,MAA7B,CAAxB,GAAyE,IAAI,CAAC,MAA7F;AACA,UAAK,gBAAL,GAAwB,IAAI,CAAC,gBAAL,IAAyB,iBAAQ,gBAAjC,IAAqD,GAA7E;AACA,UAAK,KAAL,GAAa,IAAI,CAAC,KAAlB;AACA,UAAK,MAAL,GAAc,IAAI,CAAC,MAAnB;AACA,UAAK,SAAL,GAAiB,IAAI,iCAAJ,EAAjB;AACA,UAAK,SAAL,GAAiB,MAAK,SAAL,CAAe,SAAhC;AACA,UAAK,MAAL,GAAc;AACV,MAAA,MAAM,EAAE,IAAI,CAAC,UAAL,CAAgB,UAAhB,EADE;AAEV,MAAA,IAAI,EAAE,IAAI,CAAC,IAFD;AAGV,MAAA,OAAO,EAAE,IAAI,CAAC,OAAL,IAAgB,EAHf;AAIV,MAAA,OAAO,EAAE,IAAI,CAAC,OAAL,IAAgB;AAJf,KAAd;;AAMA,UAAK,mBAAL;;AACA,UAAK,SAAL;;AAEA,UAAK,YAAL;;AAlBC;AAmBJ;;;;SA5FD,eAAiB;AACb,aAAO,KAAK,MAAZ;AACH;;;SAKD,eAAiB;AACb,aAAO,KAAK,MAAZ;AACH;;;SAKD,eAAoB;AAChB,aAAO,KAAK,SAAZ;AACH;;;SAKD,eAAwB;AACpB,aAAO,KAAK,SAAL,CAAe,aAAtB;AACH;;;SAKD,eAAe;AACX,aAAO,KAAK,gBAAL,CAAsB,KAA7B;AACH;;;SAKD,eAAgB;AACZ,aAAO,KAAK,KAAZ;AACH;;;SAKD,eAAiB;AACb,aAAO,KAAK,MAAZ;AACH;;;SAED,eAA2B;AACvB,aAAO,KAAK,gBAAZ;AACH;;;SAKD,eAAqB;AACjB,aAAO,KAAK,UAAZ;AACH;;;WAhHD,sBAAoB,IAApB,EAAkD;AAAA,wCAAX,IAAW;AAAX,QAAA,IAAW;AAAA;;AAC9C,MAAA,KAAK,CAAC,KAAN,CAAY,IAAZ,CAAiB;AAAE,QAAA,IAAI,EAAJ,IAAF;AAAQ,QAAA,IAAI,EAAJ;AAAR,OAAjB;AACH;;;;EAbe;;;AAIF,KAAA,CAAA,KAAA,GAA2C,EAA3C;;;;;;;;;AChBlB;;;;;;;;IAMM;;;AAgBF,eAAY,UAAZ,EAA8B,QAA9B,EAA4C;AAAA;;AACxC,SAAK,UAAL,GAAkB,UAAU,CAAC,KAAX,EAAlB;AACA,SAAK,QAAL,GAAgB,QAAQ,CAAC,KAAT,EAAhB;AACH;;;;WAMM,YAAG,CAAH,EAAY;AACf,aAAO,KAAK,QAAL,CAAc,KAAd,GAAsB,KAAtB,CAA4B,CAA5B,EAA+B,GAA/B,CAAmC,KAAK,UAAxC,CAAP;AACH;;;WAMM,yBAAgB,MAAhB,EAAiC;AACpC,UAAM,CAAC,GAAG,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,GAAxB,CAA4B,KAAK,UAAjC,CAAV;AAEA,UAAM,GAAG,GAAG,CAAC,CAAC,GAAF,CAAM,KAAK,QAAX,CAAZ;AACA,UAAM,EAAE,GAAG,CAAC,CAAC,GAAF,CAAM,CAAN,IAAW,GAAG,GAAG,GAA5B;AACA,UAAM,OAAO,GAAG,MAAM,CAAC,aAAP,GAAuB,MAAM,CAAC,aAA9C;AACA,UAAI,EAAE,GAAG,OAAT,EAAkB,OAAO,IAAP;AAClB,UAAM,GAAG,GAAG,IAAI,CAAC,IAAL,CAAU,OAAO,GAAG,EAApB,CAAZ;AAEA,UAAM,EAAE,GAAG,GAAG,GAAG,GAAjB;AAEA,UAAM,EAAE,GAAG,GAAG,GAAG,GAAjB;AAEA,UAAI,EAAE,GAAG,CAAL,IAAU,EAAE,GAAG,CAAnB,EAAsB,OAAO,IAAP;AAGtB,UAAI,EAAE,GAAG,CAAT,EAAY,OAAO,KAAK,EAAL,CAAQ,EAAR,CAAP;AAEZ,aAAO,KAAK,EAAL,CAAQ,EAAR,CAAP;AACH;;;;;;;;;;;;;;;AC1DL;;AACA;;;;;;;;IAKM;;;AAwGF,6BAAY,GAAZ,EAAyB,KAAzB,EAAwC,MAAxC,EAAwD,IAAxD,EAAsE,GAAtE,EAAiF;AAAA;;AAAA;;AA/FzE,SAAA,GAAA,GAAc,IAAI,CAAC,EAAL,GAAU,CAAxB;AAoBA,SAAA,QAAA,GAAiB,IAAI,UAAJ,EAAjB;AAKA,SAAA,MAAA,GAAe,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAf;AAKA,SAAA,EAAA,GAAW,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAX;;AAkFA,SAAA,sBAAA,GAAyB,YAAW;AACxC,UAAM,YAAY,GAAG,IAAI,UAAJ,GAAW,MAAX,CAAkB,KAAI,CAAC,QAAvB,EAAiC,KAAI,CAAC,MAAtC,EAA8C,KAAI,CAAC,EAAnD,CAArB;AACA,MAAA,KAAI,CAAC,YAAL,GAAoB,YAAY,CAAC,KAAb,EAApB;AACA,MAAA,KAAI,CAAC,UAAL,GAAkB,YAAY,CAAC,MAAb,EAAlB;AACA,MAAA,KAAI,CAAC,oBAAL,GAA4B,KAAI,CAAC,gBAAL,CAAsB,KAAtB,GAA8B,QAA9B,CAAuC,KAAI,CAAC,UAA5C,CAA5B;AACH,KALO;;AAUA,SAAA,kBAAA,GAAqB,YAAW;AAEpC,UAAM,WAAW,GAAG,KAAI,CAAC,MAAzB;AAAA,UAAiC,GAAG,GAAG,KAAI,CAAC,GAA5C;AAAA,UAAiD,IAAI,GAAG,WAAW,IAAI,GAAf,GAAqB,GAArB,GAA2B,iBAAM,gBAAI,GAAG,GAAG,GAAV,IAAiB,WAAlB,GAAiC,GAAtC,CAAnF;AAAA,UAA+H,IAAI,GAAG,KAAI,CAAC,IAA3I;AAEA,MAAA,KAAI,CAAC,GAAL,GAAW,IAAI,GAAG,gBAAI,MAAM,IAAV,CAAlB;AACA,MAAA,KAAI,CAAC,MAAL,GAAc,CAAC,KAAI,CAAC,GAApB;AACA,MAAA,KAAI,CAAC,KAAL,GAAa,WAAW,GAAG,KAAI,CAAC,GAAhC;AACA,MAAA,KAAI,CAAC,IAAL,GAAY,CAAC,KAAI,CAAC,KAAlB;AAEA,MAAA,KAAI,CAAC,cAAL,GAAsB,MAAM,gBAAI,MAAM,IAAV,CAA5B;AACH,KAVO;;AAgBD,SAAA,MAAA,GAAS,UAAC,CAAD,EAAkB;AAC9B,MAAA,KAAI,CAAC,MAAL,CAAY,GAAZ,CAAgB,CAAC,CAAC,CAAlB,EAAqB,CAAC,CAAC,CAAvB,EAA0B,CAAC,CAAC,CAA5B;;AACA,MAAA,KAAI,CAAC,sBAAL;AACH,KAHM;;AA1CH,SAAK,QAAL,CAAc,GAAd,CAAkB,MAAlB,EAA0B,CAA1B,EAA6B,CAA7B;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,MAAL,GAAc,KAAK,IAAI,MAAT,GAAkB,KAAK,GAAG,MAA1B,GAAmC,GAAjD;AACA,SAAK,GAAL,GAAW,eAAS,QAAT,CAAkB,GAAlB,CAAX;AACA,SAAK,IAAL,GAAY,IAAI,GAAG,IAAH,GAAU,GAA1B;AACA,SAAK,GAAL,GAAW,GAAG,GAAG,GAAH,GAAS,IAAvB;AACA,SAAK,cAAL,GAAsB,IAAI,UAAJ,GAAW,QAAX,EAAtB;AACA,SAAK,gBAAL,GAAwB,WAAK,WAAL,CAAiB,KAAK,GAAtB,EAA2B,KAAK,MAAhC,EAAwC,KAAK,IAA7C,EAAmD,KAAK,GAAxD,CAAxB;AACA,SAAK,sBAAL;AACA,SAAK,kBAAL;AACH;;;;SA+CD,eAAmB;AACf,aAAO,KAAK,QAAZ;AACH;SAVD,aAAoB,CAApB,EAA2B;AACvB,WAAK,QAAL,CAAc,GAAd,CAAkB,CAAC,CAAC,CAApB,EAAuB,CAAC,CAAC,CAAzB,EAA4B,CAAC,CAAC,CAA9B;AACA,WAAK,sBAAL;AACH;;;SAYD,eAAuB;AACnB,aAAO,KAAK,YAAZ;AACH;;;SAKD,eAAqB;AACjB,aAAO,KAAK,UAAZ;AACH;;;SAKD,eAA2B;AACvB,aAAO,KAAK,gBAAZ;AACH;;;SAKD,eAA+B;AAC3B,aAAO,KAAK,oBAAZ;AACH;;;SAKD,eAAiB;AACb,aAAO,KAAK,MAAZ;AACH;;;SAKD,eAAa;AACT,aAAO,KAAK,EAAZ;AACH;;;SAKD,eAAyB;AACrB,aAAO,KAAK,cAAZ;AACH;;;SAKD,eAAyB;AACrB,aAAO,KAAK,cAAZ;AACH;;;;;;;;;;ACnOL;;AAEA;;AAEA;;AACA;;AAoEA,aAAM,SAAN,CAAgB,cAAhB,GAAiC,UAAU,KAAV,EAAmC;AAChE,MAAM,CAAC,GAAG,IAAV;AAEA,MAAM,GAAG,GAAG,CAAC,CAAC,MAAF,CAAS,qBAAT,EAAZ;AAAA,MAA8C,GAAG,GAAG,CAAC,CAAC,MAAF,CAAS,aAAT,CAAuB,eAA3E;AAEA,MAAM,IAAI,GAAG,GAAG,CAAC,IAAJ,GAAW,MAAM,CAAC,WAAlB,GAAgC,GAAG,CAAC,UAAjD;AAAA,MACI,GAAG,GAAG,GAAG,CAAC,GAAJ,GAAU,MAAM,CAAC,WAAjB,GAA+B,GAAG,CAAC,SAD7C;AAAA,MAEI,KAAK,GAAG,GAAG,CAAC,KAFhB;AAAA,MAGI,MAAM,GAAG,GAAG,CAAC,MAHjB;AAKA,EAAA,CAAC,CAAC,cAAF,GAAmB;AACf,IAAA,MAAM,EAAE,IAAI,oCAAJ,CAAsB,EAAtB,EAA0B,KAA1B,EAAiC,MAAjC,EAAyC,GAAzC,EAA8C,CAAC,CAAC,SAAF,CAAY,aAAZ,GAA4B,EAA1E,CADO;AAEf,IAAA,aAAa,EAAE;AACX,MAAA,IAAI,EAAJ,IADW;AAEX,MAAA,GAAG,EAAH,GAFW;AAGX,MAAA,KAAK,EAAL,KAHW;AAIX,MAAA,MAAM,EAAN;AAJW,KAFA;AAQf,IAAA,UAAU,EAAE;AACR,MAAA,OAAO,EAAE,KAAK,GAAG,CADT;AAER,MAAA,OAAO,EAAE,MAAM,GAAG;AAFV,KARG;AAYf,IAAA,MAAM,EAAE,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB;AAZO,GAAnB;AAeA,MAAM,EAAE,GAAG,CAAC,CAAC,2BAAF,CAA8B,KAA9B,CAAX;AACA,EAAA,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,QAAxB,GAAmC,EAAnC;;AACA,EAAA,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,MAAxB,CAA+B,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAA/B;AACH,CA5BD;;AAiCA,aAAM,SAAN,CAAgB,gBAAhB,GAAmC,UAAU,KAAV,EAA6B;AAC5D,MAAM,CAAC,GAAG,IAAV;AACA,MAAM,IAAI,GAAG,CAAC,CAAC,0BAAF,CAA6B,KAA7B,CAAb;AACA,MAAM,KAAK,GAAG,CAAC,CAAC,2CAAF,CAA8C,IAA9C,CAAd;AACA,MAAM,CAAC,GAAG,KAAK,CAAC,GAAN,CAAU,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,QAAxB,CAAiC,KAAjC,EAAV,EAAoD,SAApD,EAAV;AACA,MAAM,GAAG,GAAG,IAAI,QAAJ,CAAQ,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,QAAxB,CAAiC,KAAjC,EAAR,EAAkD,CAAlD,CAAZ;AACA,SAAO,GAAG,CAAC,eAAJ,CAAoB,CAAC,CAAC,SAAtB,CAAP;AACH,CAPD;;AAaA,aAAM,SAAN,CAAgB,0BAAhB,GAA6C,UAAU,KAAV,EAA6B;AACtE,MAAM,CAAC,GAAG,IAAV;AACA,MAAM,CAAC,GAAI,KAAK,CAAC,OAAN,GAAgB,CAAC,CAAC,cAAF,CAAiB,aAAjB,CAA+B,KAAhD,GAAyD,CAAzD,GAA6D,CAAvE;AAAA,MACI,CAAC,GAAG,EAAE,KAAK,CAAC,OAAN,GAAgB,CAAC,CAAC,cAAF,CAAiB,aAAjB,CAA+B,MAAjD,IAA2D,CAA3D,GAA+D,CADvE;AAEA,SAAO,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,CAAP;AACH,CALD;;AAUA,aAAM,SAAN,CAAgB,2CAAhB,GAA8D,UAAU,IAAV,EAAoB;AAC9E,MAAM,CAAC,GAAG,IAAV;;AACA,MAAM,EAAE,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,YAAxB,CAAqC,KAArC,GAA6C,QAA7C,CAAsD,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,gBAAxB,CAAyC,KAAzC,GAAiD,MAAjD,EAAtD,CAAX;;AACA,MAAM,KAAK,GAAG,IAAI,CAAC,KAAL,GAAa,YAAb,CAA0B,EAA1B,CAAd;AACA,SAAO,KAAP;AACH,CALD;;AAUA,aAAM,SAAN,CAAgB,4CAAhB,GAA+D,UAAU,KAAV,EAAqB;AAChF,MAAM,CAAC,GAAG,IAAV;AACA,MAAM,GAAG,GAAG,KAAK,CAAC,KAAN,GAAc,YAAd,CAA2B,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,oBAAnD,CAAZ;AACA,SAAO,GAAP;AACH,CAJD;;AASA,aAAM,SAAN,CAAgB,2BAAhB,GAA8C,UAAU,KAAV,EAAmC;AAC7E,MAAM,CAAC,GAAG,IAAV;AACA,MAAM,KAAK,GAAG,CAAC,CAAC,SAAF,CAAY,iBAAZ,CAA8B,KAA9B,CAAd;AACA,SAAO,KAAP;AACH,CAJD;;AASA,aAAM,SAAN,CAAgB,2BAAhB,GAA8C,UAAS,UAAT,EAAwB;AAClE,MAAM,CAAC,GAAG,IAAV;AACA,MAAM,QAAQ,GAAG,CAAC,CAAC,SAAF,CAAY,iBAAZ,CAA8B,UAA9B,CAAjB;AACA,SAAO,QAAP;AACH,CAJD;;;;;;;;;AC1JA,IAAM,IAAI,GAAG,SAAP,IAAO,CAAU,KAAV,EAAuB;AAChC,SAAO,CAAC,CAAC,KAAK,IAAI,EAAV,IAAgB,EAAjB,EAAqB,OAArB,CAA6B,YAA7B,EAA2C,EAA3C,CAAP;AACH,CAFD;;AAQA,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAU,KAAV,EAAuB;AACjC,SAAO,IAAI,CAAC,KAAD,CAAJ,CAAY,KAAZ,CAAkB,KAAlB,CAAP;AACH,CAFD;;;;;;;;;;;ACLA;;AACA;;AAGA,IAAM,MAAM,GAAG,gBAAf;;AAEA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAU,OAAV,EAAgC,SAAhC,EAAmD,OAAnD,EAAsE,OAAtE,EAAqF;AACrG,MAAM,YAAY,GAAG,SAAf,YAAe,CAAU,CAAV,EAAkB;AACnC,IAAA,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,KAAhB;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,OAAO,IAAI,OAAxB,EAAiC,CAAjC;AACH,GAHD;;AAIA,oBAAM,SAAN,EAAiB,OAAjB,CAAyB,UAAC,IAAD,EAAiB;AACtC,QAAM,GAAG,aAAM,MAAN,cAAgB,IAAhB,CAAT;AACA,IAAA,OAAO,CAAC,GAAD,CAAP,GAAe,OAAO,CAAC,GAAD,CAAP,IAAgB,EAA/B;AACA,QAAM,GAAG,GAAG,cAAc,CAAC,OAAD,EAAU,IAAV,EAAgB,OAAhB,CAA1B;AACA,QAAI,GAAG,IAAI,CAAX,EAAc,cAAc,CAAC,OAAD,EAAU,IAAV,EAAgB,OAAhB,CAAd;AACd,IAAA,OAAO,CAAC,GAAD,CAAP,CAAa,IAAb,CAAkB,YAAlB;AAEA,QAAI,iBAAQ,EAAZ,EACI,OAAO,CAAC,gBAAR,CAAyB,IAAzB,EAA+B,YAA/B,EAA6C,KAA7C,EADJ,KAGI,OAAO,CAAC,gBAAR,CAAyB,IAAzB,EAA+B,YAA/B,EAA6C;AAAE,MAAA,OAAO,EAAE,KAAX;AAAkB,MAAA,OAAO,EAAE;AAA3B,KAA7C;AACP,GAXD;AAYH,CAjBD;;;;AAmBA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAU,OAAV,EAAgC,IAAhC,EAA8C,OAA9C,EAA+D;AAClF,MAAM,GAAG,aAAM,MAAN,cAAgB,IAAhB,CAAT;AACA,MAAI,CAAC,OAAD,IAAY,CAAC,OAAO,CAAC,GAAD,CAApB,IAA6B,CAAC,OAAlC,EAA2C,OAAO,CAAC,CAAR;AAC3C,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAD,CAAxB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,QAAQ,CAAC,MAA/B,EAAuC,CAAC,GAAG,GAA3C,EAAgD,CAAC,EAAjD;AACI,QAAI,QAAQ,CAAC,CAAD,CAAR,KAAgB,OAApB,EACI,OAAO,CAAP;AAFR;;AAGA,SAAO,CAAC,CAAR;AACH,CARD;;AAUA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAU,OAAV,EAAgC,SAAhC,EAAmD,OAAnD,EAAoE;AACvF,MAAM,MAAM,GAAG,SAAT,MAAS,CAAU,IAAV,EAAwB,EAAxB,EAAyC;AACpD,IAAA,OAAO,CAAC,mBAAR,CAA4B,IAA5B,EAAkC,EAAlC,EAAsC,KAAtC;AACH,GAFD;;AAGA,MAAM,KAAK,GAAG,kBAAM,SAAN,CAAd;AACA,EAAA,KAAK,CAAC,OAAN,CAAc,UAAC,IAAD,EAAS;AACnB,QAAM,GAAG,aAAM,MAAN,cAAgB,IAAhB,CAAT;;AACA,QAAI,CAAC,OAAD,IAAY,OAAO,CAAC,GAAD,CAAvB,EAA8B;AAC1B,UAAM,QAAQ,GAAG,OAAO,CAAC,GAAD,CAAxB;AACA,MAAA,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,OAAV,CAAkB,UAAC,QAAD,EAA4B;AAC1C,QAAA,MAAM,CAAC,IAAD,EAAO,QAAP,CAAN;AACH,OAFD,CAAA;AAGA,aAAO,OAAO,CAAC,GAAD,CAAd;AACH;;AAED,QAAM,GAAG,GAAG,cAAc,CAAC,OAAD,EAAU,IAAV,EAAgB,OAAhB,CAA1B;AACA,QAAI,GAAG,GAAG,CAAV,EAAa,MAAM,CAAC,IAAD,EAAO,OAAO,CAAC,GAAD,CAAd,CAAN;AACb,IAAA,OAAO,CAAC,GAAD,CAAP,CAAa,MAAb,CAAoB,GAApB,EAAyB,CAAzB;AACH,GAbD;AAcH,CAnBD;;;;AAqBA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAU,CAAV,EAAkB;AACrC,MAAI,CAAC,CAAC,cAAN,EACI,CAAC,CAAC,cAAF,GADJ,KAGI,CAAC,CAAC,WAAF,GAAgB,KAAhB;AACP,CALD;;;;AAOA,IAAM,eAAe,GAAG,SAAlB,eAAkB,CAAU,CAAV,EAAkB;AACtC,MAAI,CAAC,CAAC,eAAN,EACI,CAAC,CAAC,eAAF,GADJ,KAGI,CAAC,CAAC,YAAF,GAAiB,IAAjB;AACP,CALD;;;;AAOA,IAAM,yBAAyB,GAAG,SAA5B,yBAA4B,CAAC,CAAD,EAA6B,GAA7B,EAAsF;AACpH,MAAM,GAAG,GAAG,CAAC,YAAY,UAAb,GAA0B,CAA1B,GAA8B,CAAC,CAAC,OAAF,CAAU,CAAV,CAA1C;AACA,MAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAxB,CAAd;AACA,MAAM,OAAO,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,cAAD,CAAN,CAAT,EAAkC,QAAQ,CAAC,KAAK,CAAC,aAAD,CAAN,CAA1C,CAAhB;AACA,MAAM,IAAI,GAAG,GAAG,CAAC,qBAAJ,EAAb;AACA,MAAM,WAAW,GAAG,GAAG,CAAC,WAAxB;AAAA,MAAqC,YAAY,GAAG,GAAG,CAAC,YAAxD;AACA,MAAM,MAAM,GAAG,WAAW,GAAG,IAAI,CAAC,KAAL,GAAa,WAAhB,GAA8B,CAAxD;AACA,MAAM,MAAM,GAAG,YAAY,GAAG,IAAI,CAAC,MAAL,GAAc,YAAjB,GAAgC,CAA3D;AACA,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,IAAL,GAAY,OAAO,CAAC,CAAD,CAApB,EAAyB,IAAI,CAAC,GAAL,GAAW,OAAO,CAAC,CAAD,CAA3C,EAAgD,MAAhD,EAAwD,MAAxD,CAAjB;AACA,SAAO;AACH,IAAA,OAAO,EAAE,CAAC,GAAG,CAAC,OAAJ,GAAc,QAAQ,CAAC,CAAD,CAAtB,GAA4B,GAAG,CAAC,UAAjC,IAA+C,QAAQ,CAAC,CAAD,CAD7D;AAEH,IAAA,OAAO,EAAE,CAAC,GAAG,CAAC,OAAJ,GAAc,QAAQ,CAAC,CAAD,CAAtB,GAA4B,GAAG,CAAC,SAAjC,IAA8C,QAAQ,CAAC,CAAD;AAF5D,GAAP;AAIH,CAbD;;;;;;;;;;;ACxEA,IAAM,GAAG,GAAG,SAAN,GAAM,GAAa;AACrB,SAAO,IAAI,CAAC,GAAL,EAAP;AACH,CAFD;;;;;;ACJA;;AAEA;;AACA;;AAUA,IAAM,eAAe,GACjB,WACA,YADA,GAEA,UAFA,GAGA,YAHA,GAIA,WAJA,GAKA,aALA,GAMA,aANA,GAOA,YAPA,GAQA,QARA,GASA,WATA,GAUA,cAVA,GAWA,WAXA,GAYA,aAZA,GAaA,YAbA,GAcA,WAfJ;;AAsEA,aAAM,SAAN,CAAgB,qBAAhB,GAAwC,YAAA;AACpC,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,mBAAF,GAAwB;AACpB,IAAA,aAAa,EAAE;AADK,GAAxB;AAIA,EAAA,CAAC,CAAC,UAAF,CAAa,CAAC,CAAC,MAAf,EAAuB,eAAvB,EAAwC,CAAC,CAAC,cAA1C,EAA0D,CAA1D;AACH,CAPD;;AAYA,aAAM,SAAN,CAAgB,UAAhB,GAA6B,UAAU,OAAV,EAAgC,SAAhC,EAAmD,OAAnD,EAAsE,OAAtE,EAAqF;AAC9G,MAAM,CAAC,GAAG,IAAV;AACA,wBAAY,OAAZ,EAAqB,eAArB,EAAsC,CAAC,CAAC,cAAxC,EAAwD,CAAxD;AACH,CAHD;;AAWA,aAAM,SAAN,CAAgB,cAAhB,GAAiC,UAAU,CAAV,EAAkB;AAC/C,MAAM,CAAC,GAAG,IAAV;AACA,MAAI,IAAI,GAAG,CAAC,CAAC,IAAb;AAEA,MAAI,IAAI,KAAK,aAAb,EACI,yBAAe,CAAf;AAEJ,MAAI,IAAI,KAAK,WAAT,IAAyB,IAAI,KAAK,YAAT,KAA0B,CAAC,CAAC,CAAC,SAAD,CAAF,IAAiB,CAAC,CAAC,SAAD,CAAD,CAAa,MAAb,KAAwB,CAAnE,CAA7B,EACI,CAAC,CAAC,mBAAF,CAAsB,aAAtB,GAAsC,eAAtC,CADJ,KAEK,IAAI,IAAI,KAAK,OAAT,IAAoB,IAAI,KAAK,UAA7B,IAA2C,IAAI,KAAK,aAAxD,EAAuE;AAGxE,QAAI,CAAC,KAAK,cAAV,EACI,OADJ,KAEK;AACD,UAAM,QAAQ,GAAG,CAAC,CAAC,mBAAF,CAAsB,aAAvC;AACA,aAAO,CAAC,CAAC,mBAAF,CAAsB,aAA7B;AACA,UAAM,IAAI,GAAG,eAAb;AACA,UAAK,IAAI,GAAG,QAAP,GAAkB,GAAnB,KAA4B,IAAI,KAAK,OAAT,IAAoB,IAAI,KAAK,aAAzD,CAAJ,EACI,OADJ,KAEK,IAAI,IAAI,KAAK,UAAT,IAAuB,IAAI,KAAK,OAApC,EACD,IAAI,GAAG,SAAP;AACP;AACJ,GAdI,MAcE,IAAI,IAAI,KAAK,OAAT,IAAqB,CAAC,CAAC,SAAD,CAAD,IAAgB,CAAC,CAAC,SAAD,CAAD,CAAa,MAAb,KAAwB,CAAjE,EAAqE;AACxE,IAAA,IAAI,GAAG,MAAP;AACH;AAED,EAAA,CAAC,CAAC,IAAF,CAAO,IAAP,EAAa,CAAC,CAAC,UAAF,CAAa,CAAb,EAAgB,IAAhB,CAAb;AACH,CA5BD;;AAiCA,aAAM,SAAN,CAAgB,UAAhB,GAA6B,UAAU,CAAV,EAAsC,IAAtC,EAAkD;AAC3E,MAAI,CAAC,CAAL,EAAQ;AACR,MAAM,GAAG,GAAG,IAAZ;AACA,MAAM,aAAa,GAAmB;AAClC,IAAA,QAAQ,EAAE;AADwB,GAAtC;;AAGA,MAAI,IAAI,KAAK,UAAT,IAAuB,GAAG,CAAC,cAAJ,CAAmB,CAAnB,CAA3B,EAAkD,CAQjD;;AACD,SAAO,aAAP;AACH,CAhBD;;AAqBA,aAAM,SAAN,CAAgB,cAAhB,GAAiC,UAAU,CAAV,EAAkB;AAC/C,SAAO,CAAC,CAAC,SAAD,CAAD,IAAgB,CAAC,CAAC,SAAD,CAAD,CAAa,MAAb,GAAsB,CAAtC,GAA0C,CAAC,CAAC,SAAD,CAAD,CAAa,CAAb,CAA1C,GAA4D,CAAC,CAAC,gBAAD,CAAD,IAAuB,CAAC,CAAC,gBAAD,CAAD,CAAoB,MAApB,GAA6B,CAApD,GAAwD,CAAC,CAAC,gBAAD,CAAD,CAAoB,CAApB,CAAxD,GAAiF,CAApJ;AACH,CAFD;;AAKA,aAAM,YAAN,CAAmB,aAAM,SAAN,CAAgB,qBAAnC;;;;;;;;;;;;;;;IC9JM;;;AA0DF,wBAAY,kBAAZ,EAAoD,CAApD,EAA+D,CAA/D,EAA0E,KAA1E,EAAyF,MAAzF,EAA6G;AAAA;;AACzG,SAAK,kBAAL,GAA0B,kBAA1B;AACA,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,CAAL,GAAS,CAAT;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,QAAL,GAAgB,KAAK,kBAAL,CAAwB,iBAAxB,CAA0C,CAA1C,EAA6C,CAA7C,EAAgD,KAAhD,CAAhB;AACH;;;;SAED,eAAK;AACD,aAAO,KAAK,CAAZ;AACH;;;SAED,eAAK;AACD,aAAO,KAAK,CAAZ;AACH;;;SAKD,eAAY;AACR,UAAM,UAAU,GAAG,KAAK,kBAAxB;AAAA,UACI,CAAC,GAAG,KAAK,CADb;AAAA,UAEI,CAAC,GAAG,KAAK,CAFb;AAAA,UAGI,CAAC,GAAG,KAAK,KAHb;AAIA,aAAO,UAAU,CAAC,iBAAX,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,CAAnC,CAAP;AACH;;;SAKD,eAAS;AACL,aAAO,KAAK,KAAZ;AACH;;;SAKD,eAAY;AACR,aAAO,CAAC,KAAK,cAAN,EAAsB,KAAK,cAA3B,EAA2C,KAAK,cAAhD,EAAgE,KAAK,cAArE,CAAP;AACH;;;SAKD,eAAkB;AACd,WAAK,cAAL,GAAsB,KAAK,cAAL,IAAuB,IAAI,YAAJ,CACzC,KAAK,kBADoC,EAEzC,KAAK,CAAL,GAAS,CAFgC,EAGzC,KAAK,CAAL,GAAS,CAAT,GAAa,CAH4B,EAIzC,KAAK,KAAL,GAAa,CAJ4B,EAKzC,IALyC,CAA7C;AAMA,aAAO,KAAK,cAAZ;AACH;;;SAKD,eAAkB;AACd,WAAK,cAAL,GAAsB,KAAK,cAAL,IAAuB,IAAI,YAAJ,CACzC,KAAK,kBADoC,EAEzC,KAAK,CAAL,GAAS,CAAT,GAAa,CAF4B,EAGzC,KAAK,CAAL,GAAS,CAAT,GAAa,CAH4B,EAIzC,KAAK,KAAL,GAAa,CAJ4B,EAKzC,IALyC,CAA7C;AAMA,aAAO,KAAK,cAAZ;AACH;;;SAKD,eAAkB;AACd,WAAK,cAAL,GAAsB,KAAK,cAAL,IAAuB,IAAI,YAAJ,CACzC,KAAK,kBADoC,EAEzC,KAAK,CAAL,GAAS,CAFgC,EAGzC,KAAK,CAAL,GAAS,CAHgC,EAIzC,KAAK,KAAL,GAAa,CAJ4B,EAKzC,IALyC,CAA7C;AAMA,aAAO,KAAK,cAAZ;AACH;;;SAKD,eAAkB;AACd,WAAK,cAAL,GAAsB,KAAK,cAAL,IAAuB,IAAI,YAAJ,CACzC,KAAK,kBADoC,EAEzC,KAAK,CAAL,GAAS,CAAT,GAAa,CAF4B,EAGzC,KAAK,CAAL,GAAS,CAHgC,EAIzC,KAAK,KAAL,GAAa,CAJ4B,EAKzC,IALyC,CAA7C;AAMA,aAAO,KAAK,cAAZ;AACH;;;;;;;;;;;;;;;AC7JL;;AAEA;;AACA;;;;;;;;AAEA,IAAM,MAAM,GAAG,IAAI,IAAI,CAAC,EAAxB;;AAOA,IAAM,QAAQ,GAAG,SAAX,QAAW,CAAU,CAAV,EAAqB,CAArB,EAA8B;AAC3C,SAAO,CAAE,CAAC,GAAG,CAAL,GAAU,CAAX,IAAgB,CAAvB;AACH,CAFD;;AAQA,IAAM,WAAW,GAAG,SAAd,WAAc,CAAU,KAAV,EAAuB;AACvC,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAD,EAAQ,MAAR,CAApB;AACA,SAAO,IAAI,CAAC,GAAL,CAAS,GAAT,IAAgB,iBAAQ,SAAxB,IAAqC,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,iBAAQ,SAA/D,GAA2E,MAA3E,GAAoF,GAA3F;AACH,CAHD;;AASA,IAAM,cAAc,GAAG,SAAjB,cAAiB,CAAU,KAAV,EAAuB;AAC1C,SAAO,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,EAAd,CAAX,GAA+B,IAAI,CAAC,EAA3C;AACH,CAFD;;IAQM;;;AA2BF,qBAAY,EAAZ,EAAoC,EAApC,EAA0D;AAAA;;AACtD,SAAK,KAAL,GAAa,EAAE,CAAC,QAAhB;AACA,SAAK,IAAL,GAAY,EAAE,CAAC,SAAf;AACA,SAAK,KAAL,GAAa,EAAE,CAAC,QAAhB;AACA,SAAK,IAAL,GAAY,EAAE,CAAC,SAAf;AACH;;;;SAUD,eAAS;AACL,UAAM,IAAI,GAAG,KAAK,IAAlB;AAAA,UAAwB,IAAI,GAAG,KAAK,IAApC;AACA,aAAO,IAAI,GAAG,IAAP,GAAc,IAAI,GAAG,IAAI,CAAC,EAAL,GAAU,CAAjB,GAAqB,IAAnC,GAA0C,IAAI,GAAG,IAAxD;AACH;;;SAKD,eAAU;AACN,UAAM,KAAK,GAAG,KAAK,KAAnB;AAAA,UAA0B,KAAK,GAAG,KAAK,KAAvC;AACA,aAAO,KAAK,GAAG,KAAf;AACH;;;SAKD,eAAU;AACN,aAAO,CAAC,KAAK,SAAN,EAAiB,KAAK,SAAtB,EAAiC,KAAK,SAAtC,EAAiD,KAAK,SAAtD,CAAP;AACH;;;SAKD,eAAa;AACT,aAAO,IAAI,sCAAJ,CAAuB,KAAK,IAA5B,EAAkC,KAAK,KAAvC,EAA8C,GAA9C,CAAP;AACH;;;SAKD,eAAa;AACT,aAAO,IAAI,sCAAJ,CAAuB,KAAK,IAA5B,EAAkC,KAAK,KAAvC,EAA8C,GAA9C,CAAP;AACH;;;SAKD,eAAa;AACT,aAAO,IAAI,sCAAJ,CAAuB,KAAK,IAA5B,EAAkC,KAAK,KAAvC,EAA8C,GAA9C,CAAP;AACH;;;SAKD,eAAa;AACT,aAAO,IAAI,sCAAJ,CAAuB,KAAK,IAA5B,EAAkC,KAAK,KAAvC,EAA8C,GAA9C,CAAP;AACH;;;SAKD,eAAU;AACN,UAAM,IAAI,GAAG,eAAS,QAAT,CAAkB,KAAK,IAAvB,CAAb;AAAA,UACI,KAAK,GAAG,eAAS,QAAT,CAAkB,KAAK,KAAvB,CADZ;AAAA,UAEI,KAAK,GAAG,eAAS,QAAT,CAAkB,KAAK,KAAvB,CAFZ;;AAGA,UAAI,IAAI,GAAG,eAAS,QAAT,CAAkB,KAAK,IAAvB,CAAX;;AACA,MAAA,IAAI,GAAG,IAAI,GAAG,IAAP,GAAc,IAAI,GAAG,MAArB,GAA8B,IAArC;AACA,UAAM,SAAS,GAAG,cAAc,CAAC,CAAC,IAAI,GAAG,IAAR,IAAgB,GAAjB,CAAhC;AACA,UAAM,QAAQ,GAAG,CAAC,KAAK,GAAG,KAAT,IAAkB,GAAnC;AACA,aAAO,IAAI,sCAAJ,CAAuB,eAAS,QAAT,CAAkB,SAAlB,CAAvB,EAAqD,eAAS,QAAT,CAAkB,QAAlB,CAArD,EAAkF,GAAlF,CAAP;AACH;;;WAMM,iBAAQ,kBAAR,EAA8C;AACjD,UAAM,GAAG,GAAG,eAAS,QAAT,CAAkB,kBAAkB,CAAC,SAArC,CAAZ;AAAA,UAA6D,GAAG,GAAG,eAAS,QAAT,CAAkB,kBAAkB,CAAC,QAArC,CAAnE;;AACA,UAAM,IAAI,GAAG,eAAS,QAAT,CAAkB,KAAK,IAAvB,CAAb;AAAA,UAA2C,KAAK,GAAG,eAAS,QAAT,CAAkB,KAAK,KAAvB,CAAnD;AAAA,UAAkF,KAAK,GAAG,eAAS,QAAT,CAAkB,KAAK,KAAvB,CAA1F;;AACA,UAAI,IAAI,GAAG,eAAS,QAAT,CAAkB,KAAK,IAAvB,CAAX;;AACA,MAAA,IAAI,GAAG,IAAI,GAAG,IAAP,GAAc,IAAI,GAAG,MAArB,GAA8B,IAArC;AACA,aAAO,CAAC,GAAG,GAAG,IAAN,IAAc,IAAI,CAAC,GAAL,CAAS,GAAG,GAAG,IAAf,KAAwB,iBAAQ,SAA/C,MAA8D,GAAG,GAAG,IAAN,IAAc,IAAI,CAAC,GAAL,CAAS,GAAG,GAAG,IAAf,KAAwB,iBAAQ,SAA5G,KAA0H,GAAG,IAAI,KAAjI,IAA0I,GAAG,IAAI,KAAxJ;AACH;;;;;;;AA7EM,SAAA,CAAA,SAAA,GAAY,IAAI,SAAJ,CAAc,IAAI,sCAAJ,CAAuB,CAAC,GAAxB,EAA6B,CAAC,EAA9B,CAAd,EAAiD,IAAI,sCAAJ,CAAuB,GAAvB,EAA4B,EAA5B,CAAjD,CAAZ;;;;;;;;;AC1EX;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;IAMM;;;AA0CF,8BAAY,UAAZ,EAA4E;AAAA,QAAxC,OAAwC,uEAAtB,CAAsB;AAAA,QAAnB,OAAmB,uEAAD,CAAC;;AAAA;;AACxE,SAAK,uBAAL,GAA+B,OAAO,GAAG,CAAzC;AACA,SAAK,uBAAL,GAA+B,OAAO,GAAG,CAAzC;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,SAAL,GAAiB,UAAU,CAAC,SAA5B;AACA,SAAK,oBAAL,GAA4B,UAAU,CAAC,SAAX,CAAqB,aAArB,GAAqC,IAAI,CAAC,EAAtE;AACA,SAAK,0BAAL,GAAkC,IAAI,UAAJ,GAAW,GAAX,CAAe,CAAC,KAAK,oBAArB,EAA2C,CAAC,KAAK,oBAAjD,CAAlC;AACA,SAAK,0BAAL,GAAkC,IAAI,UAAJ,GAAW,GAAX,CAAe,KAAK,oBAApB,EAA0C,KAAK,oBAA/C,CAAlC;AACH;;;;WAMM,kCAAyB,KAAzB,EAAsC;AACzC,aAAO,KAAK,uBAAL,IAAgC,KAAvC;AACH;;;WAMM,kCAAyB,KAAzB,EAAsC;AACzC,aAAO,KAAK,uBAAL,IAAgC,KAAvC;AACH;;;WAQM,iCAAwB,CAAxB,EAAmC,CAAnC,EAA8C,KAA9C,EAA2D;AAC9D,UAAM,MAAM,GAAG,KAAK,wBAAL,CAA8B,KAA9B,CAAf;AAAA,UACI,MAAM,GAAG,KAAK,wBAAL,CAA8B,KAA9B,CADb;AAAA,UAEI,UAAU,GAAG,CAAC,KAAK,0BAAL,CAAgC,CAAhC,GAAoC,KAAK,0BAAL,CAAgC,CAArE,IAA0E,MAF3F;AAGA,UAAM,IAAI,GAAG,KAAK,0BAAL,CAAgC,CAAhC,GAAoC,CAAC,GAAG,UAArD;AAAA,UACI,IAAI,GAAG,KAAK,0BAAL,CAAgC,CAAhC,GAAoC,CAAC,CAAC,GAAG,CAAL,IAAU,UADzD;AAAA,UAEI,WAAW,GAAG,CAAC,KAAK,0BAAL,CAAgC,CAAhC,GAAoC,KAAK,0BAAL,CAAgC,CAArE,IAA0E,MAF5F;AAGA,UAAM,KAAK,GAAG,KAAK,0BAAL,CAAgC,CAAhC,GAAoC,CAAC,GAAG,WAAtD;AAAA,UACI,KAAK,GAAG,KAAK,0BAAL,CAAgC,CAAhC,GAAoC,CAAC,CAAC,GAAG,CAAL,IAAU,WAD1D;AAEA,aAAO,IAAI,UAAJ,GAAW,GAAX,CAAe,IAAf,EAAqB,KAArB,EAA4B,IAA5B,EAAkC,KAAlC,CAAP;AACH;;;WAQM,2BAAkB,CAAlB,EAA6B,CAA7B,EAAwC,KAAxC,EAAqD;AACxD,iDAAmC,KAAK,uBAAL,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,KAAnC,EAA0C,KAA7E;AAAA,UAAO,IAAP;AAAA,UAAa,KAAb;AAAA,UAAoB,IAApB;AAAA,UAA0B,KAA1B;;AACA,UAAM,UAAU,GAAG,KAAK,UAAxB;AACA,UAAM,EAAE,GAAG,UAAU,CAAC,SAAX,CAAqB,IAAI,UAAJ,GAAW,GAAX,CAAe,IAAf,EAAqB,KAArB,EAA4B,CAA5B,CAArB,CAAX;AACA,UAAM,EAAE,GAAG,UAAU,CAAC,SAAX,CAAqB,IAAI,UAAJ,GAAW,GAAX,CAAe,IAAf,EAAqB,KAArB,EAA4B,CAA5B,CAArB,CAAX;AACA,aAAO,IAAI,oBAAJ,CAAc,EAAd,EAAkB,EAAlB,CAAP;AACH;;;;;;;AAIL,IAAM,qBAAqB,GAAG,IAAI,kBAAJ,CAAuB,IAAI,iCAAJ,EAAvB,EAAoD,CAApD,EAAuD,CAAvD,CAA9B;;;;;AC7GA;;AAEA;;AACA;;AAGA,IAAM,yBAAyB,GAAG,GAAlC;;AAuEA,aAAM,SAAN,CAAgB,gBAAhB,GAAmC,UAAU,UAAV,EAAwC;AACvE,MAAM,CAAC,GAAG,IAAV;AAAA,MAAyB,CAAC,GAAG,CAAC,CAAC,MAAF,CAAS,MAAtC;AAAA,MAA8C,CAAC,GAAG,CAAC,CAAC,MAAF,CAAS,IAA3D;AAEA,EAAA,CAAC,CAAC,gBAAF,GAAqB;AACjB,IAAA,uBAAuB,EAAE,yBADR;AAEjB,IAAA,KAAK,EAAE,CAFU;AAGjB,IAAA,kBAAkB,EAAE,UAHH;AAIjB,IAAA,cAAc,EAAE,EAJC;AAKjB,IAAA,mBAAmB,EAAE,EALJ;AAMjB,IAAA,cAAc,EAAE,EANC;AAOjB,IAAA,iBAAiB,EAAE;AAPF,GAArB;AAUA,MAAM,cAAc,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,cAA/C;AAAA,MAA+D,MAAM,GAAG,CAAC,CAAC,cAAF,CAAiB,aAAjB,CAA+B,MAAvG;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAApB,EAAwB,CAAC,EAAzB,EAA6B;AACzB,QAAM,cAAc,GAAG,CAAC,CAAC,4BAAF,CAA+B,CAA/B,CAAvB;AAEA,IAAA,CAAC,CAAC,gBAAF,CAAmB,cAAnB,CAAkC,CAAlC,IAAuC,cAAvC;AAEA,IAAA,CAAC,CAAC,gBAAF,CAAmB,mBAAnB,CAAuC,CAAvC,IAA4C,cAAc,GAAG,MAAjB,IAA2B,cAAc,GAAG,yBAA5C,CAA5C;AACH;;AAED,EAAA,CAAC,CAAC,gBAAF,CAAmB,cAAnB,GAAoC,CAAC,CAAC,qBAAF,EAApC;AAEA,EAAA,CAAC,CAAC,QAAF,GAAa,CAAC,CAAC,6BAAF,CAAgC,CAAhC,CAAb;AACA,EAAA,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,QAAxB,GAAmC,CAAC,CAAC,2BAAF,CAA8B,CAA9B,CAAnC;AAEA,EAAA,CAAC,CAAC,iCAAF;AACH,CA5BD;;AAiCA,aAAM,SAAN,CAAgB,qBAAhB,GAAwC,YAAA;AACpC,MAAM,CAAC,GAAG,IAAV;AACA,SAAO,CAAC,CAAC,iBAAF,CAAoB,CAApB,CAAP;AACH,CAHD;;AAQA,aAAM,SAAN,CAAgB,iBAAhB,GAAoC,UAAU,KAAV,EAAsB;AACtD,MAAM,CAAC,GAAG,IAAV;AACA,MAAM,kBAAkB,GAAG,CAAC,CAAC,gBAAF,CAAmB,kBAA9C;AAAA,MACI,uBAAuB,GAAG,kBAAkB,CAAC,wBAAnB,CAA4C,KAA5C,CAD9B;AAAA,MAEI,uBAAuB,GAAG,kBAAkB,CAAC,wBAAnB,CAA4C,KAA5C,CAF9B;AAAA,MAGI,cAAc,GAAG,EAHrB;AAIA,MAAI,IAAI,GAAG,CAAX;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,uBAApB,EAA6C,EAAE,CAA/C;AACI,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,uBAApB,EAA6C,EAAE,CAA/C;AACI,MAAA,cAAc,CAAC,IAAI,EAAL,CAAd,GAAyB,IAAI,0BAAJ,CAAiB,kBAAjB,EAAqC,CAArC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,IAA9C,CAAzB;AADJ;AADJ;;AAGA,SAAO,cAAP;AACH,CAXD;;AAkBA,aAAM,SAAN,CAAgB,4BAAhB,GAA+C,UAAU,KAAV,EAAuB;AAClE,MAAM,CAAC,GAAG,IAAV;AACA,MAAM,cAAc,GAAG,GAAvB;;AACA,MAAM,qBAAqB,GAAG,CAAC,CAAC,SAAF,CAAY,aAAZ,GAA4B,IAAI,CAAC,EAAjC,IAAuC,cAAc,GAAG,CAAC,CAAC,gBAAF,CAAmB,kBAAnB,CAAsC,wBAAtC,CAA+D,KAA/D,CAAxD,CAA9B;;AACA,SAAO,qBAAP;AACH,CALD;;AAUA,aAAM,SAAN,CAAgB,0BAAhB,GAA6C,UAAU,QAAV,EAAwB;AACjE,MAAM,CAAC,GAAG,IAAV;AAEA,MAAG,CAAC,CAAC,gBAAF,CAAmB,kBAAnB,KAA0C,yCAA7C,EACI,OAAO,CAAC,CAAC,gBAAF,CAAmB,cAA1B;AAEJ,MAAM,sBAAsB,GAAG,CAAC,CAAC,gBAAF,CAAmB,cAAlD;AACA,MAAM,4BAA4B,GAAkB,EAApD;AAEA,MAAM,kBAAkB,GAAG,CAAC,CAAC,SAAF,CAAY,iBAAZ,CAA8B,QAA9B,CAA3B;AAEA,EAAA,sBAAsB,CAAC,OAAvB,CAA+B,UAAC,YAAD,EAAiB;AAC5C,IAAA,YAAY,CAAC,QAAb,CAAsB,OAAtB,CAA8B,kBAA9B,IAAoD,4BAA4B,CAAC,IAA7B,CAAkC,YAAlC,CAApD,GAAsG,IAAtG;AACH,GAFD;AAGA,SAAO,4BAAP;AACH,CAfD;;AAoBA,aAAM,SAAN,CAAgB,iBAAhB,GAAoC,UAAU,YAAV,EAAoC;AACpE,MAAM,CAAC,GAAG,IAAV;;AAGA,MAAM,KAAK,GAAG,YAAY,CAAC,KAA3B;AAAA,MACI,iBAAiB,GAAG,CAAC,CAAC,gBAAF,CAAmB,cAAnB,CAAkC,KAAlC,CADxB;AAAA,MAEI,cAAc,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,cAF7C;AAAA,MAGI,MAAM,GAAG,CAAC,CAAC,cAAF,CAAiB,aAAjB,CAA+B,MAH5C;AAAA,MAII,mBAAmB,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,QAAxB,CAAiC,KAAjC,EAJ1B;AAAA,MAKI,MAAM,GAAG,YAAY,CAAC,QAAb,CAAsB,MALnC;AAAA,MAMI,MAAM,GAAG,YAAY,CAAC,QAAb,CAAsB,MANnC;;AAiBA,MAAM,aAAa,GAAG,CAAC,CAAC,SAAF,CAAY,iBAAZ,CAA8B,MAA9B,CAAtB;AACA,MAAM,QAAQ,GAAG,mBAAmB,CAAC,KAApB,GAA4B,GAA5B,CAAgC,aAAhC,EAA+C,GAA/C,EAAjB;AAEA,MAAM,GAAG,GAAI,iBAAiB,GAAG,MAArB,IAA8B,QAAQ,GAAC,cAAvC,CAAZ;AACA,SAAO,GAAP;AACH,CA1BD;;AA+BA,aAAM,SAAN,CAAgB,6BAAhB,GAAgD,UAAS,KAAT,EAAqB;AACjE,MAAM,CAAC,GAAG,IAAV;AACA,SAAO,CAAC,CAAC,gBAAF,CAAmB,mBAAnB,CAAuC,KAAvC,CAAP;AACH,CAHD;;AAKA,aAAM,SAAN,CAAgB,iCAAhB,GAAoD,YAAA;AAChD,MAAM,CAAC,GAAG,IAAV;;AACA,MAAM,QAAQ,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,QAAxB,CAAiC,KAAjC,EAAjB;;AACA,MAAI,KAAK,GAAG,CAAZ;AACA,MAAM,SAAS,GAAG,CAAC,CAAC,0BAAF,CAA6B,QAA7B,CAAlB;AAEA,MAAM,gBAAgB,GAAkB,EAAxC;AACA,MAAM,sBAAsB,GAAkB,EAA9C;;AAEA,MAAM,KAAK,GAAG,SAAR,KAAQ,CAAC,YAAD,EAA+B;AACzC,QAAM,KAAK,GAAG,CAAC,CAAC,iBAAF,CAAoB,YAApB,CAAd;AACA,QAAI,KAAK,GAAG,yBAAZ,EACI,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,CAAC,EAAxB;AACI,MAAA,KAAK,CAAC,YAAY,CAAC,QAAb,CAAsB,CAAtB,CAAD,CAAL;AADJ,KADJ,MAGK;AACD,UAAM,QAAQ,GAAG,YAAY,CAAC,KAA9B;AACA,MAAA,KAAK,GAAG,QAAQ,GAAG,KAAX,GAAmB,QAAnB,GAA8B,KAAtC;AACA,MAAA,gBAAgB,CAAC,IAAjB,CAAsB,YAAtB;AACH;AACJ,GAVD;;AAYA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,SAAS,CAAC,MAAhC,EAAwC,CAAC,GAAG,GAA5C,EAAiD,CAAC,EAAlD,EAAsD;AAClD,QAAM,IAAI,GAAG,SAAS,CAAC,CAAD,CAAtB;AACA,IAAA,KAAK,CAAC,IAAD,CAAL;AACH;;AAED,OAAK,IAAI,EAAC,GAAG,CAAR,EAAW,IAAG,GAAG,gBAAgB,CAAC,MAAvC,EAA+C,EAAC,GAAG,IAAnD,EAAwD,EAAC,EAAzD,EAA6D;AACzD,QAAM,YAAY,GAAG,gBAAgB,CAAC,EAAD,CAArC;AACA,QAAG,YAAY,CAAC,KAAb,KAAuB,KAA1B,EACI,sBAAsB,CAAC,IAAvB,CAA4B,YAA5B;AACP;;AAED,EAAA,CAAC,CAAC,gBAAF,CAAmB,KAAnB,GAA2B,KAA3B;AACA,EAAA,CAAC,CAAC,gBAAF,CAAmB,iBAAnB,GAAuC,sBAAvC;AAEA,EAAA,CAAC,CAAC,IAAF,CAAO,aAAP,EAAsB,CAAC,CAAC,gBAAF,CAAmB,iBAAzC;AACH,CApCD;;AAuCA,aAAM,YAAN,CAAmB,aAAM,SAAN,CAAgB,gBAAnC,EAAqD,yCAArD;;;;;;;;;AC5OA,MAAM,SAAS,GAAI,CAAD,IAAc;AAC5B,OAAK,IAAI,CAAC,GAAW,EAAhB,EAAoB,GAAG,GAAY,KAAK,EAA7C,EAAkD,CAAC,IAAI,GAAvD,EAA4D,CAAC,IAAI,EAAjE,EACI,IAAI,CAAC,IAAI,CAAT,EACI,OAAO,CAAP;;AACR,SAAO,CAAP;AACH,CALD;;AAYA,MAAM,QAAQ,GAAI,CAAD,IAAsB;AACnC,MAAI,KAAK,GAAW,CAApB;AACA,MAAI,CAAC,GAAW,EAAE,CAAC,GAAG,MAAN,KAAiB,CAAjC;AACA,EAAA,CAAC,MAAM,CAAP;AACA,EAAA,KAAK,GAAG,EAAE,CAAC,GAAG,IAAN,KAAe,CAAvB;AACA,EAAA,CAAC,MAAM,KAAP;AACA,EAAA,CAAC,IAAI,KAAL;AACA,EAAA,KAAK,GAAG,EAAE,CAAC,GAAG,GAAN,KAAc,CAAtB;AACA,EAAA,CAAC,MAAM,KAAP;AACA,EAAA,CAAC,IAAI,KAAL;AACA,EAAA,KAAK,GAAG,EAAE,CAAC,GAAG,GAAN,KAAc,CAAtB;AACA,EAAA,CAAC,MAAM,KAAP;AACA,EAAA,CAAC,IAAI,KAAL;AACA,SAAO,CAAC,GAAI,CAAC,IAAI,CAAjB;AACH,CAdD;;AAqBA,MAAM,SAAS,GAAI,CAAD,IAA+B;AAC7C,QAAM,CAAC,GAAoB,EAA3B;;AACA,OAAK,IAAI,CAAC,GAAW,CAArB,EAAwB,CAAC,GAAG,CAA5B,EAA+B,CAAC,EAAhC,EACI,CAAC,CAAC,CAAD,CAAD,GAAO,EAAP;;AACJ,SAAO,CAAP;AACH,CALD;;AAWA,MAAM,UAAN,CAAgB;AAAhB,EAAA,WAAA,GAAA;AAIY,SAAA,UAAA,GAA8B,SAAS,CAAC,CAAD,CAAvC;;AAMD,SAAA,KAAA,GAAS,IAAD,IAA8B;AACzC,YAAM,UAAU,GAAG,KAAK,UAAxB;AAAA,YACI,UAAU,GAAG,SAAS,CAAC,IAAD,CAD1B;AAAA,YAEI,GAAG,GAAG,UAAU,CAAC,QAAQ,CAAC,UAAD,CAAR,IAAwB,CAAzB,CAFpB;AAGA,aAAO,GAAG,CAAC,MAAJ,GAAa,CAAb,GAAiB,GAAG,CAAC,GAAJ,EAAjB,GAA6B,IAAI,WAAJ,CAAgB,UAAhB,CAApC;AACH,KALM;;AAYA,SAAA,SAAA,GAAY,CAAC,UAAD,EAAyB,IAAzB,KAA2D;AAC1E,YAAM,KAAK,GAAG,KAAK,KAAnB;AACA,UAAI,GAAG,GAAqB,IAA5B;;AACA,cAAQ,UAAR;AACI,aAAK,MAAL;AACI,UAAA,GAAG,GAAG,IAAI,SAAJ,CAAc,KAAK,CAAC,IAAD,CAAnB,EAA2B,CAA3B,EAA8B,IAA9B,CAAN;AACA;;AACJ,aAAK,eAAL;AACI,UAAA,GAAG,GAAG,IAAI,UAAJ,CAAe,KAAK,CAAC,IAAD,CAApB,EAA4B,CAA5B,EAA+B,IAA/B,CAAN;AACA;;AACJ,aAAK,OAAL;AACI,UAAA,GAAG,GAAG,IAAI,UAAJ,CAAe,KAAK,CAAC,IAAI,IAAL,CAApB,EAAgC,CAAhC,EAAmC,IAAnC,CAAN;AACA;;AACJ,aAAK,gBAAL;AACI,UAAA,GAAG,GAAG,IAAI,WAAJ,CAAgB,KAAK,CAAC,IAAI,IAAL,CAArB,EAAiC,CAAjC,EAAoC,IAApC,CAAN;AACA;;AACJ,aAAK,KAAL;AACI,UAAA,GAAG,GAAG,IAAI,UAAJ,CAAe,KAAK,CAAC,IAAI,IAAL,CAApB,EAAgC,CAAhC,EAAmC,IAAnC,CAAN;AACA;;AACJ,aAAK,cAAL;AACI,UAAA,GAAG,GAAG,IAAI,WAAJ,CAAgB,KAAK,CAAC,IAAI,IAAL,CAArB,EAAiC,CAAjC,EAAoC,IAApC,CAAN;AACA;;AACJ,aAAK,OAAL;AACI,UAAA,GAAG,GAAG,IAAI,YAAJ,CAAiB,KAAK,CAAC,IAAI,IAAL,CAAtB,EAAkC,CAAlC,EAAqC,IAArC,CAAN;AACA;AArBR;;AAuBA,UAAI,GAAG,CAAC,MAAJ,KAAe,IAAnB,EAAyB,GAAG,GAAG,GAAG,CAAC,QAAJ,CAAa,CAAb,EAAgB,IAAhB,CAAN;AACzB,aAAO,GAAP;AACH,KA5BM;;AAmCA,SAAA,IAAA,GAAQ,MAAD,IAA8B;AACxC,UAAI,CAAC,MAAL,EAAa;AACb,YAAM,UAAU,GAAG,KAAK,UAAxB;AACA,MAAA,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAR,CAAR,IAA+B,CAAhC,CAAV,CAA6C,IAA7C,CAAkD,MAAlD;AACH,KAJM;;AAUA,SAAA,QAAA,GAAY,gBAAD,IAA6C;AAC3D,WAAK,IAAL,CAAU,gBAAgB,CAAC,MAA3B;AACH,KAFM;AAGV;;AAtEe;;AA2EhB,MAAM,WAAW,GAAG,IAAI,UAAJ,EAApB;;;;;;;;;ACzHA,MAAM,UAAU,GAAG;AAIf,EAAA,QAAQ,EAAE,MAJK;AASf,EAAA,aAAa,EAAE,MATA;AAcf,EAAA,qBAAqB,EAAE,MAdR;AAmBf,EAAA,OAAO,EAAE,MAnBM;AAwBf,EAAA,OAAO,EAAE;AAxBM,CAAnB;;AA8BA,MAAM,UAAU,GAAG;AAIf,EAAA,IAAI,EAAE,MAJS;AASf,EAAA,aAAa,EAAE,MATA;AAcf,EAAA,KAAK,EAAE,MAdQ;AAmBf,EAAA,cAAc,EAAE,MAnBD;AAwBf,EAAA,GAAG,EAAE,MAxBU;AA6Bf,EAAA,YAAY,EAAE,MA7BC;AAkCf,EAAA,KAAK,EAAE;AAlCQ,CAAnB;;AAwCA,MAAM,UAAU,GAAG;AAIf,EAAA,MAAM,EAAE,CAJO;AASf,EAAA,KAAK,EAAE,CATQ;AAcf,EAAA,SAAS,EAAE,CAdI;AAmBf,EAAA,UAAU,EAAE,CAnBG;AAwBf,EAAA,SAAS,EAAE,CAxBI;AA6Bf,EAAA,cAAc,EAAE,CA7BD;AAkCf,EAAA,YAAY,EAAE;AAlCC,CAAnB;;AAiDA,MAAM,iBAAiB,GAAG;AAItB,EAAA,UAAU,EAAE,MAJU;AAStB,EAAA,gBAAgB,EAAE,MATI;AActB,EAAA,2BAA2B,EAAE,MAdP;AAmBtB,EAAA,2BAA2B,EAAE,MAnBP;AAwBtB,EAAA,2BAA2B,EAAE,MAxBP;AA6BtB,EAAA,2BAA2B,EAAE,MA7BP;AAkCtB,EAAA,2BAA2B,EAAE,MAlCP;AAuCtB,EAAA,2BAA2B,EAAE;AAvCP,CAA1B;;AA6CA,MAAM,aAAa,GAAG;AAIlB,EAAA,eAAe,EAAE,MAJC;AASlB,EAAA,aAAa,EAAE;AATG,CAAtB;;AAeA,MAAM,kBAAkB,GAAG;AAIvB,EAAA,YAAY,EAAE,MAJS;AASvB,EAAA,oBAAoB,EAAE;AATC,CAA3B;;AAeA,MAAM,MAAM,GAAG;AAIX,EAAA,WAAW,EAAE,MAJF;AASX,EAAA,WAAW,EAAE,MATF;AAcX,EAAA,YAAY,EAAE;AAdH,CAAf;;AAoBA,MAAM,UAAU,GAAG;AAIf,EAAA,MAAM,EAAE,CAJO;AASf,EAAA,KAAK,EAAE,CATQ;AAcf,EAAA,SAAS,EAAE;AAdI,CAAnB;;AAoBA,MAAM,aAAa,GAAG;AAIlB,EAAA,iBAAiB,EAAE,MAJD;AASlB,EAAA,eAAe,EAAE;AATC,CAAtB;;AAeA,MAAM,OAAO,GAAG;AAIZ,EAAA,MAAM,EAAE,CAJI;AASZ,EAAA,IAAI,EAAE,CATM;AAcZ,EAAA,IAAI,EAAE,CAdM;AAmBZ,EAAA,IAAI,EAAE,CAnBM;AAwBZ,EAAA,IAAI,EAAE,CAxBM;AA6BZ,EAAA,IAAI,EAAE,CA7BM;AAkCZ,EAAA,IAAI,EAAE;AAlCM,CAAhB;;AAwCA,MAAM,iBAAiB,GAAG;AAItB,EAAA,UAAU,EAAE,MAJU;AAStB,EAAA,YAAY,EAAE;AATQ,CAA1B;;AAeA,MAAM,kBAAkB,GAAG;AAIvB,EAAA,MAAM,EAAE,MAJe;AASvB,EAAA,aAAa,EAAE,MATQ;AAcvB,EAAA,eAAe,EAAE;AAdM,CAA3B;;AAoBA,MAAM,WAAW,GAAG;AAIhB,EAAA,SAAS,EAAE,MAJK;AAShB,EAAA,OAAO,EAAE,MATO;AAchB,EAAA,MAAM,EAAE;AAdQ,CAApB;;AAyBA,MAAM,kBAAkB,GAAG;AAIvB,EAAA,cAAc,EAAE,MAJO;AASvB,EAAA,cAAc,EAAE;AATO,CAA3B;;AAeA,MAAM,iBAAiB,GAAG;AAItB,EAAA,OAAO,EAAE,MAJa;AAStB,EAAA,MAAM,EAAE;AATc,CAA1B;;AAeA,MAAM,iBAAiB,GAAG;AAItB,EAAA,OAAO,EAAE,MAJa;AAStB,EAAA,MAAM,EAAE,MATc;AActB,EAAA,sBAAsB,EAAE,MAdF;AAmBtB,EAAA,qBAAqB,EAAE,MAnBD;AAwBtB,EAAA,qBAAqB,EAAE,MAxBD;AA6BtB,EAAA,oBAAoB,EAAE;AA7BA,CAA1B;;AAmCA,MAAM,WAAW,GAAG;AAIhB,EAAA,IAAI,EAAE,CAJU;AAShB,EAAA,qBAAqB,EAAE;AATP,CAApB;;AAYA,MAAM,iBAAiB,GAAG;AAItB,EAAA,IAAI,EAAE,MAJgB;AAStB,EAAA,aAAa,EAAE,MATO;AActB,EAAA,KAAK,EAAE,MAde;AAmBtB,EAAA,cAAc,EAAE,MAnBM;AAwBtB,EAAA,GAAG,EAAE,MAxBiB;AA6BtB,EAAA,YAAY,EAAE,MA7BQ;AAkCtB,EAAA,KAAK,EAAE,MAlCe;AAuCtB,EAAA,sBAAsB,EAAE,MAvCF;AA4CtB,EAAA,sBAAsB,EAAE,MA5CF;AAiDtB,EAAA,oBAAoB,EAAE,MAjDA;AAsDtB,EAAA,cAAc,EAAE,MAtDM;AA2DtB,EAAA,uBAAuB,EAAE;AA3DH,CAA1B;;AAiEA,MAAM,aAAa,GAAG;AAIlB,EAAA,KAAK,EAAE,MAJW;AASlB,EAAA,GAAG,EAAE,MATa;AAclB,EAAA,IAAI,EAAE,MAdY;AAmBlB,EAAA,KAAK,EAAE,MAnBW;AAwBlB,EAAA,OAAO,EAAE,MAxBS;AA6BlB,EAAA,MAAM,EAAE,MA7BU;AAkClB,EAAA,SAAS,EAAE,MAlCO;AAuClB,EAAA,eAAe,EAAE,MAvCC;AA4ClB,EAAA,QAAQ,EAAE,MA5CQ;AAiDlB,EAAA,cAAc,EAAE,MAjDE;AAsDlB,EAAA,eAAe,EAAE,MAtDC;AA2DlB,EAAA,aAAa,EAAE;AA3DG,CAAtB;;AAiEA,MAAM,uBAAuB,GAAG;AAI5B,EAAA,KAAK,EAAE,wBAJqB;AAS5B,EAAA,OAAO,EAAE;AATmB,CAAhC;;AAeA,MAAM,kBAAkB,GAAG;AAIvB,EAAA,4BAA4B,EAAE,MAJP;AASvB,EAAA,6BAA6B,EAAE,MATR;AAcvB,EAAA,6BAA6B,EAAE,MAdR;AAmBvB,EAAA,6BAA6B,EAAE;AAnBR,CAA3B;;AAyBA,MAAM,qBAAqB,GAAG;AAI1B,UAAQ,CAJkB;AAS1B,UAAQ,CATkB;AAc1B,UAAQ,CAdkB;AAmB1B,UAAQ,CAnBkB;AAwB1B,UAAQ,CAxBkB;AA6B1B,UAAQ,CA7BkB;AAkC1B,UAAQ,CAlCkB;AAuC1B,UAAQ,CAvCkB;AA4C1B,UAAQ,CA5CkB;AAiD1B,UAAQ,CAjDkB;AAsD1B,UAAQ,CAtDkB;AA2D1B,UAAQ;AA3DkB,CAA9B;;AAiEA,MAAM,oBAAoB,GAAG;AAIzB,UAAQ,CAJiB;AASzB,UAAQ,CATiB;AAczB,UAAQ,CAdiB;AAmBzB,UAAQ,CAnBiB;AAwBzB,UAAQ,CAxBiB;AA6BzB,UAAQ,CA7BiB;AAkCzB,UAAQ,CAlCiB;AAuCzB,UAAQ,CAvCiB;AA4CzB,UAAQ;AA5CiB,CAA7B;;AAkDA,MAAM,kBAAkB,GAAG;AAIvB,EAAA,KAAK,EAAE,MAJgB;AASvB,EAAA,MAAM,EAAE,MATe;AAcvB,EAAA,OAAO,EAAE,MAdc;AAmBvB,EAAA,iBAAiB,EAAE,MAnBI;AAwBvB,EAAA,cAAc,EAAE,MAxBO;AA6BvB,EAAA,aAAa,EAAE,MA7BQ;AAkCvB,EAAA,gBAAgB,EAAE,MAlCK;AAuCvB,EAAA,UAAU,EAAE,MAvCW;AA4CvB,EAAA,WAAW,EAAE,MA5CU;AAiDvB,EAAA,WAAW,EAAE;AAjDU,CAA3B;;AAuDA,MAAM,gBAAgB,GAAG;AAKrB,EAAA,IAAI,EAAE,CALe;AAUrB,EAAA,OAAO,EAAE,CAVY;AAerB,EAAA,KAAK,EAAE,CAfc;AAoBrB,EAAA,QAAQ,EAAE,CApBW;AAyBrB,EAAA,MAAM,EAAE;AAzBa,CAAzB;;AA+BA,MAAM,gBAAgB,GAAG;AAIrB,EAAA,MAAM,EAAE,gBAAgB,CAAC,IAJJ;AASrB,EAAA,KAAK,EAAE,gBAAgB,CAAC,IATH;AAcrB,EAAA,UAAU,EAAE,gBAAgB,CAAC,IAdR;AAmBrB,EAAA,SAAS,EAAE,gBAAgB,CAAC,IAnBP;AAwBrB,EAAA,mBAAmB,EAAE,gBAAgB,CAAC,IAxBjB;AA6BrB,EAAA,wBAAwB,EAAE,gBAAgB,CAAC,IA7BtB;AAkCrB,EAAA,eAAe,EAAE,gBAAgB,CAAC,IAlCb;AAuCrB,EAAA,YAAY,EAAE,gBAAgB,CAAC,IAvCV;AA4CrB,EAAA,YAAY,EAAE,gBAAgB,CAAC;AA5CV,CAAzB;;AAkDA,MAAM,oBAAoB,GAAG;AAIzB,EAAA,UAAU,EAAE,gBAAgB,CAAC,KAJJ;AASzB,EAAA,OAAO,EAAE,gBAAgB,CAAC,QATD;AAczB,EAAA,qBAAqB,EAAE,gBAAgB,CAAC,QAdf;AAmBzB,EAAA,iBAAiB,EAAE,gBAAgB,CAAC,QAnBX;AAwBzB,EAAA,SAAS,EAAC,gBAAgB,CAAC,QAxBF;AA6BzB,EAAA,SAAS,EAAE,gBAAgB,CAAC,MA7BH;AAkCzB,EAAA,UAAU,EAAE,gBAAgB,CAAC,QAlCJ;AAuCzB,EAAA,SAAS,EAAE,gBAAgB,CAAC,OAvCH;AA4CzB,EAAA,SAAS,EAAE,gBAAgB,CAAC,QA5CH;AAiDzB,EAAA,QAAQ,EAAE,gBAAgB,CAAC,MAjDF;AAsDzB,EAAA,SAAS,EAAE,gBAAgB,CAAC,MAtDH;AA2DzB,EAAA,SAAS,EAAE,gBAAgB,CAAC,MA3DH;AAgEzB,EAAA,aAAa,EAAE,gBAAgB,CAAC,QAhEP;AAqEzB,EAAA,cAAc,EAAC,gBAAgB,CAAC,QArEP;AA0EzB,EAAA,WAAW,EAAE,gBAAgB,CAAC,MA1EL;AA+EzB,EAAA,WAAW,EAAE,gBAAgB,CAAC,QA/EL;AAoFzB,EAAA,iBAAiB,EAAE,gBAAgB,CAAC,QApFX;AAyFzB,EAAA,SAAS,EAAC,gBAAgB,CAAC,QAzFF;AA8FzB,EAAA,QAAQ,EAAE,gBAAgB,CAAC;AA9FF,CAA7B;;AAoGA,MAAM,YAAY,GAAC;AAIf,QAAK,CAJU;AASf,SAAM,CATS;AAcf,SAAM,CAdS;AAmBf,SAAM,CAnBS;AAwBf,SAAM,CAxBS;AA6Bf,SAAM,CA7BS;AAkCf,SAAM,CAlCS;AAuCf,SAAM,CAvCS;AA4Cf,SAAM,CA5CS;AAiDf,SAAM;AAjDS,CAAnB;;;;;;;;;;ACv7BA;;AACA;;AAKA,MAAM,8BAA8B,GAAG,MAAvC;AAKA,MAAM,sBAAsB,GAAG,MAA/B;AAKA,MAAM,2BAA2B,GAAG,MAApC;;AAgCA,MAAM,KAAN,CAAW;AAkIP,EAAA,WAAA,CACI,EADJ,EAEI,MAFJ,EAEqB;AA9Hd,SAAA,cAAA,GAAyB,CAAzB;AAKA,SAAA,cAAA,GAAyB,CAAzB;AAKA,SAAA,mBAAA,GAA8B,CAA9B;AAKA,SAAA,SAAA,GAAqB,KAArB;AAKA,SAAA,eAAA,GAA2B,IAA3B;AAMA,SAAA,SAAA,GAAsB,IAAI,KAAJ,CAAU,CAAV,CAAtB;AAgGA,SAAA,IAAA,GAAa,EAAb;AAUH,QAAI,MAAM,CAAC,GAAP,CAAW,gCAAX,CAAJ,EACI,KAAK,cAAL,GAAsB,EAAE,CAAC,YAAH,CAAgB,8BAAhB,CAAtB;;AAOJ,QAAI,MAAM,CAAC,GAAP,CAAW,oBAAX,CAAJ,EAAsC;AAClC,WAAK,cAAL,GAAsB,EAAE,CAAC,YAAH,CAAgB,sBAAhB,CAAtB;AACA,WAAK,mBAAL,GAA2B,EAAE,CAAC,YAAH,CAAgB,2BAAhB,CAA3B;AACH;;AAKD,QAAI,MAAM,CAAC,GAAP,CAAW,mBAAX,CAAJ,EAAqC;AACjC,WAAK,SAAL,GAAiB,IAAjB;AACA,YAAM,gBAAgB,GAAG,EAAE,CAAC,aAAH,EAAzB;AACA,MAAA,EAAE,CAAC,WAAH,CAAe,4BAAkB,UAAjC,EAA6C,gBAA7C;AACA,MAAA,EAAE,CAAC,UAAH,CAAc,4BAAkB,UAAhC,EAA4C,CAA5C,EAA+C,EAAE,CAAC,IAAlD,EAAwD,CAAxD,EAA2D,CAA3D,EAA8D,CAA9D,EAAiE,EAAE,CAAC,IAApE,EAA0E,qBAAW,KAArF,EAA4F,IAA5F;AACA,YAAM,GAAG,GAAG,EAAE,CAAC,iBAAH,EAAZ;AACA,MAAA,EAAE,CAAC,eAAH,CAAmB,EAAE,CAAC,WAAtB,EAAmC,GAAnC;AACA,MAAA,EAAE,CAAC,oBAAH,CAAwB,EAAE,CAAC,WAA3B,EAAwC,EAAE,CAAC,iBAA3C,EAA8D,4BAAkB,UAAhF,EAA4F,gBAA5F,EAA8G,CAA9G;AACA,MAAA,EAAE,CAAC,WAAH,CAAe,4BAAkB,UAAjC,EAA6C,IAA7C;AACA,UAAI,EAAE,CAAC,sBAAH,CAA0B,EAAE,CAAC,WAA7B,MAA8C,EAAE,CAAC,oBAArD,EACI,KAAK,SAAL,GAAiB,KAAjB,CADJ,KAEK;AACD,QAAA,EAAE,CAAC,QAAH,CAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB;AACA,QAAA,EAAE,CAAC,UAAH,CAAc,GAAd,EAAmB,GAAnB,EAAwB,GAAxB,EAA6B,GAA7B;AACA,QAAA,EAAE,CAAC,KAAH,CAAS,EAAE,CAAC,gBAAZ;;AACA,cAAM,MAAM,GAAG,wBAAY,SAAZ,CAAsB,OAAtB,EAA+B,CAA/B,CAAf;;AACA,QAAA,EAAE,CAAC,UAAH,CAAc,CAAd,EAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,EAAE,CAAC,IAA7B,EAAmC,qBAAW,KAA9C,EAAqD,MAArD;AACA,YAAI,EAAE,CAAC,QAAH,EAAJ,EACI,KAAK,SAAL,GAAiB,KAAjB,CADJ,KAEK;AACD,UAAA,EAAE,CAAC,iBAAH,CAAqB,GAArB;AACA,UAAA,EAAE,CAAC,aAAH,CAAiB,gBAAjB;AACA,eAAK,SAAL,GAAiB,MAAM,CAAC,CAAD,CAAN,KAAc,GAA/B;AACH;;AACD,gCAAY,QAAZ,CAAqB,MAArB;AACH;AACJ;;AAKD,UAAM,WAAW,GAAG,EAAE,CAAC,aAAH,EAApB;;AACA,UAAM,IAAI,GAAG,wBAAY,SAAZ,CAAsB,eAAtB,EAAuC,EAAvC,CAAb;;AACA,IAAA,EAAE,CAAC,aAAH,CAAiB,EAAE,CAAC,QAApB;AACA,IAAA,EAAE,CAAC,WAAH,CAAe,4BAAkB,gBAAjC,EAAmD,WAAnD;AACA,IAAA,EAAE,CAAC,UAAH,CAAc,4BAAkB,2BAAhC,EAA6D,CAA7D,EAAgE,EAAE,CAAC,IAAnE,EAAyE,CAAzE,EAA4E,CAA5E,EAA+E,CAA/E,EAAkF,EAAE,CAAC,IAArF,EAA2F,qBAAW,aAAtG,EAAqH,IAArH;;AACA,4BAAY,QAAZ,CAAqB,IAArB;;AACA,IAAA,EAAE,CAAC,WAAH,CAAe,4BAAkB,gBAAjC,EAAmD,IAAnD;AACA,IAAA,EAAE,CAAC,aAAH,CAAiB,WAAjB;AACA,SAAK,eAAL,GAAuB,CAAC,EAAE,CAAC,QAAH,EAAxB;AAKA,SAAK,SAAL,CAAe,IAAf,CAAoB,GAAG,CAAC,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,QAAnB,CAAD,EAA+B,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,UAAnB,CAA/B,EAA+D,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,SAAnB,CAA/D,EAA8F,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,UAAnB,CAA9F,CAAvB;AAKA,SAAK,SAAL,GAAiB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,UAAnB,CAAjB;AAKA,SAAK,WAAL,GAAmB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,YAAnB,CAAnB;AAKA,SAAK,aAAL,GAAqB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,wBAAnB,CAArB;AAKA,SAAK,aAAL,GAAqB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,wBAAnB,CAArB;AAKA,SAAK,eAAL,GAAuB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,iBAAnB,CAAvB;AAKA,SAAK,sBAAL,GAA8B,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,gCAAnB,CAA9B;AAKA,SAAK,cAAL,GAAsB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,yBAAnB,CAAtB;AAKA,SAAK,mBAAL,GAA2B,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,qBAAnB,CAA3B;AAKA,SAAK,eAAL,GAAuB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,uBAAnB,CAAvB;AAKA,SAAK,cAAL,GAAsB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,gBAAnB,CAAtB;AAKA,SAAK,aAAL,GAAqB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,kBAAnB,CAArB;AAKA,SAAK,iBAAL,GAAyB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,0BAAnB,CAAzB;AAKA,SAAK,mBAAL,GAA2B,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,4BAAnB,CAA3B;AAKA,SAAK,qBAAL,GAA6B,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,8BAAnB,CAA7B;AAKA,SAAK,iBAAL,GAAyB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,mBAAnB,CAAzB;AAKA,SAAK,IAAL,CAAU,IAAV,GAAiB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,wBAAnB,CAAjB;AAKA,SAAK,IAAL,CAAU,MAAV,GAAmB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,MAAnB,CAAnB;AAKA,SAAK,IAAL,CAAU,OAAV,GAAoB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,OAAnB,CAApB;AAKA,SAAK,IAAL,CAAU,QAAV,GAAqB,EAAE,CAAC,YAAH,CAAgB,EAAE,CAAC,QAAnB,CAArB;AACH;;AAtSM;;;;;;;;;;;AC3CX,MAAM,KAAK,GAAG,CAAC,IAAD,EAAY,OAAZ,KAA+B;AACzC,MAAI,CAAC,IAAL,EACI,MAAM,IAAI,KAAJ,CAAU,UAAU,OAAO,EAA3B,CAAN;AACP,CAHD;;;;;;;;;;ACHA,IAAI,EAAE,GAAW,CAAjB;;AASA,MAAM,MAAM,GAAG,MAAa;AACxB,SAAO,EAAE,EAAT;AACH,CAFD;;;;;;;;;;;ACZA;;AAcA,MAAe,OAAf,CAAsB;AAAtB,EAAA,WAAA,GAAA;AAIc,SAAA,EAAA,GAAa,qBAAb;AAYA,SAAA,QAAA,GAAmB,CAAnB;AAWb;;AAlBG,MAAI,EAAJ,GAAM;AACF,WAAO,KAAK,EAAZ;AACH;;AAXiB;;;;;;;;;;;ACdtB;;AAGA;;AAGA;;AAuDA,MAAM,WAAW,GAA0B,IAAI,GAAJ,EAA3C;;AAKA,MAAM,gBAAgB,GAAe,EAArC;;AAKA,MAAM,UAAU,GAAW,MAA3B;AAKA,MAAM,WAAW,GAAW,MAA5B;;AAKA,MAAM,QAAN,SAAuB,gBAAvB,CAA8B;AAoJ1B,EAAA,WAAA,CACI,EADJ,EAEI,MAFJ,EAGI,MAHJ,EAII,KAJJ,EAIiB;AAEb;;AAoBG,SAAA,IAAA,GAAO,MAAa;AACvB,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YAAoB,MAAM,GAAG,KAAK,MAAlC;AACA,YAAM,WAAW,GAAG,KAAK,MAAL,CAAY,eAAhC;AACA,WAAK,SAAL;;AACA,UAAI,KAAK,IAAL,GAAY,CAAhB,EAAmB;AACf,aAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAApB,EAAiC,EAAE,CAAnC,EAAsC;AAClC,gBAAM,KAAK,GAAG,gBAAgB,CAAC,CAAD,CAA9B;;AACA,cAAI,KAAJ,EAAW;AACP,gBAAI,KAAK,CAAC,SAAN,GAAkB,CAAtB,EAAyB;AACzB,YAAA,KAAK,CAAC,IAAN,GAAa,CAAC,CAAd;AACH;;AACD,UAAA,gBAAgB,CAAC,CAAD,CAAhB,GAAsB,IAAtB;AACA,eAAK,IAAL,GAAY,CAAZ;AACA;AACH;;AACD,0BAAM,KAAK,IAAL,GAAY,WAAlB,EAA+B,6BAA6B,KAAK,MAAL,CAAY,eAAe,EAAvF;AACA,QAAA,EAAE,CAAC,aAAH,CAAiB,EAAE,CAAC,QAAH,GAAc,KAAK,IAApC;AACA,QAAA,EAAE,CAAC,WAAH,CAAe,MAAf,EAAuB,KAAK,OAA5B;AACH;;AACD,aAAO,KAAK,IAAZ;AACH,KApBM;;AA0BA,SAAA,MAAA,GAAS,MAAa;AACzB,aAAO,KAAK,SAAL,EAAP;AACH,KAFM;;AAOP,SAAA,QAAA,GAAW,MAAW;AAClB,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YAAoB,MAAM,GAAG,KAAK,MAAlC;AACA,MAAA,EAAE,CAAC,aAAH,CAAiB,UAAjB;AACA,MAAA,EAAE,CAAC,WAAH,CAAe,MAAf,EAAuB,KAAK,OAA5B;AACH,KAJD;;AASA,SAAA,WAAA,GAAc,MAAW;AACrB,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YAAoB,IAAI,GAAG,gBAAgB,CAAC,CAAD,CAA3C;;AACA,UAAI,IAAJ,EAAU;AACN,cAAM,MAAM,GAAG,IAAI,CAAC,MAApB;AACA,QAAA,EAAE,CAAC,WAAH,CAAe,MAAf,EAAuB,IAAI,CAAC,OAA5B;AACH,OAHD,MAKI,EAAE,CAAC,WAAH,CAAe,WAAf,EAA4B,IAA5B;AACP,KARD;;AA7DI,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,4BAAkB,MAAM,IAAI,YAA5B,CAAd;AACA,SAAK,SAAL,GAAiB,CAAjB;AACA,SAAK,IAAL,GAAY,CAAC,CAAb;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,QAAL,GAAgB,CAAhB;AACA,SAAK,OAAL,GAAe,EAAE,CAAC,aAAH,EAAf;AACA,SAAK,KAAL,GAAa,KAAb;AACA,QAAI,KAAK,MAAL,KAAgB,4BAAkB,UAAtC,EACI,KAAK,KAAL,CAAW,YAAX,GADJ,KAEK,IAAI,KAAK,MAAL,KAAgB,4BAAkB,gBAAtC,EACD,KAAK,KAAL,CAAW,SAAX;AACJ,IAAA,WAAW,CAAC,GAAZ,CAAgB,KAAK,EAArB,EAAyB,IAAzB;AACH;;AApKD,EAAA,OAAO,GAAA;AACH,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAKD,EAAA,MAAM,GAAA;AACF,QAAI,EAAE,KAAK,QAAP,IAAmB,CAAvB,EACI,KAAK,OAAL;AACP;;AA4DD,MAAI,OAAJ,CAAY,CAAZ,EAAuB;AACnB,SAAK,OAAL,GAAe,CAAf;AACH;;AAKD,MAAI,OAAJ,GAAW;AACP,WAAO,KAAK,OAAZ;AACH;;AAKD,MAAI,OAAJ,CAAY,CAAZ,EAAuB;AACnB,SAAK,OAAL,GAAe,CAAf;AACH;;AAKD,MAAI,OAAJ,GAAW;AACP,WAAO,KAAK,OAAZ;AACH;;AAKD,MAAI,MAAJ,CAAW,CAAX,EAAqB;AACjB,SAAK,MAAL,GAAc,CAAd;AACH;;AAKD,MAAI,MAAJ,GAAU;AACN,WAAO,KAAK,MAAZ;AACH;;AAKD,MAAI,KAAJ,GAAS;AACL,WAAO,KAAK,MAAL,CAAY,KAAnB;AACH;;AAKD,MAAI,MAAJ,GAAU;AACN,WAAO,KAAK,MAAL,CAAY,MAAnB;AACH;;AAKD,MAAI,QAAJ,GAAY;AACR,WAAO,KAAK,MAAL,CAAY,QAAnB;AACH;;AAKD,MAAI,OAAJ,GAAW;AACP,WAAO,KAAK,OAAZ;AACH;;AA3IyB;;;;;;;;;;;AChF9B;;AAQA,MAAM,aAAa,GAAI,KAAD,IAAuC;AACzD,QAAM,KAAK,GAAG,EAAd;AACA,MAAI,GAAG,GAAQ,KAAf;;AACA,SAAO,GAAG,CAAC,MAAJ,GAAa,CAApB,EAAuB;AACnB,IAAA,KAAK,CAAC,IAAN,CAAW,GAAG,CAAC,MAAf;AACA,IAAA,GAAG,GAAG,GAAG,CAAC,CAAD,CAAT;AACH;;AACD,SAAO,KAAP;AACH,CARD;;;;AAeA,MAAM,YAAY,GAAI,KAAD,IAA4B;AAC7C,SAAO,KAAK,CAAC,MAAN,CAAa,CAAC,GAAD,EAAc,GAAd,KAA6B;AAC7C,WAAO,GAAG,GAAG,GAAb;AACH,GAFM,KAED,CAFN;AAGH,CAJD;;;;AAYA,MAAM,SAAS,GAAG,CAAC,GAAD,EAAmC,IAAnC,EAAiD,GAAjD,KAAgF;AAC9F,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,EAAE,CAA5B,EACI,GAAG,CAAC,CAAD,CAAH,GAAS,GAAG,CAAC,CAAD,CAAZ;AACP,CAHD;;AAYA,MAAM,SAAS,GAAG,CAAC,GAAD,EAAkB,IAAlB,EAAgC,IAAhC,EAA8C,GAA9C,KAA6E;AAC3F,MAAI,GAAG,GAAG,CAAV;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,EAAE,CAA5B,EAA+B;AAC3B,UAAM,GAAG,GAAG,GAAG,CAAC,CAAD,CAAf;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,EAAE,CAA5B,EACI,GAAG,CAAC,GAAG,EAAJ,CAAH,GAAa,GAAG,CAAC,CAAD,CAAhB;AACP;AACJ,CAPD;;AAkBA,MAAM,SAAS,GAAG,CAAC,GAAD,EAAoB,IAApB,EAAkC,IAAlC,EAAgD,IAAhD,EAA8D,GAA9D,EAAqF,IAAA,GAAe,CAApG,KAA+G;AAC7H,MAAI,GAAG,GAAG,IAAV;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,EAAE,CAA5B,EAA+B;AAC3B,QAAI,GAAG,GAAG,GAAG,CAAC,CAAD,CAAb;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,EAAE,CAA5B,EAA+B;AAC3B,UAAI,GAAG,GAAG,GAAG,CAAC,CAAD,CAAb;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,EAAE,CAA5B,EACI,GAAG,CAAC,GAAG,EAAJ,CAAH,GAAa,GAAG,CAAC,CAAD,CAAhB;AACP;AACJ;AACJ,CAVD;;AAoBA,MAAM,qBAAqB,GAAG,CAAC,KAAD,EAA2B,KAA3B,EAA4C,UAA5C,EAAoE,IAAA,GAAyB,IAA7F,KAAuH;AACjJ,QAAM,IAAI,GAAG,YAAY,CAAC,KAAD,CAAzB;;AACA,QAAM,GAAG,GAAG,IAAI,IAAI,wBAAY,SAAZ,CAAsB,UAAtB,EAAkC,IAAlC,CAApB;;AACA,UAAQ,KAAK,CAAC,MAAd;AACI,SAAK,CAAL;AACI;;AACJ,SAAK,CAAL;AACI,MAAA,SAAS,CAAC,KAAD,EAAuC,KAAK,CAAC,CAAD,CAA5C,EAAiD,GAAjD,CAAT;AACA;;AACJ,SAAK,CAAL;AACI,MAAA,SAAS,CAAC,KAAD,EAAsB,KAAK,CAAC,CAAD,CAA3B,EAAgC,KAAK,CAAC,CAAD,CAArC,EAA0C,GAA1C,CAAT;AACA;;AACJ,SAAK,CAAL;AACI,MAAA,SAAS,CAAC,KAAD,EAAwB,KAAK,CAAC,CAAD,CAA7B,EAAkC,KAAK,CAAC,CAAD,CAAvC,EAA4C,KAAK,CAAC,CAAD,CAAjD,EAAsD,GAAtD,EAA2D,CAA3D,CAAT;AACA;;AACJ;AACI,YAAM,IAAI,KAAJ,CAAU,iCAAiC,KAAK,CAAC,MAAM,UAAvD,CAAN;AAbR;;AAeA,SAAO,GAAP;AACH,CAnBD;;;;AA4BA,MAAM,YAAY,GAAG,CAAC,KAAD,EAA2B,UAA3B,EAAmD,IAAA,GAAyB,IAA5E,KAAsG;AACvH,QAAM,KAAK,GAAG,aAAa,CAAC,KAAD,CAA3B;AACA,SAAO,qBAAqB,CAAC,KAAD,EAAQ,KAAR,EAAe,UAAf,EAA2B,IAA3B,CAA5B;AACH,CAHD;;;;;;;;;;;AClHA;;AAQA,MAAM,SAAS,GAAI,CAAD,IAAoB;AAClC,MAAI,KAAK,CAAC,OAAN,CAAc,CAAd,CAAJ,EAAsB;AAClB,UAAM,KAAK,GAAG,+BAAc,CAAd,CAAd;AACA,QAAI,KAAK,CAAC,MAAN,GAAe,CAAf,IAAoB,KAAK,CAAC,MAAN,GAAe,CAAvC,EAA0C,OAAO,IAAP;AAC7C;;AACD,SAAO,KAAP;AACH,CAND;;;;;;;;;;;ACPA;;AAEA;;AAMA,MAAM,uBAAuB,GAAG,MAAhC;AAKA,MAAM,eAAe,GAA8B,IAAI,GAAJ,EAAnD;;;AAuBA,MAAM,YAAN,SAA2B,gBAA3B,CAAkC;AAgG9B,EAAA,WAAA,CACI,EADJ,EAEI,MAFJ,EAGI,KAHJ,EAGiB;AAEb;AApDI,SAAA,gBAAA,GAAkC,EAAlC;AAWA,SAAA,eAAA,GAA+B,IAA/B;AAKA,SAAA,iBAAA,GAAiC,IAAjC;AAKA,SAAA,sBAAA,GAAsC,IAAtC;;AA+CD,SAAA,iBAAA,GACH,IADuB,IAOvB;AACA,WAAK,gBAAL,GAAwB,EAAxB;AACA,WAAK,gBAAL,GAAwB,IAAI,CAAC,gBAA7B;AACA,WAAK,eAAL,GAAuB,IAAI,CAAC,eAA5B;AACA,WAAK,iBAAL,GAAyB,IAAI,CAAC,iBAA9B;AACA,WAAK,sBAAL,GAA8B,IAAI,CAAC,sBAAnC;AACA,WAAK,gBAAL,CAAsB,OAAtB,CAA8B,CAAC,UAAD,EAAa,KAAb,KAAuB,KAAK,gBAAL,CAAsB,IAAtB,CAA2B,uBAAuB,GAAG,KAArD,CAArD;AACH,KAdM;;AAmBA,SAAA,IAAA,GAAO,MAAW;AACrB,WAAK,QAAL;AACA,WAAK,EAAL,CAAQ,eAAR,CAAwB,KAAK,EAAL,CAAQ,WAAhC,EAA6C,KAAK,WAAlD;AACH,KAHM;;AAQA,SAAA,MAAA,GAAS,MAAW;AACvB,WAAK,EAAL,CAAQ,eAAR,CAAwB,KAAK,EAAL,CAAQ,WAAhC,EAA6C,IAA7C;AACH,KAFM;;AAOA,SAAA,iBAAA,GAAoB,MAAW;;;AAClC,YAAM,EAAE,GAAG,KAAK,EAAhB;AACA,MAAA,EAAE,CAAC,eAAH,CAAmB,EAAE,CAAC,WAAtB,EAAmC,KAAK,WAAxC;AAEA,OAAA,EAAA,GAAA,KAAK,gBAAL,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAE,OAAF,CAAU,CAAC,eAAD,EAA+B,CAA/B,KAA4C;AACvE,QAAA,eAAe,CAAC,MAAhB,CAAuB,EAAE,CAAC,iBAAH,GAAuB,CAA9C;AACH,OAFoB,CAArB;;AAGA,WAAK,IAAI,CAAC,GAAG,KAAK,gBAAL,CAAsB,MAAnC,EAA2C,CAAC,GAAG,KAAK,MAAL,CAAY,mBAA3D,EAAgF,EAAE,CAAlF,EAAqF;AACjF,QAAA,EAAE,CAAC,oBAAH,CAAwB,EAAE,CAAC,WAA3B,EAAwC,EAAE,CAAC,iBAAH,GAAuB,CAA/D,EAAkE,EAAE,CAAC,UAArE,EAAiF,IAAjF,EAAuF,CAAvF;AACH;;AAED,UAAI,KAAK,eAAT,EAA0B;AACtB,QAAA,EAAE,CAAC,oBAAH,CAAwB,EAAE,CAAC,WAA3B,EAAwC,EAAE,CAAC,gBAA3C,EAA6D,EAAE,CAAC,UAAhE,EAA4E,IAA5E,EAAkF,CAAlF;AACA,aAAK,eAAL,CAAqB,MAArB,CAA4B,EAAE,CAAC,gBAA/B;AACH;;AAED,UAAI,KAAK,iBAAT,EAA4B;AACxB,QAAA,EAAE,CAAC,oBAAH,CAAwB,EAAE,CAAC,WAA3B,EAAwC,EAAE,CAAC,kBAA3C,EAA+D,EAAE,CAAC,UAAlE,EAA8E,IAA9E,EAAoF,CAApF;AACA,aAAK,eAAL,CAAqB,MAArB,CAA4B,EAAE,CAAC,kBAA/B;AACH;;AAED,UAAI,KAAK,sBAAT,EAAiC;AAC7B,QAAA,EAAE,CAAC,oBAAH,CAAwB,EAAE,CAAC,WAA3B,EAAwC,EAAE,CAAC,wBAA3C,EAAqE,EAAE,CAAC,UAAxE,EAAoF,IAApF,EAA0F,CAA1F;AACA,aAAK,eAAL,CAAqB,MAArB,CAA4B,EAAE,CAAC,wBAA/B;AACH;;AAED,YAAM,MAAM,GAAG,EAAE,CAAC,sBAAH,CAA0B,EAAE,CAAC,WAA7B,CAAf;AACA,wBAAM,CAAC,EAAE,CAAC,aAAH,EAAD,IAAuB,MAAM,KAAK,EAAE,CAAC,oBAA3C,EAAiE,uBAAuB,MAAM,EAA9F;AAEA,MAAA,EAAE,CAAC,eAAH,CAAmB,EAAE,CAAC,WAAtB,EAAmC,IAAnC;AAEA,YAAM,KAAK,GAAG,EAAE,CAAC,QAAH,EAAd;AACA,wBAAM,KAAK,KAAK,EAAE,CAAC,QAAnB,EAA6B,iCAAiC,KAAK,EAAnE;AACA,wBAAM,KAAK,KAAK,EAAE,CAAC,YAAnB,EAAiC,+DAAjC;AACH,KAlCM;;AAjDH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,WAAL,GAAmB,EAAE,CAAC,iBAAH,EAAnB;AACA,SAAK,KAAL,GAAa,CAAb;AACA,SAAK,MAAL,GAAc,CAAd;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,KAAL,GAAa,KAAb;AAEA,SAAK,KAAL,CAAW,gBAAX;AACA,IAAA,eAAe,CAAC,GAAhB,CAAoB,KAAK,EAAzB,EAA6B,IAA7B;AACH;;AA3GD,EAAA,OAAO,GAAA;AACH,UAAM,EAAE,GAAG,KAAK,EAAhB;AACA,sBAAM,KAAK,WAAX,EAAwB,gCAAxB;AACA,IAAA,EAAE,CAAC,iBAAH,CAAqB,KAAK,WAA1B;AACA,SAAK,WAAL,GAAmB,IAAnB;AACA,SAAK,KAAL,CAAW,gBAAX;AACA,IAAA,eAAe,CAAC,MAAhB,CAAuB,KAAK,EAA5B;AACH;;AAKD,EAAA,MAAM,GAAA;;;AACF,KAAA,EAAA,GAAA,KAAK,gBAAL,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAE,OAAF,CAAW,UAAD,IAAe;AAC1C,MAAA,UAAU,CAAC,MAAX;AACH,KAFoB,CAArB;AAGA,SAAK,eAAL,CAAqB,MAArB;AACA,SAAK,iBAAL,CAAuB,MAAvB;AACA,SAAK,sBAAL,CAA4B,MAA5B;AACA,QAAI,EAAE,KAAK,QAAP,IAAmB,CAAvB,EAA0B,KAAK,OAAL;AAC7B;;AA6DD,MAAI,gBAAJ,GAAoB;AAChB,WAAO,KAAK,gBAAZ;AACH;;AAKD,MAAI,gBAAJ,GAAoB;AAChB,WAAO,KAAK,gBAAZ;AACH;;AA9F6B;;;;;;;ACrClC,IAAM,KAAK,GAAG,UAAC,CAAQ;IACnB,OAAO,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACzC,CAAC,CAAA;AAEQ,sBAAK;;;;;;ACJd,iCAA+B;AAE/B,IAAM,IAAI,GAAG,UAAC,CAAQ;IAClB,OAAO,IAAA,aAAK,EAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC7B,CAAC,CAAA;AAEQ,oBAAI;;;;;;ACNb,IAAI,EAAE,GAAG,CAAC,CAAC;AAEX,IAAM,KAAK,GAAG;IACV,OAAO,EAAE,EAAE,CAAC;AAChB,CAAC,CAAA;AAEQ,sBAAK;;;;;;ACNd,uCAAsC;AAEtC;;;;;;;GAOG;AACH;IAAA;QAAA,iBAgBC;QAdW,OAAE,GAAW,gBAAc,IAAA,aAAK,GAAI,CAAC;QAMnC,eAAU,GAAG,UAAC,GAAW;YAC/B,OAAO,GAAG,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QACjG,CAAC,CAAA;QAES,YAAO,GAAG;YAChB,MAAM,IAAI,KAAK,CAAI,KAAI,CAAC,EAAE,0BAAuB,CAAC,CAAC;QACvD,CAAC,CAAA;IAEL,CAAC;IAZG,sBAAI,0BAAE;aAAN;YACI,OAAO,IAAI,CAAC,EAAE,CAAC;QACnB,CAAC;;;OAAA;IAUL,iBAAC;AAAD,CAhBA,AAgBC,IAAA;AAEQ,gCAAU;;;;;;;;;;;;;;;;;;;;;AC5BnB,iCAAgC;AAChC,iDAAgD;AAEhD;;;;;;;;;GASG;AACH;IAAoB,yBAAU;IAA9B;QAAA,qEAwBC;QAtBG;;WAEG;QACK,iBAAW,GAAU,IAAI,aAAK,EAAE,CAAC;QAEzC;;WAEG;QACK,eAAS,GAAU,IAAI,aAAK,EAAE,CAAC;QAUvC,aAAO,GAAG;YACN,OAAO,KAAI,CAAC,UAAU,CAAC,KAAG,KAAI,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,KAAI,CAAC,IAAI,CAAC,OAAO,EAAI,CAAC,CAAC;QAC5E,CAAC,CAAA;;IAEL,CAAC;IAZG,sBAAI,wBAAK;aAAT;YACI,OAAO,IAAI,CAAC,WAAW,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAI,uBAAI;aAAR;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAML,YAAC;AAAD,CAxBA,AAwBC,CAxBmB,uBAAU,GAwB7B;AAEQ,sBAAK;;;;;;;;;;;;;;;;;;;;;ACvCd,uCAAsC;AACtC,iCAAgC;AAChC,iDAAgD;AAEhD;;;;;;;;;GASG;AACH;IAA0B,+BAAU;IAiBhC;QAAY,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAA1B,YACI,iBAAO,SAEV;QAbD;;WAEG;QACK,eAAS,GAAU,IAAI,aAAK,EAAE,CAAC;QAEvC;;WAEG;QACK,eAAS,GAAU,IAAI,aAAK,EAAE,CAAC;QAyBvC,aAAO,GAAG;YACN,OAAO,KAAI,CAAC,UAAU,CAAC,QAAM,KAAI,CAAC,UAAU,UAAK,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,cAAS,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAG,CAAC,CAAC;QACzG,CAAC,CAAA;QAvBG,KAAI,CAAC,UAAU,GAAG,IAAA,WAAI,EAAC,IAAI,CAAC,CAAC;;IACjC,CAAC;IAOD,sBAAI,6BAAI;QALR;;;;WAIG;aACH;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAOD,sBAAI,6BAAI;QALR;;;;WAIG;aACH;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAKL,kBAAC;AAAD,CA3CA,AA2CC,CA3CyB,uBAAU,GA2CnC;AAsCG,kCAAW;AApCf;;;;;;GAMG;AACH;IAAyB,8BAAU;IAY/B;QAAY,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAA1B,YACI,iBAAO,SAEV;QARD;;WAEG;QACK,eAAS,GAAU,IAAI,aAAK,EAAE,CAAC;QAWvC,aAAO,GAAG;YACN,OAAO,KAAI,CAAC,UAAU,CAAC,QAAM,KAAI,CAAC,UAAU,UAAK,KAAI,CAAC,IAAI,CAAC,OAAO,EAAE,MAAG,CAAC,CAAC;QAC7E,CAAC,CAAA;QATG,KAAI,CAAC,UAAU,GAAG,IAAA,WAAI,EAAC,IAAI,CAAC,CAAC;;IACjC,CAAC;IAED,sBAAI,4BAAI;aAAR;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAML,iBAAC;AAAD,CAzBA,AAyBC,CAzBwB,uBAAU,GAyBlC;AAGG,gCAAU;;;;;;AC9Fd;;;;GAIG;AACH,IAAM,YAAY,GAAG,UAAC,IAAS,EAAE,OAAe;IAC5C,IAAI,CAAC,IAAI,EAAE;QACP,IAAM,KAAK,GAAG,IAAI,KAAK,CAAC,WAAS,OAAS,CAAC,CAAC;QAC5C,MAAM,KAAK,CAAC;KACf;AACL,CAAC,CAAA;AAmBG,oCAAY;AAjBhB;;;;GAIG;AACH,IAAM,iBAAiB,GAAG,UAAC,CAAM,EAAE,OAAe;IAC9C,IAAI,IAAI,GAAY,IAAI,CAAC;IACzB,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;QAChB,IAAI,GAAG,KAAK,CAAC;SACZ,IAAI,MAAM,CAAC,CAAC,CAAC,KAAK,GAAG;QACtB,IAAI,GAAG,KAAK,CAAC;SACZ,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,SAAS;QAClC,IAAI,GAAG,KAAK,CAAC;IACjB,YAAY,CAAC,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AACjC,CAAC,CAAA;AAIG,8CAAiB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BrB,iCAAgC;AAChC,iDAAgD;AAChD,yCAAsD;AACtD,uCAAsC;AACtC,yCAAkE;AAClE,uCAAsC;AACtC,qCAAoC;AAEpC;IAAoB,yBAAU;IAA9B;QAAA,qEA6IC;QA3IG;;WAEG;QACK,QAAE,GAAW,CAAC,CAAC;QAEvB;;WAEG;QACK,uBAAiB,GAAa,EAAE,CAAC;QAEjC,kBAAY,GAAkE,IAAI,GAAG,EAAE,CAAC;QAExF,sBAAgB,GAAY,EAAE,CAAC;QA0BvC;;;;;WAKG;QACH,SAAG,GAAG,UAAC,CAAkD;YACrD,IAAA,yBAAiB,EAAC,CAAC,EAAE,mCAAmC,CAAC,CAAC;YAC1D,IAAM,IAAI,GAAG,MAAI,IAAA,aAAK,GAAI,EACtB,YAAY,GAAG,KAAI,CAAC,YAAY,EAChC,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC;YAC/C,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAM,KAAK,GAAG,EAAE,CAAC;YACjB,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YACtB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAI,IAAA,aAAK,EAAC,CAAC,CAAC,MAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC/D,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAChB,YAAY,CAAC,GAAG,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;YACnC,OAAO,IAAI,CAAC;QAChB,CAAC,CAAA;QAED;;;WAGG;QACK,aAAO,GAAG,UAAC,CAA2C;YAC1D,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAA;QACvC,CAAC,CAAA;QAED;;;WAGG;QACH,iBAAW,GAAG,UAAC,KAAY;YACvB,IAAA,oBAAY,EAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAC,CAAQ,IAAK,OAAA,CAAC,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE,EAAjB,CAAiB,CAAC,EAAE,wCAAwC,CAAC,CAAC;YACrH,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACtC,CAAC,CAAA;QAED;;;WAGG;QACH,iBAAW,GAAG;YACV,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;YAC1B,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;YACxC,OAAO,KAAK,CAAC;QACjB,CAAC,CAAA;QAED;;;WAGG;QACH,iBAAW,GAAG;YACV,IAAM,KAAK,GAAG,IAAI,aAAK,EAAE,CAAC;YAC1B,KAAI,CAAC,YAAY,CAAC,GAAG,CAAC,KAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;YACxC,OAAO,KAAK,CAAC;QACjB,CAAC,CAAA;QAED;;;;WAIG;QACH,sBAAgB,GAAG;YAAC,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YAC9B,IAAM,IAAI,QAAO,sBAAU,YAAV,sBAAU,0BAAI,IAAI,YAAC,CAAC;YACrC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;QAChB,CAAC,CAAA;QAED;;;;WAIG;QACH,uBAAiB,GAAG;YAAC,cAAc;iBAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;gBAAd,yBAAc;;YAC/B,IAAM,IAAI,QAAO,uBAAW,YAAX,uBAAW,0BAAI,IAAI,YAAC,CAAC;YACtC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACnB,OAAO,IAAI,CAAC;QAChB,CAAC,CAAA;QAED;;;WAGG;QACH,aAAO,GAAG;YACN,IAAM,YAAY,GAAG,KAAI,CAAC,YAAY,EAAE,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,EAAE,iBAAiB,GAAG,KAAI,CAAC,iBAAiB,CAAC;YAC7H,IAAM,aAAa,GAAW,iBAAiB,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAO,iBAAiB,CAAC,IAAI,CAAC,GAAG,CAAC,MAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YACxG,IAAI,UAAU,GAAW,EAAE,CAAC;YAC5B,YAAY,CAAC,OAAO,CAChB,UAAC,IAAsD;gBACnD,UAAU,IAAI,CACV,IAAI,YAAY,KAAK;oBACrB,IAAI,YAAY,uBAAW;oBAC3B,IAAI,YAAY,sBAAU;oBAC1B,IAAI,YAAY,aAAK,CACxB,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,IAAA,WAAI,EAAC,IAAI,CAAC,CAAC;YACpC,CAAC,CACJ,CAAC;YACF,IAAM,WAAW,GAAW,gBAAgB,CAAC,MAAM,CAAS,UAAC,GAAW,EAAE,GAAU,IAAK,OAAA,GAAG,GAAG,GAAG,CAAC,OAAO,EAAE,EAAnB,CAAmB,EAAE,EAAE,CAAC,CAAC;YAClH,OAAO,KAAI,CAAC,UAAU,CAAC,KAAG,aAAa,GAAG,UAAU,GAAG,WAAa,CAAC,CAAC;QAC1E,CAAC,CAAA;;IAEL,CAAC;IA7HG;;;;;;;;;OASG;IACH,oBAAI,GAAJ;QAAK,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACf,IAAM,KAAK,GAAU,EAAE,EAAE,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAC1D,IAAI,CAAC,OAAO,CAAC,UAAC,CAAM;YAChB,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,MAAI,IAAA,aAAK,EAAC,CAAC,CAAC,MAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACnE,CAAC,CAAC,CAAC;QACH,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC;eACb,CAAA,KAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAG,CAAA,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;eACpF,CAAA,KAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAG,CAAA,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;eACpF,CAAA,KAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAG,CAAA,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC;YACzF,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAClB,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;IAChB,CAAC;IAuGL,YAAC;AAAD,CA7IA,AA6IC,CA7ImB,uBAAU,GA6I7B;AAEQ,sBAAK;;;;;;;;;;;;;;;;;;;;;ACtJd,iCAAgC;AAChC,iDAAgD;AAEhD;;;;;;GAMG;AACH;IAAwB,6BAAU;IAyC9B,mBAAY,MAAc,EAAE,cAA0B;QAA1B,+BAAA,EAAA,kBAA0B;QAAtD,YACI,iBAAO,SAIV;QAvCD;;WAEG;QACK,oBAAc,GAAa,EAAE,CAAC;QAOtC;;WAEG;QACK,eAAS,GAAU,IAAI,aAAK,EAAE,CAAC;QA4B/B,gBAAU,GAAG;YACjB,IAAM,EAAE,GAAG,MAAI,KAAI,CAAC,cAAc,CAAC,MAAQ,CAAC;YAC5C,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC7B,OAAO,EAAE,CAAC;QACd,CAAC,CAAA;QAED,aAAO,GAAG;YACN,IAAM,oBAAoB,GAAW,KAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC;YAChE,OAAO,KAAI,CAAC,UAAU,CAAC,cAAY,oBAAoB,UAAK,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,MAAG,CAAC,CAAC;QAC7F,CAAC,CAAA;QAdG,KAAI,CAAC,IAAI,GAAG,MAAM,CAAC;QACnB,KAAI,CAAC,cAAc,GAAG,cAAc,CAAC;QACrC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAI,CAAC,cAAc,EAAE,CAAC,EAAE;YAAE,KAAI,CAAC,UAAU,EAAE,CAAC;;IACpE,CAAC;IArBD,sBAAI,2BAAI;QAHR;;WAEG;aACH;YACI,OAAO,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;;;OAAA;IAED,sBAAI,4BAAK;aAAT;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;QAChC,CAAC;;;OAAA;IAED,sBAAI,2BAAI;aAAR;YACI,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBAAI,4BAAK;aAAT;YACI,OAAO,IAAI,CAAC,SAAS,CAAC;QAC1B,CAAC;;;OAAA;IAoBL,gBAAC;AAAD,CA3DA,AA2DC,CA3DuB,uBAAU,GA2DjC;AAIQ,8BAAS;;;;;;;;;;;;;;;;;;;;;AC1ElB,oCAAmC;AACnC,sCAAqC;AACrC,sCAAqC;AAyGjC,sFAzGK,aAAK,OAyGL;AAxGT,sCAAqC;AAyGjC,sFAzGK,aAAK,OAyGL;AAxGT,8CAA6C;AA0GzC,0FA1GK,qBAAS,OA0GL;AAzGb,gDAA+C;AAC/C,8CAA2D;AAyGvD,2FAzGK,sBAAU,OAyGL;AACV,4FA1GiB,uBAAW,OA0GjB;AAxGf;;;GAGG;AACH;IAAuB,4BAAU;IAAjC;QAAA,qEA4FC;QA1FG;;WAEG;QACK,mBAAa,GAA2B,IAAI,GAAG,EAAE,CAAC;QAElD,qBAAe,GAAa,EAAE,CAAC;QAE/B,sBAAgB,GAAU,EAAE,CAAC;QAE7B,aAAO,GAAW,GAAG,CAAC;QAEtB,iBAAW,GAAU,IAAI,aAAK,EAAE,CAAC;QAMzC;;;;;;WAMG;QACH,UAAI,GAAG,UAAC,CAAM;YACV,IAAM,gBAAgB,GAAG,KAAI,CAAC,gBAAgB,EAAE,eAAe,GAAG,KAAI,CAAC,eAAe,CAAC;YACvF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE;gBACvD,IAAI,gBAAgB,CAAC,CAAC,CAAC,KAAK,CAAC;oBACzB,OAAO,eAAe,CAAC,CAAC,CAAC,CAAC;YAClC,IAAM,GAAG,GAAG,MAAI,IAAA,aAAK,GAAI,CAAC;YAC1B,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1B,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,OAAO,GAAG,CAAC;QACf,CAAC,CAAA;QAED;;;;WAIG;QACH,SAAG,GAAG,UAAC,CAAkD;YACrD,OAAO,KAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAA;QAED;;;;;WAKG;QACH,eAAS,GAAG,UAAC,IAAY,EAAE,cAA0B;YAA1B,+BAAA,EAAA,kBAA0B;YACjD,IAAM,SAAS,GAAG,IAAI,qBAAS,CAAC,IAAI,EAAE,cAAc,CAAC,CAAC;YACtD,KAAI,CAAC,aAAa,CAAC,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;YAClD,OAAO,SAAS,CAAC;QACrB,CAAC,CAAA;QAED;;;;;;;;;;;;WAYG;QACH,aAAO,GAAG;YACN,IAAM,MAAM,GAAa,EAAE,CAAC;YAC5B,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAC,CAAY,EAAE,CAAS;gBAC/C,MAAM,CAAC,IAAI,CAAC,OAAI,CAAC,WAAK,CAAC,CAAC,OAAO,EAAE,MAAG,CAAC,CAAC;YAC1C,CAAC,CAAC,CAAC;YACH,IAAM,MAAM,GAAG,KAAI,CAAC,UAAU,CAAC,oBAAgB,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,eAAU,IAAA,WAAI,EAAC,MAAM,CAAC,MAAG,CAAC,CAAC;YACpG;;;;;;eAMG;YACH,IAAM,IAAI,GAAG,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;YACvE;;;;eAIG;YACH,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,KAAI,CAAC,gBAAgB,CAAC,CAAC;QACnD,CAAC,CAAA;;IACL,CAAC;IA7EG,sBAAI,6BAAO;aAAX;YACI,OAAO,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;;;OAAA;IA2EL,eAAC;AAAD,CA5FA,AA4FC,CA5FsB,uBAAU,GA4FhC;AAKG,4BAAQ;;;;;;;;;;ACzGZ;;AAEA;;AAOA;;AAOA;;AAQA,MAAM,gBAAgB,GAAG;AAIrB,EAAA,SAAS,EAAE,oBAJU;AAWrB,EAAA,QAAQ,EAAG,CAAD,IAAY,CAAC,KAAK,CAAC,UAAU,CAAC,CAAD,CAAX,CAAN,IAAyB,QAAQ,CAAC,CAAD,CAXlC;AAkBrB,EAAA,SAAS,EAAG,CAAD,IAAY,CAAC,YAAY,kBAlBf;AAyBrB,EAAA,aAAa,EAAG,CAAD,IAAY,CAAC,YAAY;AAzBnB,CAAzB;;AAwPA,MAAM,QAAN,CAAc;AAyCV,EAAA,WAAA,CAAY,cAAZ,EAA2C;;;AA3BnC,SAAA,eAAA,GAAmD,IAAI,GAAJ,EAAnD;;AAmBD,SAAA,WAAA,GAAe,CAAD,IAAyB;AAC1C,aAAO,KAAK,eAAL,CAAqB,GAArB,CAAyB,CAAzB,CAAP;AACH,KAFM;;AA0BC,SAAA,UAAA,GAAa,CAAC,CAAD,EAAqC,QAArC,KAAkE;;;AACnF,WAAK,IAAL,CAAU,CAAV,EAAa,QAAb;AACA,OAAA,EAAA,GAAA,MAAM,CAAC,IAAP,CAAY,CAAZ,CAAA,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAc,EAAA,CAAE,OAAF,CAAW,GAAD,IAAgB;AACpC,aAAK,eAAL,CAAqB,GAArB,CAAyB,GAAzB,EAA8B,KAAK,QAAL,CAAc,GAAd,CAAkB,GAAG,KAAK,WAAL,CAAiB,QAAjB,CAA0B,IAAI,GAAG,EAAtD,CAA9B;AACH,OAFa,CAAd;AAGH,KALO;;AAWD,SAAA,MAAA,GAAU,CAAD,IAA6C;AACzD,YAAM,EAAE,GAAgB,CAAqB,CAAC,cAAtB,KAAyC,SAA3C,IAA2D,CAAqB,CAAC,WAAtB,KAAsC,SAAjG,GAA8G,WAA9G,GAA4H,UAAlJ;AACA,WAAK,UAAL,CAAgB,CAAhB,EAAmB,EAAnB;AACH,KAHM;;AAWA,SAAA,IAAA,GAAO,CAAC,IAAD,EAAe,cAAf,KAAoD;AAC9D,aAAO,KAAK,QAAL,CAAc,SAAd,CAAwB,IAAxB,EAA8B,cAA9B,CAAP;AACH,KAFM;;AASA,SAAA,GAAA,GAAO,CAAD,IAA+D;AACxE,aAAO,KAAK,QAAL,CAAc,GAAd,CAAkB,CAAlB,CAAP;AACH,KAFM;;AAsBA,SAAA,OAAA,GAAU,MAAa;AAC1B,aAAO,KAAK,QAAL,CAAc,OAAd,EAAP;AACH,KAFM;;AAtEH,SAAK,QAAL,GAAgB,IAAI,cAAJ,EAAhB;AACA,SAAK,cAAL,GAAsB,cAAtB;AACA,SAAK,OAAL,GAAe,CAAf;AAEA,SAAK,MAAL,CAAY,cAAZ;AAEA,SAAK,IAAL,CAAU,gBAAV,EAA4B,cAA5B;AACA,KAAA,EAAA,GAAA,MAAM,CAAC,IAAP,CAAY,gBAAZ,CAAA,MAA6B,IAA7B,IAA6B,EAAA,KAAA,KAAA,CAA7B,GAA6B,KAAA,CAA7B,GAA6B,EAAA,CAAE,OAAF,CAAW,GAAD,IAAgB;AACnD,WAAK,eAAL,CAAqB,GAArB,CAAyB,GAAzB,EAA8B,KAAK,QAAL,CAAc,GAAd,CAAkB,GAAG,KAAK,WAAL,CAAiB,cAAjB,CAAgC,IAAI,GAAG,EAA5D,CAA9B;AACH,KAF4B,CAA7B;AAGH;;AA5BD,MAAI,OAAJ,GAAW;AACP,WAAO,KAAK,OAAZ;AACH;;AA2EM,EAAA,IAAI,CAAC,CAAD,EAAU,IAAV,EAAoB;AAC3B,UAAM,EAAE,GAAG,KAAK,QAAL,CAAc,IAAd,CAAmB,CAAnB,CAAX;AACA,QAAI,IAAJ,EAAU,KAAK,eAAL,CAAqB,GAArB,CAAyB,IAAzB,EAA+B,EAA/B,EAAV,KACK,KAAK,eAAL,CAAqB,GAArB,CAAyB,EAAzB,EAA6B,EAA7B;AACL,WAAO,EAAP;AACH;;AA1GS;;;;;;;;;;;AC/Qd;;AAWA,MAAM,UAAU,GAAG,CACf,QADe,EAEf,MAFe,EAGf,SAHe,EAIf,MAJe,EAKf,MALe,EAMf,MANe,KAOf;AACA,QAAM,OAAO,GAAG,QAAQ,CAAC,WAAT,CAAqB,IAArB,CAAhB;AAAA,QACI,cAAc,GAAG,QAAQ,CAAC,IAAT,CAAc,SAAd,CADrB;AAAA,QAEI,WAAW,GAAG,MAAM,CAAC,EAFzB;AAAA,QAGI,aAAa,GAAG,MAAM,CAAC,GAAP,CAAW,GAAG,cAAc,WAA5B,CAHpB;AAAA,QAII,SAAS,GAAG,MAAM,CAAC,GAAP,CAAW,GAAG,MAAM,CAAC,IAAP,IAAe,uBAAa,SAAS,CAAC,IAAV,CAAe,IAA5B,CAAiC,EAA9D,CAJhB;AAAA,QAKI,YAAY,GAAG,MAAM,CAAC,GAAP,CAAW,GAAG,QAAQ,CAAC,WAAT,CAAqB,gBAArB,CAAsC,iBAAiB,SAAS,CAAC,QAAQ,GAAvF,CALnB;AASA,QAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,IAAI,YAAY,SAAxC,CAAd;AACA,EAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,OAAO,4BAA4B,aAAa,GAAnE;;AAGA,MAAI,MAAM,CAAC,CAAX,EAAc;AACV,UAAM,gBAAgB,GAAG,QAAQ,CAAC,WAAT,CAAqB,aAArB,CAAzB;AACA,UAAM,cAAc,GAAG,QAAQ,CAAC,WAAT,CAAqB,WAArB,CAAvB;AACA,IAAA,MAAM,CAAC,GAAP,GAAa,MAAM,CAAC,GAAP,CAAW,GAAG,MAAM,GAAG,MAAM,CAAC,CAAP,CAAS,GAAG,EAAnC,CAAb;AAEA,UAAM,KAAK,GAAG,MAAM,CAAC,iBAAP,CAAyB,IAAI,YAAY,SAAzC,CAAd;AAEA,UAAM,OAAO,GAAG,KAAK,CAAC,IAAN,CAAW,iBAAX,CAA6B,GAAG,cAAc,IAAI,MAAM,CAAC,GAAG,GAA5D,CAAhB;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,YAAY,WAAW,gBAAgB,uBAAuB,MAAM,CAAC,GAAG,2BAA7F;AAEA,IAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,YAAY,WAAW,MAAM,CAAC,GAAG,EAAtD;AAEA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,cAAc,YAAY,mBAAzD;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,SAAS,SAAS,EAAjD;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,eAAe,MAAM,CAAC,UAAP,IAAqB,KAAK,EAAxE;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,WAAW,MAAM,CAAC,MAAP,IAAiB,CAAC,EAA5D;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,WAAW,MAAM,CAAC,MAAP,IAAiB,CAAC,EAA5D;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,YAAY,MAAM,CAAC,OAAP,IAAkB,CAAC,EAA9D;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,gBAA/B;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,OAAO,wBAAwB,aAAa,IAAI,YAAY,SAAS,YAAY,eAAe,YAAY,gBAAgB,YAAY,YAAY,YAAY,UAAnL;AAGA,UAAM,OAAO,GAAG,KAAK,CAAC,IAAN,CAAW,iBAAX,CAA6B,GAAG,cAAc,IAAI,MAAM,CAAC,GAAG,GAA5D,CAAhB;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,YAAY,mBAAmB,MAAM,CAAC,GAAG,GAA9D;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,YAAY,WAAW,MAAM,CAAC,GAAG,EAAtD;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,YAAY,gBAAjC;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,OAAO,wBAAwB,aAAa,IAAI,YAAY,SAAS,YAAY,eAAe,YAAY,gBAAgB,YAAY,YAAY,YAAY,UAArL;AAEH,GA5BD,MA8BK;AAED,UAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,YAAY,gBAAgB,WAAW,eAAe,YAAY,WAAW,SAAS,KAAK,YAAY,aAAa,WAAW,KAAK,YAAY,iBAAiB,MAAM,CAAC,UAAP,IAAqB,KAAK,KAAK,YAAY,aAAa,MAAM,CAAC,MAAP,IAAiB,CAAC,KAAK,YAAY,aAAa,MAAM,CAAC,MAAP,IAAiB,CAAC,EAAtT,CAAd;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,cAAc,WAAW,YAAxD;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,SAAS,SAAS,EAAjD;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,WAAW,WAAW,EAArD;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,eAAe,MAAM,CAAC,UAAP,IAAqB,KAAK,EAAxE;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,WAAW,MAAM,CAAC,MAAP,IAAiB,CAAC,EAA5D;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,WAAW,MAAM,CAAC,MAAP,IAAiB,CAAC,EAA5D;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,OAAO,eAAe,6BAAmB,cAAnB,CAAkC,IAAI,WAAW,UAA1F;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,OAAO,wBAAwB,aAAa,IAAI,YAAY,SAAS,YAAY,eAAe,YAAY,gBAAgB,YAAY,YAAY,YAAY,UAAnL;AACH;;AAED,MAAI,MAAM,CAAC,GAAP,CAAW,wBAAX,CAAJ,EAA0C;AACtC,UAAM,OAAO,GAAG,MAAM,CAAC,OAAP,IAAkB,CAAlC;AACA,UAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,YAAY,cAAc,OAAO,EAA5D,CAAd;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,QAAQ,CAAC,WAAT,CAAqB,QAArB,CAA8B,2DAA2D,aAAa,KAAK,OAAO,GAArI;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,YAAY,OAAO,EAAlD;AACH;AACJ,CAtED;;AAiFA,MAAM,aAAa,GAAG,CAClB,QADkB,EAElB,MAFkB,EAGlB,MAHkB,EAIlB,GAJkB,EAKlB,UALkB,EAMlB,kBANkB,EAOlB,MAPkB,KAQZ;AAEN,QAAM,KAAK,GAAG,MAAM,CAAC,iBAAP,CAAyB,GAAG,QAAQ,CAAC,WAAT,CAAqB,KAArB,CAA2B,EAAvD,CAAd;AAEA,EAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,QAAQ,CAAC,WAAT,CAAqB,gBAArB,CAAsC,WAAW,QAAQ,CAAC,WAAT,CAAqB,KAArB,CAA2B,GAA/F;AACA,EAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,QAAQ,CAAC,WAAT,CAAqB,KAArB,CAA2B,cAA9C;AAEA,EAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,QAAQ,CAAC,WAAT,CAAqB,gBAArB,CAAsC,eAAzD;;AAEA,MAAI,CAAC,GAAL,EAAU;AACN,IAAA,UAAU,CAAC,OAAX,CAAoB,GAAD,IAAqB;AACpC,YAAM,IAAI,GAAG,GAAG,CAAC,IAAjB;AACA,YAAM,MAAM,GAAG,kBAAkB,CAAC,GAAnB,CAAuB,IAAvB,CAAf;AACA,MAAA,UAAU,CAAC,QAAD,EAAW,MAAX,EAAmB,GAAnB,EAAwB,MAAxB,EAAgC,MAAhC,EAAwC,MAAxC,CAAV;AACH,KAJD;AAKH;AACJ,CAxBD;;;;;;;;;;;AChGA;;AAeA,MAAM,WAAW,GAAG,CAChB,QADgB,EAEhB,MAFgB,EAGhB,GAHgB,EAIhB,MAJgB,EAKhB,OALgB,EAMhB,SANgB,KAOV;AAEN,QAAM,OAAO,GAAG,QAAQ,CAAC,WAAT,CAAqB,IAArB,CAAhB;AACA,QAAM,UAAU,GAAG,CAAC,GAAD,GAAO,QAAQ,CAAC,WAAT,CAAqB,OAArB,CAAP,GAAuC,GAAG,CAAC,KAA9D;AACA,QAAM,cAAc,GAAG,CAAC,GAAD,GAAO,QAAQ,CAAC,WAAT,CAAqB,WAArB,CAAP,GAA2C,GAAG,CAAC,SAAtE;AACA,QAAM,WAAW,GAAG,CAAC,GAAD,GAAO,QAAQ,CAAC,WAAT,CAAqB,QAArB,CAAP,GAAwC,GAAG,CAAC,MAAhE;AACA,QAAM,cAAc,GAAG,CAAC,GAAD,GAAO,QAAQ,CAAC,WAAT,CAAqB,WAArB,CAAP,GAA2C,GAAG,CAAC,SAAtE;;AAEA,MAAI,MAAM,CAAC,GAAP,CAAW,wBAAX,KAAwC,SAAS,GAAG,CAAxD,EAA2D;AACvD,QAAI,OAAJ,EAAa;AACT,YAAM,YAAY,GAAG,MAAM,CAAC,GAAP,CAAW,GAAG,QAAQ,CAAC,WAAT,CAAqB,cAArB,CAAoC,sBAAsB,OAAO,CAAC,EAAE,GAAlF,CAArB;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,GAAG,YAAY,SAA3B;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,GAAG,QAAQ,CAAC,WAAT,CAAqB,QAArB,CAA8B,6DAA6D,YAAY,eAAe,YAAY,cAAc,YAAY,eAAe,WAAW,MAAM,YAAY,gBAAgB,qBAAW,aAAa,SAAS,cAAc,GAAtR;AACH,KAJD,MAKK,MAAM,CAAC,IAAP,CAAY,GAAG,QAAQ,CAAC,WAAT,CAAqB,QAArB,CAA8B,2DAA2D,cAAc,KAAK,WAAW,IAAI,UAAU,KAAK,cAAc,GAAvK;AACR,GAPD,MASK,IAAI,OAAJ,EAAa;AACd,UAAM,YAAY,GAAG,MAAM,CAAC,GAAP,CAAW,GAAG,QAAQ,CAAC,WAAT,CAAqB,cAArB,CAAoC,sBAAsB,OAAO,CAAC,EAAE,GAAlF,CAArB;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,GAAG,YAAY,SAA3B;AAEA,IAAA,MAAM,CAAC,IAAP,CAAY,GAAG,OAAO,iBAAiB,YAAY,eAAe,YAAY,cAAc,YAAY,eAAe,WAAW,MAAM,YAAY,gBAAgB,qBAAW,aAAa,OAA5L;AACH,GALI,MAOA;AACD,IAAA,MAAM,CAAC,IAAP,CAAY,GAAG,OAAO,eAAe,cAAc,KAAK,WAAW,KAAK,UAAU,GAAlF;AACH;;AAED,MAAI,GAAJ,EAAS,MAAM,CAAC,IAAP,CAAY,GAAG,QAAQ,CAAC,WAAT,CAAqB,gBAArB,CAAsC,eAArD;AAET,QAAM,gBAAgB,GAAG,QAAQ,CAAC,WAAT,CAAqB,aAArB,CAAzB;AACA,EAAA,MAAM,CAAC,IAAP,CAAY,GAAG,gBAAgB,UAA/B;AACH,CAvCD;;;;;;;;;;;ACbA;;AACA;;AACA;;AAQA,MAAM,UAAU,GAAI,SAAD,IAA2B;AAC1C,QAAM,KAAK,GAAQ;AACf,IAAA,MAAM,EAAE,EADO;AAEf,IAAA,QAAQ,EAAE;AAFK,GAAnB;;AAIA,UAAQ,SAAR;AACI,SAAK,IAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,IAAf;AACA;;AACJ,SAAK,KAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,IAAf;AACA;;AACJ,SAAK,KAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,IAAf;AACA;;AACJ,SAAK,KAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,IAAf;AACA;;AACJ,SAAK,KAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,UAAf;AACA,MAAA,KAAK,CAAC,QAAN,GAAiB,IAAjB;AACA;;AACJ,SAAK,KAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,UAAf;AACA,MAAA,KAAK,CAAC,QAAN,GAAiB,IAAjB;AACA;;AACJ,SAAK,KAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,UAAf;AACA,MAAA,KAAK,CAAC,QAAN,GAAiB,IAAjB;AACA;;AACJ,SAAK,KAAL;AACA,SAAK,IAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,IAAf;AACA;;AACJ,SAAK,KAAL;AACA,SAAK,KAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,IAAf;AACA;;AACJ,SAAK,KAAL;AACA,SAAK,KAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,IAAf;AACA;;AACJ,SAAK,KAAL;AACA,SAAK,KAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,IAAf;AACA;;AACJ,SAAK,KAAL;AACA,SAAK,KAAL;AACI,MAAA,KAAK,CAAC,MAAN,GAAe,IAAf;AACA;;AACJ;AACI,wBAAM,KAAN,EAAa,mCAAmC,SAAS,EAAzD;AA9CR;;AAgDA,SAAO,KAAP;AACH,CAtDD;;AAiEA,MAAM,WAAW,GAAG,CAChB,QADgB,EAEhB,MAFgB,EAGhB,MAHgB,EAIhB,QAJgB,EAKhB,gBALgB,EAMhB,MANgB,KAOV;AACN,QAAM,OAAO,GAAG,QAAQ,CAAC,WAAT,CAAqB,IAArB,CAAhB;AACA,QAAM,gBAAgB,GAAG,QAAQ,CAAC,WAAT,CAAqB,aAArB,CAAzB;AACA,QAAM,cAAc,GAAG,QAAQ,CAAC,WAAT,CAAqB,WAArB,CAAvB;AACA,QAAM,aAAa,GAAG,QAAQ,CAAC,WAAT,CAAqB,UAArB,CAAtB;AACA,QAAM,cAAc,GAAG,QAAQ,CAAC,WAAT,CAAqB,WAArB,CAAvB;AACA,EAAA,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,OAAV,CAAmB,CAAD,IAAmB;AACjC,UAAM,IAAI,GAAG,CAAC,CAAC,IAAf;AACA,UAAM,SAAS,GAAG,CAAC,CAAC,IAAF,CAAO,IAAzB;AACA,UAAM,IAAI,GAAG,CAAC,CAAC,IAAF,CAAO,IAApB;AACA,UAAM,MAAM,GAAG,gBAAgB,CAAC,GAAjB,CAAqB,IAArB,CAAf;AACA,sBAAM,MAAN,EAAc,iCAAiC,IAAI,sBAAnD;;AAEA,QAAI,IAAI,GAAG,CAAX,EAAc,CAEb;;AAED,IAAA,MAAM,CAAC,EAAP,GAAY,QAAQ,CAAC,IAAT,CAAc,CAAd,CAAZ;AACA,UAAM;AAAE,MAAA,MAAF;AAAU,MAAA;AAAV,QAAuB,UAAU,CAAC,SAAD,CAAvC;;AAEA,QAAI,MAAM,CAAC,CAAX,EAAc;AACV,UAAI,MAAM,CAAC,CAAP,YAAoB,kBAAxB,EAAkC;AAE9B,QAAA,MAAM,CAAC,EAAP,GAAY,QAAQ,CAAC,IAAT,CAAc,MAAM,CAAC,CAArB,CAAZ;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,GAAG,OAAO,WAAW,MAAM,IAAI,MAAM,CAAC,EAAE,cAAc,MAAM,CAAC,EAAE,UAA3E;AAEA,QAAA,MAAM,CAAC,IAAP,CAAY,GAAG,MAAM,CAAC,EAAE,WAAxB;AACH,OAND,MAOK;AACD,cAAM,KAAK,GAAG,0BAAU,MAAM,CAAC,CAAjB,IAAsB,GAAG,MAAM,GAA/B,GAAqC,MAAnD;AACA,QAAA,MAAM,CAAC,EAAP,GAAY,MAAM,CAAC,GAAP,CAAW,MAAM,CAAC,CAAlB,CAAZ;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,GAAG,OAAO,WAAW,KAAK,IAAI,MAAM,CAAC,EAAE,cAAc,QAAQ,GAAG,QAAH,GAAc,EAAE,GAAG,MAAM,CAAC,EAAE,GAArG;AACH;AACJ,KAbD,MAeK,IAAI,MAAM,CAAC,CAAX,EAAc;AACf,MAAA,MAAM,CAAC,EAAP,GAAY,QAAQ,CAAC,IAAT,CAAc,MAAM,CAAC,CAArB,CAAZ;AAEA,MAAA,MAAM,CAAC,GAAP,GAAa,MAAM,CAAC,GAAP,CAAW,GAAG,MAAM,CAAC,EAAE,eAAe,gBAAgB,IAAI,QAAQ,CAAC,OAAO,GAA1E,CAAb;AAGA,YAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,cAAc,IAAI,MAAM,CAAC,GAAG,GAAvD,CAAd;AACA,MAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,OAAO,WAAW,MAAM,KAAK,MAAM,CAAC,EAAE,cAAc,QAAQ,GAAG,QAAH,GAAc,EAAE,GAAG,MAAM,CAAC,GAAG,GAA5G;AAEA,YAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,aAAa,IAAI,MAAM,CAAC,GAAG,GAAtD,CAAd;AACA,MAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,OAAO,WAAW,MAAM,IAAI,MAAM,CAAC,EAAE,cAAc,QAAQ,GAAG,QAAH,GAAc,EAAE,GAAG,MAAM,CAAC,GAAG,GAA3G;AAEA,YAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,cAAc,IAAI,MAAM,CAAC,GAAG,GAAvD,CAAd;AACA,MAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,OAAO,WAAW,MAAM,IAAI,MAAM,CAAC,EAAE,cAAc,MAAM,CAAC,GAAG,UAAhF;AAEA,YAAM,OAAO,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,cAAc,IAAI,MAAM,CAAC,GAAG,GAAvD,CAAhB;AACA,MAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,MAAM,CAAC,GAAG,WAA/B;AACH,KAjBI,MAmBA,IAAI,MAAM,CAAC,CAAX,EAAc;AAEf,MAAA,MAAM,CAAC,GAAP,GAAa,MAAM,CAAC,GAAP,CAAW,GAAG,MAAM,GAAG,MAAM,CAAC,CAAP,CAAS,GAAG,EAAnC,CAAb;AAEA,YAAM,KAAK,GAAG,MAAM,CAAC,iBAAP,CAAyB,GAAG,cAAc,IAAI,MAAM,CAAC,GAAG,GAAxD,CAAd;AACA,MAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,OAAO,WAAW,MAAM,IAAI,MAAM,CAAC,EAAE,cAAc,MAAM,CAAC,GAAG,UAAhF;AAEA,YAAM,MAAM,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,cAAc,IAAI,MAAM,CAAC,GAAG,GAAvD,CAAf;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,GAAG,MAAM,CAAC,GAAG,WAA9B;AAEA,YAAM,MAAM,GAAG,KAAK,CAAC,IAAN,CAAW,iBAAX,CAA6B,GAAG,cAAc,IAAI,MAAM,CAAC,GAAG,GAA5D,CAAf;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,GAAG,OAAO,WAAW,MAAM,KAAK,MAAM,CAAC,EAAE,cAAc,QAAQ,GAAG,QAAH,GAAc,EAAE,GAAG,MAAM,CAAC,GAAG,GAA7G;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,IAAZ,CAAiB,GAAG,OAAO,WAAW,MAAM,IAAI,MAAM,CAAC,EAAE,cAAc,QAAQ,GAAG,QAAH,GAAc,EAAE,GAAG,MAAM,CAAC,GAAG,GAA5G;AACH;AACJ,GA9DD,CAAA;AA+DH,CA5ED;;;;;;;;;;;AC3EA;;AACA;;AAEA;;AAUA,MAAM,SAAS,GAAG,CACd,QADc,EAEd,UAFc,EAGd,YAHc,EAId,MAJc,EAKd,SALc,KAMd;AACA,QAAM,SAAS,GAAG,UAAU,CAAC,GAAX,CAAe,CAAf,CAAlB;AACA,QAAM,OAAO,GAAG,MAAM,SAAS,GAA/B;AAEA,EAAA,UAAU,CAAC,IAAX,CAAgB,OAAO,SAAS,IAAI,SAAS,gBAAgB,SAAS,IAAtE;AACA,QAAM,MAAM,GAAG,UAAU,CAAC,WAAX,EAAf;AAAA,QAAyC,MAAM,GAAG,MAAM,CAAC,KAAzD;AAAA,QAAgE,MAAM,GAAG,MAAM,CAAC,IAAhF;AAEA,oCAAc,QAAd,EAAwB,MAAxB,EAAgC,MAAhC,EAAwC,YAAY,CAAC,GAArD,EAA0D,YAAY,CAAC,OAAb,CAAqB,UAA/E,EAA2F,YAAY,CAAC,kBAAxG,EAA2H,OAA3H;AAEA,gCAAY,QAAZ,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC,YAAY,CAAC,OAAb,CAAqB,QAA3D,EAAqE,YAAY,CAAC,gBAAlF,EAAoG,OAApG;AAEA,gCAAY,QAAZ,EAAsB,MAAtB,EAA8B,YAAY,CAAC,GAA3C,EAAgD,MAAhD,EAAwD,YAAY,CAAC,OAArE,EAA8E,SAA9E;AAEA,EAAA,UAAU,CAAC,IAAX,CAAgB,GAAhB;AACH,CApBD;;;;;;;;;;;ACbA;;AAYA,MAAM,eAAe,GAAG,CACpB,QADoB,EAEpB,MAFoB,EAGpB,MAHoB,EAIpB,WAJoB,EAKpB,MALoB,KAMd;AACN,QAAM,OAAO,GAAG,QAAQ,CAAC,WAAT,CAAqB,IAArB,CAAhB;AAAA,QACI,qBAAqB,GAAG,QAAQ,CAAC,WAAT,CAAqB,kBAArB,CAD5B;AAAA,QAEI,oBAAoB,GAAG,MAAM,CAAC,GAAP,CAAW,oBAAX,IAAmC,QAAQ,CAAC,GAAT,CAAa,GAAG,QAAQ,CAAC,WAAT,CAAqB,QAArB,CAA8B,4BAA9C,CAAnC,GAAiH,IAF5I;AAAA,QAGI,SAAS,GAAG,GAAG,qBAAqB,OAHxC;AAAA,QAII,YAAY,GAAG,GAAG,qBAAqB,UAJ3C;;AAMA,MAAI,WAAW,IAAI,WAAW,CAAC,WAAZ,YAAmC,0BAAtD,EAAoE;AAChE,UAAM,gBAAgB,GAAG,QAAQ,CAAC,IAAT,CAAc,WAAW,CAAC,WAA1B,CAAzB;AACA,UAAM,4BAA4B,GAAG,MAAM,CAAC,GAAP,CAAW,GAAG,SAAS,EAAvB,CAArC;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,GAAG,SAAS,IAAI,gBAAgB,EAA5C;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,GAAG,SAAS,IAAI,4BAA4B,EAAxD;AAEA,UAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,gBAAgB,MAAM,YAAY,EAA7D,CAAd;AACA,UAAM,OAAO,GAAG,KAAK,CAAC,IAAN,CAAW,iBAAX,CAA6B,GAAG,gBAAgB,EAAhD,CAAhB;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,gBAAgB,SAArC;AAEA,QAAI,oBAAJ,EAA0B,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,oBAAoB,qBAAqB,gBAAgB,oBAA9E;AAC1B,IAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,OAAO,oBAAoB,OAAO,qBAAvD;AAEA,IAAA,MAAM,CAAC,IAAP,CAAY,GAAG,qBAAqB,YAAY,SAAS,EAAzD;AACH,GAdD,MAgBK,IAAI,WAAW,IAAI,WAAW,CAAC,WAA/B,EAA4C;AAC7C,UAAM,OAAO,GAAG,QAAQ,CAAC,IAAT,CAAc,WAAW,CAAC,WAA1B,CAAhB;AACA,UAAM,gBAAgB,GAAG,MAAM,CAAC,GAAP,CAAW,GAAG,OAAO,eAAe,QAAQ,CAAC,WAAT,CAAqB,aAArB,CAAmC,KAAK,QAAQ,CAAC,OAAO,GAA5F,CAAzB;AAEA,UAAM,4BAA4B,GAAG,MAAM,CAAC,GAAP,CAAW,GAAG,qBAAqB,OAAnC,CAArC;AACA,IAAA,MAAM,CAAC,IAAP,CAAY,GAAG,qBAAqB,SAAS,4BAA4B,EAAzE;AAEA,IAAA,MAAM,CAAC,IAAP,CAAY,GAAG,qBAAqB,SAAS,4BAA4B,EAAzE;AACA,UAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,gBAAgB,KAAK,SAAS,MAAM,qBAAqB,UAApF,CAAd;AACA,UAAM,OAAO,GAAG,KAAK,CAAC,IAAN,CAAW,iBAAX,CAA6B,GAAG,gBAAgB,EAAhD,CAAhB;AACA,IAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,gBAAgB,SAArC;AAEA,QAAI,oBAAJ,EAA0B,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,oBAAoB,qBAAqB,gBAAgB,oBAA9E;AAC1B,IAAA,OAAO,CAAC,IAAR,CAAa,IAAb,CAAkB,GAAG,OAAO,oBAAoB,OAAO,qBAAvD;AAEA,IAAA,MAAM,CAAC,IAAP,CAAY,GAAG,qBAAqB,YAAY,SAAS,EAAzD;AACH,GAhBI,MAkBA;AACD,UAAM,KAAK,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,YAAY,SAAvC,CAAd;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,OAAO,oBAAoB,OAAO,qBAArD;AACA,IAAA,KAAK,CAAC,IAAN,CAAW,IAAX,CAAgB,GAAG,YAAY,OAA/B;AACH;;AAED,MAAI,WAAW,IAAI,WAAW,CAAC,KAA/B,EACI,MAAM,CAAC,IAAP,CAAY,GAAG,OAAO,eAAe,WAAW,CAAC,KAAK,GAAtD;AACJ,MAAI,WAAW,IAAI,WAAW,CAAC,QAA/B,EACI,MAAM,CAAC,IAAP,CAAY,GAAG,OAAO,UAAU,WAAW,CAAC,QAAQ,GAApD;AACP,CAzDD;;;;;;;;;;;ACNA,MAAM,WAAW,GAAG,CAChB,QADgB,EAEhB,MAFgB,EAGhB,YAHgB,KAIhB;AACA,QAAM,iBAAiB,GAAG,QAAQ,CAAC,WAAT,CAAqB,cAArB,CAA1B;AAGA,QAAM,IAAI,GAAG,MAAM,CAAC,gBAAP,CAAwB,IAAI,iBAAiB,aAAa,iBAAiB,iBAAiB,YAAY,CAAC,OAAb,CAAqB,EAAE,EAAnH,CAAb;AACA,EAAA,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,GAAG,iBAAiB,eAAe,YAAY,CAAC,OAAb,CAAqB,EAAE,GAAzE;AACH,CAVD;;;;;;;;;;;ACGA,MAAM,UAAU,GAAG,CAAC,QAAD,EAAqB,MAArB,EAAoC,MAApC,KAAsD;AACrE,MAAI,MAAJ,EAAY;AACR,UAAM,WAAW,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAd,CAApB;AACA,IAAA,MAAM,CAAC,UAAP,CAAkB,OAAlB,CAA2B,CAAD,IAA+C;AACrE,YAAM,IAAI,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAG,WAAW,iBAAiB,CAAC,IAAxD,CAAb;AACA,MAAA,IAAI,CAAC,IAAL,CAAU,IAAV,CAAe,GAAG,WAAW,aAAa,CAAC,IAA3C;AACH,KAHD;AAIH;AACJ,CARD;;;;;;;;;;;ACYA,MAAM,KAAN,CAAW;AAaP,EAAA,WAAA,CAAY,GAAZ,EAAmD;AAC/C,SAAK,GAAL,GAAW,KAAK,GAAG,IAAnB;AACH;;AAND,MAAI,GAAJ,GAAO;AACH,WAAO,KAAK,GAAZ;AACH;;AAXM;;;;;;;;;;;ACxBX;;AACA;;AAEA;;AAMA,MAAM,cAAc,GAAI,CAAD,IAAW;AAC9B,MAAI,WAAW,GAAG,KAAlB;AACA,MAAI,0BAAU,CAAV,CAAJ,EACI,WAAW,GAAG,IAAd;AACJ,MAAK,CAAsB,CAAC,MAA5B,EACI,WAAW,GAAG,IAAd;AACJ,MAAG,CAAC,YAAY,OAAhB,EACI,WAAW,GAAG,IAAd;AACJ,oBAAM,WAAN,EAAmB,uFAAnB;AACH,CATD;;;;;;;;;;;ACDA,MAAM,YAAY,GAAI,CAAD,IAAoB;AACrC,SAAO,CAAC,YAAY,UAAb,IAA2B,CAAC,YAAY,WAAxC,IAAuD,CAAC,YAAY,WAApE,IAAmF,CAAC,YAAY,SAAhG,IAA6G,CAAC,YAAY,UAA1H,IAAwI,CAAC,YAAY,UAArJ,IAAmK,CAAC,YAAY,YAAhL,IAAgM,CAAC,YAAY,YAA7M,IAA6N,CAAC,YAAY,iBAAjP;AACH,CAFD;;;;;;;;;;;ACRA;;AACA;;AAOA,MAAM,aAAa,GAAI,CAAD,IAAW;AAC7B,SAAO,KAAK,CAAC,OAAN,CAAc,CAAd,KAAoB,gCAAa,CAAb,CAApB,IAAuC,0BAAU,CAAV,CAA9C;AACH,CAFD;;;;;;;;;;;ACRA;;AAIA;;AAKA;;AACA;;AACA;;AA8DA,MAAM,cAAc,GAChB,IADmB,IAOY;;;AAC/B,QAAM;AAAE,IAAA,QAAF;AAAY,IAAA,UAAZ;AAAwB,IAAA,MAAxB;AAAgC,IAAA;AAAhC,MAAgD,IAAtD;AACA,QAAM,UAAU,GAAkC,IAAI,GAAJ,EAAlD;AACA,GAAA,EAAA,GAAA,MAAM,CAAC,IAAP,CAAY,UAAZ,CAAA,MAAuB,IAAvB,IAAuB,EAAA,KAAA,KAAA,CAAvB,GAAuB,KAAA,CAAvB,GAAuB,EAAA,CAAE,OAAF,CAAW,GAAD,IAAgB;AAC7C,UAAM,CAAC,GAAG,UAAU,CAAC,GAAD,CAApB;AACA,wCAAe,CAAf;AACA,UAAM,MAAM,GAAqB;AAAE,MAAA,IAAI,EAAE;AAAR,KAAjC;;AAYA,QAAI,kCAAc,CAAd,CAAJ,EAAsB;AAClB,YAAM,EAAE,GAAsB,CAA9B;AACA,YAAM,GAAG,GAAG,WAAW,CAAC,YAAZ,CAAyB;AACjC,QAAA,IAAI,EAAE,EAD2B;AAEjC,QAAA,MAAM,EAAE;AAFyB,OAAzB,CAAZ;AAKA,MAAA,MAAM,CAAC,MAAP,GAAgB,GAAhB;AACA,MAAA,MAAM,CAAC,SAAP,GAAmB,GAAG,CAAC,SAAvB;AACA,MAAA,MAAM,CAAC,OAAP,GAAiB,CAAjB;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,CAAhB;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,CAAhB;AACA,MAAA,MAAM,CAAC,UAAP,GAAoB,KAApB;AACA,MAAA,MAAM,CAAC,EAAP,GAAY,QAAQ,CAAC,IAAT,CAAc,GAAd,CAAZ;AACH,KAdD,MA4BK,IAAK,CAAsB,CAAC,MAA5B,EAAoC;AACrC,YAAM,EAAE,GAAG,CAAX;AACA,YAAM,GAAG,GAAG,kCAAc,EAAE,CAAC,MAAjB,IAA2B,WAAW,CAAC,YAAZ,CAAyB;AAC5D,QAAA,IAAI,EAAE,EAAE,CAAC,MADmD;AAE5D,QAAA,MAAM,EAAE;AAFoD,OAAzB,CAA3B,GAGP,EAAE,CAAC,MAHR;AAKA,MAAA,MAAM,CAAC,MAAP,GAAgB,EAAE,CAAC,MAAH,GAAY,CAA5B;AACA,wBAAM,MAAM,CAAC,MAAP,IAAiB,CAAvB,EAA0B,mBAA1B;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,EAAE,CAAC,MAAH,GAAY,CAA5B;AACA,wBAAM,MAAM,CAAC,MAAP,IAAiB,CAAjB,IAAsB,MAAM,CAAC,MAAP,GAAgB,GAA5C,EAAiD,mBAAjD;AACA,MAAA,MAAM,CAAC,UAAP,GAAoB,CAAC,CAAC,EAAE,CAAC,UAAzB;AACA,MAAA,MAAM,CAAC,SAAP,GAAmB,qBAAW,EAAE,CAAC,SAAd,KAA4B,GAAG,CAAC,SAAnD;AACA,wBAAM,MAAM,CAAC,MAAP,CAAc,oBAAd,EAA0B,OAA1B,CAAkC,MAAM,CAAC,SAAzC,MAAwD,CAAC,CAA/D,EAAkE,UAAU,MAAM,CAAC,MAAP,CAAc,oBAAd,CAAyB,EAArG;AACA,wBAAM,EAAE,CAAC,OAAH,KAAe,CAAf,IAAoB,MAAM,CAAC,GAAP,CAAW,wBAAX,CAA1B,EAAgE,8CAAhE;AACA,wBAAM,EAAE,CAAC,OAAH,IAAc,CAApB,EAAuB,cAAvB;AACA,MAAA,MAAM,CAAC,OAAP,GAAiB,EAAE,CAAC,OAAH,IAAc,CAA/B;AAEA,MAAA,MAAM,CAAC,MAAP,GAAgB,GAAhB;AACA,MAAA,MAAM,CAAC,SAAP,GAAmB,GAAG,CAAC,SAAvB;AACA,MAAA,MAAM,CAAC,EAAP,GAAY,QAAQ,CAAC,IAAT,CAAc,GAAd,CAAZ;AACH,KArBI,MA4BA,IAAG,CAAC,YAAY,YAAhB,EAAsB;AACvB,MAAA,MAAM,CAAC,CAAP,GAAW,CAAX;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,CAAhB;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,CAAhB;AACA,MAAA,MAAM,CAAC,UAAP,GAAoB,KAApB;AACA,MAAA,MAAM,CAAC,SAAP,GAAmB,qBAAW,OAAX,CAAnB;AACA,MAAA,MAAM,CAAC,OAAP,KAAmB,CAAnB;AACH;;AACD,IAAA,UAAU,CAAC,GAAX,CAAe,MAAM,CAAC,IAAtB,EAA4B,MAA5B;AACH,GAhFsB,CAAvB;AAiFA,SAAO,UAAP;AACH,CA5FD;;;;;;;;;;;ACrEA;;AAQA,MAAM,aAAa,GACf,IADkB,IAMM;AACxB,QAAM;AAAE,IAAA,QAAF;AAAY,IAAA;AAAZ,MAA6B,IAAnC;;AAEA,MAAI,QAAQ,IAAI,0BAAU,QAAV,CAAhB,EAAqC;AACjC,WAAO,YAAY,CAAC,oBAAb,CAAkC;AACrC,MAAA,IAAI,EAAE,QAD+B;AAErC,MAAA,SAAS,EAAE,gBAF0B;AAGrC,MAAA,SAAS,EAAE,IAAI,CAAC,SAAL,IAAkB;AAHQ,KAAlC,CAAP;AAKH;AACJ,CAhBD;;;;;;;;;;;ACXA;;AA2CA,MAAM,gBAAgB,GAClB,IADqB,IAKH;AAClB,MAAI,CAAC,IAAI,CAAC,WAAV,EAAuB,OAAO,IAAP;AACvB,QAAM,EAAE,GAAG,IAAI,CAAC,WAAhB;AAAA,QAA6B,EAAE,GAAG,IAAI,CAAC,EAAvC;AAEA,QAAM,QAAQ,GAAqB,EAAnC;AACA,EAAA,QAAQ,CAAC,WAAT,GAAuB,IAAI,CAAC,WAAL,CAAiB,WAAxC;AACA,QAAM,GAAG,GAAW,EAAE,CAAC,gBAAvB;;AAEA,MAAI,EAAE,CAAC,KAAH,IAAY,EAAE,CAAC,KAAH,CAAS,KAAzB,EAAgC;AAC5B,UAAM,KAAK,GAAG,EAAE,CAAC,KAAH,CAAS,KAAvB;AACA,sBAAM,KAAK,CAAC,MAAN,KAAiB,CAAvB,EAA0B,sCAA1B;AACA,IAAA,QAAQ,CAAC,KAAT,GAAiB,KAAjB;AACA,IAAA,QAAQ,CAAC,QAAT,GAAoB,GAApB;AACH;;AACD,MAAI,EAAE,CAAC,KAAH,IAAY,EAAE,CAAC,KAAH,CAAS,KAAzB,EACI,QAAQ,CAAC,QAAT,GAAoB,CAAC,QAAQ,CAAC,QAAT,IAAqB,GAAtB,IAA6B,EAAE,CAAC,gBAApD;AACJ,MAAI,EAAE,CAAC,KAAH,IAAY,EAAE,CAAC,KAAH,CAAS,OAAzB,EACI,QAAQ,CAAC,QAAT,GAAoB,CAAC,QAAQ,CAAC,QAAT,IAAqB,GAAtB,IAA6B,EAAE,CAAC,kBAApD;AACJ,SAAO,QAAP;AACH,CAxBD;;;;;;;;;;;AChCA,MAAM,YAAY,GAAG,CACjB,IADiB,EAQjB,SARiB,KAejB;AAEA,QAAM;AAAE,IAAA,IAAF;AAAQ,IAAA,IAAR;AAAc,IAAA,WAAd;AAA2B,IAAA,WAA3B;AAAwC,IAAA;AAAxC,MAAyD,IAA/D;AACA,QAAM,MAAM,GAAG,WAAW,CAAC,EAAZ,CAAe,IAAf,CAAf;AAAA,QAAqC,UAAU,GAAG,WAAW,CAAC,YAAZ,CAAyB,iBAAzB,EAA4C,MAA5C,CAAlD;AACA,QAAM,MAAM,GAAG,WAAW,CAAC,EAAZ,CAAe,IAAf,CAAf;AAAA,QAAqC,UAAU,GAAG,WAAW,CAAC,YAAZ,CAAyB,eAAzB,EAA0C,MAA1C,CAAlD;AACA,QAAM,OAAO,GAAG,YAAY,CAAC,aAAb,CAA2B,IAA3B,EAAiC,IAAjC,EAAuC,SAAvC,CAAhB;AACA,SAAO;AACH,IAAA,MADG;AAEH,IAAA,MAFG;AAGH,IAAA,UAHG;AAIH,IAAA,UAJG;AAKH,IAAA;AALG,GAAP;AAOH,CA5BD;;;;;;;;;;;ACZA;;AACA;;AAOA,MAAM,MAAN,CAAY;AA0CR,EAAA,WAAA,CAAY,EAAZ,EAAqC;AA5B9B,SAAA,aAAA,GAAgD,IAAI,GAAJ,EAAhD;AAKA,SAAA,iBAAA,GAAsD,IAAI,GAAJ,EAAtD;AAUC,SAAA,UAAA,GAA0D,EAA1D;;AA6DD,SAAA,WAAA,GAAe,GAAD,IAA0D;AAC3E,UAAI,2BAAiB,GAAjB,CAAJ,EAA2B;AACvB,cAAM,CAAC,GAAG,GAAV;AACA,cAAM,GAAG,GAAG,MAAM,CAAC,gBAAP,CAAwB,GAAxB,CAA4B,CAA5B,CAAZ;AACA,cAAM,IAAI,GAAG,KAAK,aAAL,CAAmB,GAAnB,CAAuB,CAAvB,CAAb;AACA,eAAO,GAAG,IAAI,IAAd;AACH,OALD,MAMK,IAAI,+BAAqB,GAArB,CAAJ,EAA+B;AAChC,cAAM,CAAC,GAAG,GAAV;AACA,cAAM,GAAG,GAAG,MAAM,CAAC,oBAAP,CAA4B,GAA5B,CAAgC,CAAhC,CAAZ;AACA,cAAM,IAAI,GAAG,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,CAA3B,CAAb;AACA,YAAI,CAAC,GAAL,EAAU,OAAO,IAAP,CAAV,KACK,IAAI,GAAG,CAAC,MAAJ,KAAe,IAAI,CAAC,MAAxB,EAAgC,OAAO,IAAP,CAAhC,KACA,OAAO,GAAG,CAAC,IAAJ,OAAe,IAAI,CAAC,IAAL,EAAtB;AACR,OAPI,MAQA,kBAAM,KAAN,EAAa,yBAAyB,GAAG,cAAzC;AACR,KAhBM;;AAsBA,SAAA,OAAA,GAAW,GAAD,IAAiD;AAC9D,YAAM,EAAE,GAAG,KAAK,EAAhB;;AACA,UAAI,2BAAiB,GAAjB,CAAJ,EAA2B;AACvB,cAAM,CAAC,GAAG,GAAV;AACA,cAAM,CAAC,GAAG,KAAK,aAAL,CAAmB,GAAnB,CAAuB,CAAvB,CAAV;AACA,QAAA,CAAC,GAAG,EAAE,CAAC,MAAH,CAAU,EAAE,CAAC,CAAD,CAAZ,CAAH,GAAsB,EAAE,CAAC,OAAH,CAAW,EAAE,CAAC,CAAD,CAAb,CAAvB;AACA,QAAA,MAAM,CAAC,gBAAP,CAAwB,GAAxB,CAA4B,CAA5B,EAA+B,CAA/B;AACH,OALD,MAMK,IAAI,+BAAqB,GAArB,CAAJ,EAA+B;AAChC,cAAM,CAAC,GAAG,GAAV;AACA,cAAM,CAAC,GAAG,KAAK,iBAAL,CAAuB,GAAvB,CAA2B,CAA3B,CAAV;AACA,QAAA,EAAE,CAAC,CAAD,CAAF,CAA2B,KAA3B,CAAiC,EAAjC,EAAqC,CAArC;AACA,QAAA,MAAM,CAAC,oBAAP,CAA4B,GAA5B,CAAgC,CAAhC,EAAmC,CAAnC;AACH,OALI,MAMA,kBAAM,KAAN,EAAa,yBAAyB,GAAG,cAAzC;AACR,KAfM;;AAsBA,SAAA,OAAA,GAAU,CAAC,GAAD,EAAwB,CAAxB,KAA4C;AACzD,WAAK,aAAL,CAAmB,GAAnB,CAAuB,GAAvB,EAA4B,CAA5B;AACA,WAAK,UAAL,CAAgB,IAAhB,CAAqB,GAArB;AACH,KAHM;;AAUA,SAAA,WAAA,GAAc,CAAC,GAAD,EAA4B,CAA5B,KAA8C;AAC/D,WAAK,iBAAL,CAAuB,GAAvB,CAA2B,GAA3B,EAAgC,CAAC,CAAC,KAAF,EAAhC;AACA,WAAK,UAAL,CAAgB,IAAhB,CAAqB,GAArB;AACH,KAHM;;AArGH,SAAK,EAAL,GAAU,EAAV;AAGA,SAAK,OAAL,CAAa,QAAb,EAAuB,KAAvB;AAEA,SAAK,OAAL,CAAa,OAAb,EAAsB,KAAtB;AACA,SAAK,WAAL,CAAiB,YAAjB,EAA+B,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,CAA/B;AAEA,SAAK,WAAL,CAAiB,uBAAjB,EAA0C,CAAC,EAAE,CAAC,QAAJ,EAAc,EAAE,CAAC,QAAjB,CAA1C;AACA,SAAK,WAAL,CAAiB,mBAAjB,EAAsC,CAAC,EAAE,CAAC,GAAJ,EAAS,EAAE,CAAC,IAAZ,EAAkB,EAAE,CAAC,GAArB,EAA0B,EAAE,CAAC,IAA7B,CAAtC;AAEA,SAAK,OAAL,CAAa,YAAb,EAA2B,IAA3B;AACA,SAAK,WAAL,CAAiB,WAAjB,EAA8B,CAAC,EAAE,CAAC,IAAJ,CAA9B;AACA,SAAK,WAAL,CAAiB,YAAjB,EAA+B,CAAC,CAAD,EAAI,CAAJ,CAA/B;AACA,SAAK,WAAL,CAAiB,WAAjB,EAA8B,CAAC,IAAD,CAA9B;AAEA,SAAK,WAAL,CAAiB,WAAjB,EAA8B,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,CAA9B;AAEA,SAAK,OAAL,CAAa,WAAb,EAA0B,KAA1B;AACA,SAAK,WAAL,CAAiB,UAAjB,EAA6B,CAAC,EAAE,CAAC,IAAJ,CAA7B;AACA,SAAK,WAAL,CAAiB,WAAjB,EAA8B,CAAC,EAAE,CAAC,GAAJ,CAA9B;AAEA,SAAK,WAAL,CAAiB,WAAjB,EAA8B,CAAC,CAAD,CAA9B;AAEA,SAAK,OAAL,CAAa,qBAAb,EAAoC,KAApC;AACA,SAAK,WAAL,CAAiB,eAAjB,EAAkC,CAAC,CAAD,EAAI,CAAJ,CAAlC;AAEA,SAAK,OAAL,CAAa,0BAAb,EAAyC,KAAzC;AACA,SAAK,OAAL,CAAa,iBAAb,EAAgC,KAAhC;AACA,SAAK,WAAL,CAAiB,gBAAjB,EAAmC,CAAC,CAAD,EAAI,KAAJ,CAAnC;AAEA,SAAK,OAAL,CAAa,cAAb,EAA6B,KAA7B;AACA,SAAK,WAAL,CAAiB,aAAjB,EAAgC,CAAC,CAAC,CAAF,CAAhC;AACA,SAAK,WAAL,CAAiB,mBAAjB,EAAsC,CAAC,EAAE,CAAC,KAAJ,EAAW,EAAE,CAAC,IAAd,EAAoB,EAAE,CAAC,IAAvB,EAA6B,EAAE,CAAC,IAAhC,CAAtC;AAIA,SAAK,OAAL,CAAa,cAAb,EAA6B,KAA7B;AACA,SAAK,WAAL,CAAiB,SAAjB,EAA4B,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAE,CAAC,kBAAV,EAA8B,EAAE,CAAC,mBAAjC,CAA5B;AACA,SAAK,WAAL,CAAiB,UAAjB,EAA6B,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAE,CAAC,kBAAV,EAA8B,EAAE,CAAC,mBAAjC,CAA7B;AACH;;AAjDD,MAAI,UAAJ,GAAc;AACV,WAAO,KAAK,UAAZ;AACH;;AApCO;;;AAIO,MAAA,CAAA,gBAAA,GAAmD,IAAI,GAAJ,EAAnD;AAKA,MAAA,CAAA,oBAAA,GAAyD,IAAI,GAAJ,EAAzD;;;;;;;;;ACjBnB;;AACA;;AACA;;AAQA,MAAM,WAAW,GACb,IADgB,IAKR;;;AACR,QAAM;AAAE,IAAA,EAAF;AAAM,IAAA;AAAN,MAAiB,IAAvB;AACA,QAAM,EAAE,GAAG,IAAI,cAAJ,CAAW,EAAX,CAAX;AACA,GAAA,EAAA,GAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAA,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmB,EAAA,CAAE,OAAF,CAAW,GAAD,IAAQ;AACjC,UAAM,CAAC,GAAG,MAAM,CAAC,GAAD,CAAhB;AACA,QAAI,2BAAiB,GAAjB,CAAJ,EACI,EAAE,CAAC,OAAH,CAAW,GAAX,EAAoC,CAApC,EADJ,KAEK,IAAI,+BAAqB,GAArB,CAAJ,EACD,EAAE,CAAC,WAAH,CAAe,GAAf,EAA4C,CAA5C,EADC,KAEA,kBAAM,KAAN,EAAa,kCAAkC,GAAG,EAAlD;AACR,GAPkB,CAAnB;AAQA,SAAO,EAAP;AACH,CAjBD;;;;;;;;;;;ACLA,MAAM,UAAU,GAAI,CAAD,IAA2B,OAAO,CAAP,KAAa,UAA3D;;;;;;;;;;;ACLA;;AAGA;;AA8CA,MAAM,YAAY,GACd,IADiB,IAKU;;;AAC3B,QAAM;AAAC,IAAA;AAAD,MAAa,IAAnB;AACA,QAAM,QAAQ,GAA+B,IAAI,GAAJ,EAA7C;AACA,EAAA,QAAQ,KAAI,CAAA,EAAA,GAAA,MAAM,CAAC,IAAP,CAAY,QAAZ,CAAA,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAE,OAAF,CAAW,GAAD,IAAc;AACrD,UAAM,CAAC,GAAG,QAAQ,CAAC,GAAD,CAAlB;AACA,UAAM,MAAM,GAAkB;AAAC,MAAA,GAAG,EAAC;AAAL,KAA9B;AACA,QAAG,4BAAW,CAAX,CAAH,EAAkB,MAAM,CAAC,CAAP,GAAW,CAAX,CAAlB,KACK,IAAG,CAAC,YAAY,YAAhB,EAAuB,MAAM,CAAC,CAAP,GAAW,CAAX,CAAvB,KACA,MAAM,CAAC,CAAP,GAAW,CAAX;AACL,IAAA,QAAQ,CAAC,GAAT,CAAa,GAAb,EAAkB,MAAlB;AACH,GAPgC,CAAzB,CAAR;AAQA,SAAO,QAAP;AACH,CAjBD;;;;;;;;;;;ACjDA;;AAIA;;AAeA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AA4EA,MAAM,YAAN,CAAkB;AA2Ed,EAAA,WAAA,CACI,IADJ,EAgBK;AAuBG,SAAA,mBAAA,GACJ,IAD0B,IA4BX;AACf,UAAI,aAAa,GAAoB,IAArC;AAAA,UAA2C,kBAAkB,GAAkC,IAA/F;AAEA,YAAM,WAAW,GAAG,wCAAiB,IAAjB,CAApB;AAGA,YAAM,MAAM,GAAG,8BAAY,IAAZ,CAAf;;AACA,UAAI,CAAC,IAAI,CAAC,GAAV,EAAe;AACX,QAAA,aAAa,GAAG,iCAAc,IAAd,CAAhB;AAEA,QAAA,kBAAkB,GAAG,oCAAe,IAAf,CAArB;AACH;;AAED,YAAM,gBAAgB,GAAG,gCAAa,IAAb,CAAzB;AAGA,YAAM,OAAO,GAAG,gCAAa,IAAb,EAAmB,IAAnB,CAAhB;AAEA,YAAM,YAAY,GAAkB;AAChC,QAAA,kBADgC;AAEhC,QAAA,gBAFgC;AAGhC,QAAA,OAAO,EAAE,OAAO,CAAC,OAHe;AAIhC,QAAA,UAAU,EAAE,OAAO,CAAC,UAJY;AAKhC,QAAA,UAAU,EAAE,OAAO,CAAC,UALY;AAMhC,QAAA,MAAM,EAAE,OAAO,CAAC,MANgB;AAOhC,QAAA,MAAM,EAAE,OAAO,CAAC,MAPgB;AAQhC,QAAA,MARgC;AAShC,QAAA,GAAG,EAAE,IAAI,CAAC,GATsB;AAUhC,QAAA,OAAO,EAAE,aAVuB;AAWhC,QAAA,WAAW,EAAE,KAAK,WAXc;AAYhC,QAAA;AAZgC,OAApC;AAeA,MAAA,IAAI,CAAC,QAAL,CAAc,MAAd,CAAqB,YAArB;AAEA,aAAO,YAAP;AACH,KAhEO;;AAsEA,SAAA,0BAAA,GACJ,IADiC,IAQ3B;AACN,YAAM;AAAE,QAAA,QAAF;AAAY,QAAA,YAAZ;AAA0B,QAAA,MAA1B;AAAkC,QAAA;AAAlC,UAAgD,IAAtD;AACA,YAAM,QAAQ,GAAG,QAAQ,CAAC,IAAT,CAAc,OAAd,EAAuB,CAAvB,CAAjB;AACA,YAAM,MAAM,GAAG,QAAQ,CAAC,KAAT,CAAe,WAAf,EAAf;AACA,YAAM,MAAM,GAAG,MAAM,CAAC,KAAtB;AAEA,kCAAW,QAAX,EAAqB,MAArB,EAA6B,YAAY,CAAC,MAA1C;AAEA,4CAAgB,QAAhB,EAA0B,MAA1B,EAAkC,MAAM,CAAC,IAAzC,EAA+C,YAAY,CAAC,WAA5D,EAAyE,MAAzE;AAEA,oCAAY,QAAZ,EAAsB,MAAtB,EAA8B,YAA9B;AAEA,gCAAU,QAAV,EAAoB,MAApB,EAA4B,YAA5B,EAA0C,MAA1C,EAAkD,SAAlD;AACH,KArBO;;AA2BA,SAAA,yBAAA,GACJ,IADgC,IAQ1B;AACN,YAAM;AAAE,QAAA,QAAF;AAAY,QAAA,YAAZ;AAA0B,QAAA;AAA1B,UAAqC,IAA3C;AACA,YAAM,QAAQ,GAAG,QAAQ,CAAC,IAAT,CAAc,MAAd,EAAsB,CAAtB,CAAjB;AACA,YAAM,MAAM,GAAG,QAAQ,CAAC,KAAT,CAAe,WAAf,EAAf;AACA,YAAM,MAAM,GAAG,QAAQ,CAAC,IAAT,CAAc,WAAd,EAAf;AACA,YAAM,MAAM,GAAG,MAAM,CAAC,KAAtB;AACA,YAAM,MAAM,GAAG,MAAM,CAAC,IAAtB;AACA,YAAM,OAAO,GAAG,IAAhB;AAEA,kCAAW,QAAX,EAAqB,MAArB,EAA6B,YAAY,CAAC,MAA1C;AAEA,4CAAgB,QAAhB,EAA0B,MAA1B,EAAkC,MAAlC,EAA0C,YAAY,CAAC,WAAvD,EAAoE,MAApE;AAEA,oCAAY,QAAZ,EAAsB,MAAtB,EAA8B,YAA9B;AAEA,wCAAc,QAAd,EAAwB,MAAxB,EAAgC,MAAhC,EAAwC,YAAY,CAAC,GAArD,EAA0D,YAAY,CAAC,OAAb,CAAqB,UAA/E,EAA2F,YAAY,CAAC,kBAAxG,EAA4H,OAA5H;AAEA,oCAAY,QAAZ,EAAsB,MAAtB,EAA8B,MAA9B,EAAsC,YAAY,CAAC,OAAb,CAAqB,QAA3D,EAAqE,YAAY,CAAC,gBAAlF,EAAoG,OAApG;AAEA,oCAAY,QAAZ,EAAsB,MAAtB,EAA8B,YAAY,CAAC,GAA3C,EAAgD,MAAhD,EAAwD,YAAY,CAAC,OAArE,EAA8E,IAAI,CAAC,SAAnF;AACH,KA5BO;;AAkCR,SAAA,OAAA,GAAuD,IAA7C,IAA6E;AACnF,YAAM,KAAK,GAAG,IAAI,CAAC,KAAL,IAAc,CAA5B;AAAA,YACI,MAAM,GAAG,IAAI,CAAC,MAAL,IAAe,CAD5B;AAAA,YAEI,SAAS,GAAG,IAAI,CAAC,SAAL,IAAkB,CAFlC;AAAA,YAGI,WAAW,GAAG,IAAI,CAAC,WAAL,IAAoB,IAHtC;AAAA,YAII,SAAS,GAAG,qBAAW,IAAI,CAAC,SAAL,IAAkB,WAA7B,CAJhB;AAAA,YAKI,MAAM,GAAG,IAAI,CAAC,MAAL,IAAe,EAL5B;AAOA,YAAM,QAAQ,GAAG,IAAI,kBAAJ,CAAa;AAC1B,QAAA,EAAE,EAAE,KAAK,EADiB;AAE1B,QAAA,MAAM,EAAE,KAAK,MAFa;AAG1B,QAAA,MAAM,EAAE,KAAK,MAHa;AAI1B,QAAA,cAAc,EAAE,KAAK,cAJK;AAK1B,QAAA,WAAW,EAAE,KAAK,WALQ;AAM1B,QAAA,YAAY,EAAE,KAAK,YANO;AAO1B,QAAA,YAAY,EAAE,KAAK,YAPO;AAQ1B,QAAA,WAAW,EAAE,KAAK,WARQ;AAS1B,QAAA,WAAW,EAAE,KAAK,WATQ;AAU1B,QAAA,YAAY,EAAE,KAAK,YAVO;AAW1B,QAAA,iBAAiB,EAAE,KAAK,iBAXE;AAY1B,QAAA,gBAAgB,EAAE,KAAK,gBAZG;AAa1B,QAAA,WAAW,EAAE,KAAK,WAbQ;AAc1B,QAAA,MAd0B;AAe1B,QAAA,KAf0B;AAgB1B,QAAA,SAhB0B;AAiB1B,QAAA;AAjB0B,OAAb,CAAjB;AAyBA,YAAM,YAAY,GAAG,KAAK,mBAAL,CAAyB;AAC1C,QAAA,EAAE,EAAE,KAAK,EADiC;AAE1C,QAAA,QAAQ,EAAE,QAFgC;AAG1C,QAAA,UAAU,EAAE,IAAI,CAAC,UAHyB;AAI1C,QAAA,QAAQ,EAAE,IAAI,CAAC,QAJ2B;AAK1C,QAAA,QAAQ,EAAE,IAAI,CAAC,QAL2B;AAM1C,QAAA,IAAI,EAAE,IAAI,CAAC,IAN+B;AAO1C,QAAA,IAAI,EAAE,IAAI,CAAC,IAP+B;AAQ1C,QAAA,MAAM,EAAE,KAAK,MAR6B;AAS1C,QAAA,MAAM,EAAE,KAAK,MAT6B;AAU1C,QAAA,cAAc,EAAE,KAAK,cAVqB;AAW1C,QAAA,WAAW,EAAE,KAAK,WAXwB;AAY1C,QAAA,YAAY,EAAE,KAAK,YAZuB;AAa1C,QAAA,YAAY,EAAE,KAAK,YAbuB;AAc1C,QAAA,WAAW,EAAE,KAAK,WAdwB;AAe1C,QAAA,WAAW,EAAE,KAAK,WAfwB;AAgB1C,QAAA,YAAY,EAAE,KAAK,YAhBuB;AAiB1C,QAAA,iBAAiB,EAAE,KAAK,iBAjBkB;AAkB1C,QAAA,gBAAgB,EAAE,KAAK,gBAlBmB;AAmB1C,QAAA,GAAG,EAAE,IAAI,CAAC,GAnBgC;AAoB1C,QAAA,SAAS,EAAE,IAAI,CAAC,SAAL,IAAkB,WApBa;AAqB1C,QAAA,WArB0C;AAsB1C,QAAA;AAtB0C,OAAzB,CAArB;AAyBA,WAAK,yBAAL,CAA+B;AAC3B,QAAA,QAD2B;AAE3B,QAAA,YAF2B;AAG3B,QAAA,MAAM,EAAE,KAAK,MAHc;AAI3B,QAAA,KAJ2B;AAK3B,QAAA;AAL2B,OAA/B;AAQA,WAAK,0BAAL,CAAgC;AAC5B,QAAA,QAD4B;AAE5B,QAAA,YAF4B;AAG5B,QAAA,MAAM,EAAE,KAAK,MAHe;AAI5B,QAAA,KAJ4B;AAK5B,QAAA;AAL4B,OAAhC;AAQA,aAAO,QAAQ,CAAC,OAAT,EAAP;AACH,KA3ED;;AAvJI,SAAK,EAAL,GAAU,IAAI,CAAC,EAAf;AACA,SAAK,KAAL,GAAa,IAAI,CAAC,KAAlB;AACA,SAAK,WAAL,GAAmB,IAAI,CAAC,WAAxB;AACA,SAAK,MAAL,GAAc,IAAI,CAAC,MAAnB;AACA,SAAK,MAAL,GAAc,IAAI,CAAC,MAAnB;AACA,SAAK,WAAL,GAAmB,IAAI,CAAC,WAAxB;AACA,SAAK,YAAL,GAAoB,IAAI,CAAC,YAAzB;AACA,SAAK,YAAL,GAAoB,IAAI,CAAC,YAAzB;AACA,SAAK,cAAL,GAAsB,IAAI,CAAC,cAA3B;AACA,SAAK,WAAL,GAAmB,IAAI,CAAC,WAAxB;AACA,SAAK,WAAL,GAAmB,IAAI,CAAC,WAAxB;AACA,SAAK,YAAL,GAAoB,IAAI,CAAC,YAAzB;AACA,SAAK,iBAAL,GAAyB,IAAI,CAAC,iBAA9B;AACA,SAAK,gBAAL,GAAwB,IAAI,CAAC,gBAA7B;AACH;;AA5Ga;;;;;;;;;;ACtGlB,MAAM,mBAAmB,GAA2B;AAChD,EAAA,KAAK,EAAE,IADyC;AAEhD,EAAA,SAAS,EAAE,KAFqC;AAGhD,EAAA,KAAK,EAAE,IAHyC;AAIhD,EAAA,4BAA4B,EAAE,IAJkB;AAKhD,EAAA,eAAe,EAAE,kBAL+B;AAMhD,EAAA,kBAAkB,EAAE,KAN4B;AAOhD,EAAA,qBAAqB,EAAE,KAPyB;AAQhD,EAAA,OAAO,EAAE;AARuC,CAApD;;;AAqEA,MAAM,mBAAmB,GAAG,CACxB,SADwB,EAExB,KAFwB,EAGxB,MAHwB,EAIxB,gBAJwB,KAKL;AACnB,QAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,QAAM,CAAC,GAAG,KAAK,IAAI,SAAS,CAAC,WAAnB,IAAkC,MAAM,CAAC,UAAnD;AACA,QAAM,CAAC,GAAG,MAAM,IAAI,SAAS,CAAC,YAApB,IAAoC,MAAM,CAAC,WAArD;AACA,EAAA,MAAM,CAAC,KAAP,GAAe,CAAC,GAAG,gBAAnB;AACA,EAAA,MAAM,CAAC,MAAP,GAAgB,CAAC,GAAG,gBAApB;AACA,EAAA,MAAM,CAAC,KAAP,CAAa,MAAb,GAAsB,KAAtB;AACA,EAAA,MAAM,CAAC,KAAP,CAAa,MAAb,GAAsB,KAAtB;AACA,EAAA,MAAM,CAAC,KAAP,CAAa,OAAb,GAAuB,KAAvB;AACA,EAAA,MAAM,CAAC,KAAP,CAAa,GAAb,GAAmB,KAAnB;AACA,EAAA,MAAM,CAAC,KAAP,CAAa,IAAb,GAAoB,KAApB;AACA,EAAA,MAAM,CAAC,KAAP,CAAa,KAAb,GAAqB,GAAG,CAAC,IAAzB;AACA,EAAA,MAAM,CAAC,KAAP,CAAa,MAAb,GAAsB,GAAG,CAAC,IAA1B;AACA,EAAA,SAAS,KAAK,QAAQ,CAAC,IAAvB,GAA8B,MAAM,CAAC,KAAP,CAAa,QAAb,GAAwB,UAAtD,GAAmE,IAAnE;AACA,EAAA,SAAS,CAAC,WAAV,CAAsB,MAAtB;AACA,SAAO,MAAP;AACH,CArBD;;AAiCA,MAAM,cAAc,GAAG,CAAC,IAAA,GAAmB,EAApB,KAAsC;AACzD,EAAA,IAAI,CAAC,gBAAL,GAAwB,IAAI,CAAC,gBAAL,IAAyB,gBAAzB,IAA6C,GAArE;AACA,EAAA,IAAI,CAAC,YAAL,GAAoB,IAAI,CAAC,YAAL,IAAqB,mBAAzC;AACA,EAAA,IAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,SAAL,IAAkB,QAAQ,CAAC,IAA5C;AACA,EAAA,IAAI,CAAC,MAAL,GAAc,IAAI,CAAC,EAAL,GAAU,IAAI,CAAC,EAAL,CAAQ,MAAlB,GAAgD,IAAI,CAAC,MAAL,GAAc,IAAI,CAAC,MAAnB,GAA4B,mBAAmB,CAAC,IAAI,CAAC,SAAN,EAAiB,IAAI,CAAC,KAAtB,EAA6B,IAAI,CAAC,MAAlC,EAA0C,IAAI,CAAC,gBAA/C,CAA7G;AACA,EAAA,IAAI,CAAC,KAAL,GAAa,QAAQ,CAAC,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,KAAnB,CAArB;AACA,EAAA,IAAI,CAAC,MAAL,GAAc,QAAQ,CAAC,IAAI,CAAC,MAAL,CAAY,KAAZ,CAAkB,MAAnB,CAAtB;AACA,EAAA,IAAI,CAAC,EAAL,GAAU,IAAI,CAAC,EAAL,IAAW,IAAI,CAAC,MAAL,CAAY,UAAZ,CAAuB,OAAvB,EAAgC,IAAI,CAAC,YAArC,CAArB;AACA,EAAA,IAAI,CAAC,UAAL,GAAkB,IAAI,CAAC,UAAL,IAAmB,EAArC;AACA,EAAA,IAAI,CAAC,OAAL,GAAe,KAAf;AACA,SAAO,IAAP;AACH,CAXD;;;;;;;;;;;AC3GA;;AACA;;AAQA,MAAM,qBAAqB,GAAiC,IAAI,GAAJ,EAA5D;;;AAKA,MAAM,eAAN,SAA8B,gBAA9B,CAAqC;AAoFjC,EAAA,WAAA,CACI,UADJ,EAEI,SAAA,GAAwB,WAF5B,EAEuC;AAGnC;;AAYJ,SAAA,OAAA,GAAU,CAAC,IAAD,EAAyB,MAAzB,KAAiD;AACvD,WAAK,UAAL,CAAgB,OAAhB,CAAwB,IAAxB,EAA8B,MAA9B;AACH,KAFD;;AAUA,SAAA,eAAA,GAAkB,CAAC,IAAD,EAA0B,KAA1B,EAAyC,SAAzC,KAAwE;AACtF,WAAK,UAAL,CAAgB,eAAhB,CAAgC,IAAhC,EAAsC,KAAtC,EAA6C,SAA7C;AACH,KAFD;;AAOA,SAAA,IAAA,GAAO,MAAW;AACd,WAAK,UAAL,CAAgB,IAAhB;AACH,KAFD;;AA5BI,SAAK,SAAL,GAAiB,CAAjB;AACA,SAAK,UAAL,GAAkB,UAAlB;AACA,SAAK,SAAL,GAAiB,qBAAW,SAAS,IAAI,WAAxB,CAAjB;AACA,IAAA,qBAAqB,CAAC,GAAtB,CAA0B,KAAK,EAA/B,EAAmC,IAAnC;AACH;;AA1FD,EAAA,OAAO,GAAA;AACH;AACH;;AAKD,EAAA,MAAM,GAAA;AACF,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAoBD,MAAI,SAAJ,GAAa;AACT,WAAO,KAAK,UAAL,CAAgB,SAAvB;AACH;;AAKD,MAAI,UAAJ,GAAc;AACV,WAAO,KAAK,UAAL,CAAgB,UAAvB;AACH;;AAKD,MAAI,SAAJ,CAAc,CAAd,EAAuB;AACnB,SAAK,SAAL,GAAiB,CAAjB;AACH;;AAKD,MAAI,SAAJ,GAAa;AACT,WAAO,KAAK,SAAZ;AACH;;AAKD,MAAI,SAAJ,GAAa;AACT,WAAO,KAAK,SAAZ;AACH;;AAKD,MAAI,SAAJ,CAAc,CAAd,EAAuB;AACnB,SAAK,SAAL,GAAiB,CAAjB;AACH;;AAKD,MAAI,SAAJ,GAAa;AACT,WAAO,KAAK,UAAL,CAAgB,SAAvB;AACH;;AA7EgC;;;;;;;;;;;ACPrC,MAAM,eAAe,GAAI,IAAD,IAA0B;AAC9C,QAAM,EAAE,GAAG,MAAM,CAAC,SAAP,CAAiB,QAAjB,CAA0B,IAA1B,CAA+B,IAA/B,CAAX;;AACA,UAAQ,EAAR;AACI,SAAK,oBAAL;AACI,aAAO,MAAP;;AACJ,SAAK,sBAAL;AACA,SAAK,uBAAL;AACA,SAAK,4BAAL;AACA,SAAK,qBAAL;AACI,aAAO,eAAP;;AACJ,SAAK,qBAAL;AACI,aAAO,OAAP;;AACJ,SAAK,sBAAL;AACI,aAAO,gBAAP;;AACJ,SAAK,qBAAL;AACI,aAAO,KAAP;;AACJ,SAAK,sBAAL;AACI,aAAO,cAAP;;AACJ,SAAK,uBAAL;AACI,aAAO,OAAP;;AACJ;AACI,aAAO,OAAP;AAnBR;AAqBH,CAvBD;;;;;;;;;;;ACPA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAMA,MAAM,UAAU,GAAyB,IAAI,GAAJ,EAAzC;;;AAKA,MAAM,OAAN,SAAsB,gBAAtB,CAA6B;AAgFzB,EAAA,WAAA,CACI,EADJ,EAEI,MAFJ,EAGI,KAAA,GAAgB,aAHpB,EAII,SAAA,GAAwB,OAJ5B,EAKI,SAAA,GAAwB,QAL5B,EAKoC;AAEhC;;AAgBI,SAAA,UAAA,GAAa,CAAC,IAAD,EAAyB,MAAzB,KAA2C;AAC5D,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YAAoB,IAAI,GAAG,MAAM,GAAG,IAAI,CAAC,UAAzC;AACA,wBAAM,IAAI,IAAI,KAAK,UAAnB,EAA+B,mBAAmB,IAAI,SAAS,KAAK,UAAU,OAA9E;AACA,MAAA,EAAE,CAAC,aAAH,CAAiB,KAAK,MAAtB,EAA8B,MAA9B,EAAsC,IAAtC;AACH,KAJO;;AAUA,SAAA,gBAAA,GAAoB,IAAD,IAA2B;AAClD,WAAK,UAAL,GAAkB,IAAI,CAAC,UAAvB;AACA,WAAK,EAAL,CAAQ,UAAR,CAAmB,KAAK,MAAxB,EAAgC,IAAhC,EAAsC,KAAK,KAA3C;AACH,KAHO;;AAYD,SAAA,eAAA,GAAkB,CAAC,IAAD,EAA0B,KAA1B,EAAyC,SAAzC,KAA2E;AAChG,WAAK,KAAL,GAAa,iBAAO,KAAK,IAAI,aAAhB,CAAb;AACA,YAAM,KAAK,GAAG,+BAAc,IAAd,CAAd;AAEA,YAAM,EAAE,GAAG,KAAK,CAAC,MAAN,KAAiB,CAAjB,GAAqB,IAAI,CAAC,CAAD,CAAzB,GAA+B,KAAK,CAAC,MAAN,KAAiB,CAAjB,GAAqB,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAArB,GAAkC,KAAK,CAAC,MAAN,KAAiB,CAAjB,GAAqB,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,EAAW,CAAX,CAArB,GAAqC,CAAjH;AACA,MAAA,SAAS,GAAG,SAAS,IAAI,sCAAgB,EAAhB,CAAb,IAAoC,OAAhD;AACA,WAAK,SAAL,GAAiB,qBAAW,SAAX,CAAjB;AACA,YAAM,QAAQ,GAAG,uCAAsB,IAAtB,EAA4B,KAA5B,EAAmC,SAAnC,CAAjB;AACA,WAAK,gBAAL,CAAsB,QAAtB;;AAEA,8BAAY,QAAZ,CAAqB,QAArB;;AACA,aAAO,IAAP;AACH,KAZM;;AAmBA,SAAA,OAAA,GAAU,CAAC,IAAD,EAA0B,MAAA,GAAiB,CAA3C,KAAgD;AAC7D,WAAK,IAAL;AACA,YAAM,KAAK,GAAG,+BAAc,IAAd,CAAd;AAEA,YAAM,EAAE,GAAG,KAAK,CAAC,MAAN,KAAiB,CAAjB,GAAqB,IAAI,CAAC,CAAD,CAAzB,GAA+B,KAAK,CAAC,MAAN,KAAiB,CAAjB,GAAqB,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,CAArB,GAAkC,KAAK,CAAC,MAAN,KAAiB,CAAjB,GAAqB,IAAI,CAAC,CAAD,CAAJ,CAAQ,CAAR,EAAW,CAAX,CAArB,GAAqC,CAAjH;AACA,YAAM,UAAU,GAAG,sCAAgB,EAAhB,KAAuB,OAA1C;AACA,WAAK,SAAL,GAAiB,qBAAW,UAAX,CAAjB;AACA,YAAM,QAAQ,GAAG,uCAAsB,IAAtB,EAA4B,KAA5B,EAAmC,UAAnC,CAAjB;AACA,WAAK,UAAL,CAAgB,QAAhB,EAA0B,MAA1B;;AAEA,8BAAY,QAAZ,CAAqB,QAArB;AACH,KAXM;;AAgBA,SAAA,IAAA,GAAO,MAAK;AACf,WAAK,EAAL,CAAQ,UAAR,CAAmB,KAAK,MAAxB,EAAgC,KAAK,MAArC;AACH,KAFM;;AAOA,SAAA,MAAA,GAAQ,MAAI;AACf,WAAK,EAAL,CAAQ,UAAR,CAAmB,KAAK,MAAxB,EAAgC,IAAhC;AACA,WAAK,MAAL;AACH,KAHM;;AA/EH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,UAAL,GAAkB,CAAlB;AACA,SAAK,MAAL,GAAc,EAAE,CAAC,YAAH,EAAd;AACA,SAAK,MAAL,GAAc,6BAAmB,MAAnB,CAAd;AACA,SAAK,KAAL,GAAa,iBAAO,KAAK,IAAI,aAAhB,CAAb;AACA,SAAK,SAAL,GAAiB,qBAAW,SAAS,IAAI,QAAxB,CAAjB;AACA,SAAK,SAAL,GAAiB,qBAAW,SAAS,IAAI,eAAxB,CAAjB;AACA,IAAA,UAAU,CAAC,GAAX,CAAe,KAAK,EAApB,EAAwB,IAAxB;AACH;;AA5FD,EAAA,MAAM,GAAA;AACF,SAAK,QAAL;AACH;;AAKD,EAAA,OAAO,GAAA;AACH,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAyCD,MAAI,SAAJ,GAAa;AACT,WAAO,KAAK,SAAZ;AACH;;AAKD,MAAI,UAAJ,GAAc;AACV,WAAO,KAAK,UAAZ;AACH;;AAKD,MAAI,SAAJ,GAAa;AACT,WAAO,KAAK,SAAZ;AACH;;AAtEwB;;;;;;;;;;;ACX7B,MAAM,YAAY,GAAG,CAAC,CAAD,EAAS,EAAT,KAAyB;AAC1C,SAAO,CAAC,KAAK,IAAN,IAAc,CAAC,KAAK,SAApB,GAAgC,EAAhC,GAAqC,CAA5C;AACH,CAFD;;;;;;;;;;;ACNA;;AAEA;;AACA;;AAGA;;AAIA;;AA2DA,MAAM,OAAO,GAAoC,IAAI,GAAJ,EAAjD;;;AAKA,MAAM,kBAAN,SAAiC,gBAAjC,CAAwC;AA0HpC,EAAA,WAAA,CACI,IADJ,EAOK;AAED;AA5GI,SAAA,YAAA,GAA8C,IAAI,GAAJ,EAA9C;;AAgID,SAAA,OAAA,GACH,IADa,IASb;AACA,WAAK,YAAL,GAAoB,IAAI,CAAC,SAAL,IAAkB,KAAK,YAA3C;AACA,WAAK,QAAL,GAAgB,IAAI,CAAC,QAAL,IAAiB,KAAK,QAAtC;AACA,WAAK,MAAL,GAAc,gCAAa,IAAI,CAAC,MAAlB,EAA0B,KAAK,MAA/B,CAAd;AACA,WAAK,KAAL,GAAa,gCAAa,IAAI,CAAC,KAAlB,EAAyB,KAAK,KAA9B,CAAb;AACA,WAAK,SAAL,GAAiB,gCAAa,IAAI,CAAC,SAAlB,EAA6B,KAAK,SAAlC,CAAjB;AACA,WAAK,SAAL,GAAiB,gCAAa,qBAAW,IAAI,CAAC,SAAhB,CAAb,EAAyC,KAAK,SAA9C,CAAjB;AAEA,WAAK,QAAL,GAAgB,KAAhB;AACH,KAlBM;;AAuBA,SAAA,SAAA,GAAY,MAAK;;;AACpB,WAAK,QAAL;AACA,WAAK,MAAL,CAAY,kBAAZ,CAA+B,KAAK,GAApC;AACA,UAAI,KAAK,QAAT,EAAmB;AACnB,YAAM,EAAE,GAAG,KAAK,EAAhB;AACA,OAAA,EAAA,GAAA,KAAK,YAAL,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,KAAA,CAAjB,GAAiB,EAAA,CAAE,OAAF,CAAU,CAAC,GAAD,EAAwB,GAAxB,KAAuC;AAC9D,YAAI,GAAG,CAAC,MAAR,EAAgB;AAEZ,cAAI,GAAG,CAAC,MAAJ,YAAsB,gBAA1B,EAAmC;AAC/B,kBAAM,GAAG,GAAG,KAAK,YAAL,CAAkB,OAAlB,CAA0B,aAA1B,CAAwC,GAAxC,CAA4C,GAA5C,CAAZ;AACA,8BAAM,GAAN,EAAW,6CAAX;AACA,kBAAM,GAAG,GAAG,GAAG,CAAC,QAAhB;AACA,kBAAM,IAAI,GAAG,uBAAa,GAAG,CAAC,IAAJ,CAAS,IAAtB,CAAb;AAEA,YAAA,EAAE,CAAC,mBAAH,CAAuB,GAAvB,EAA4B,IAA5B,EAAkC,GAAG,CAAC,SAAtC,EAAiD,GAAG,CAAC,UAArD,EAAiE,GAAG,CAAC,MAArE,EAA6E,GAAG,CAAC,MAAjF;AACA,YAAA,EAAE,CAAC,uBAAH,CAA2B,GAA3B;AAEA,gBAAI,KAAK,MAAL,IAAe,GAAG,CAAC,OAAvB,EACI,KAAK,MAAL,CAAY,wBAAZ,CAAqC,GAArC,EAA0C,GAAG,CAAC,OAA9C;AACP,WAXD,MAWO,IAAI,KAAK,CAAC,OAAN,CAAc,GAAG,CAAC,MAAlB,CAAJ,EAA+B;AAClC,kBAAM,GAAG,GAAG,KAAK,YAAL,CAAkB,OAAlB,CAA0B,aAA1B,CAAwC,GAAxC,CAA4C,GAA5C,CAAZ;AACA,8BAAM,GAAN,EAAW,6CAAX;AACA,kBAAM,GAAG,GAAG,GAAG,CAAC,QAAhB;AACA,YAAA,EAAE,CAAC,wBAAH,CAA4B,GAA5B;AAEA,YAAA,EAAE,CAAC,eAAH,CAAmB,GAAnB,EAAwB,GAAG,CAAC,MAA5B;AACH;AACJ;AACJ,OAvBgB,CAAjB;AAyBA,WAAK,QAAL,GAAgB,EAAE,CAAC,UAAH,CAAc,6BAAmB,sBAAnB,CAAd,EAA0D,KAAK,QAA/D,CAAhB,GAA2F,EAAE,CAAC,UAAH,CAAc,6BAAmB,sBAAnB,CAAd,EAA0D,IAA1D,CAA3F;AACA,WAAK,QAAL,GAAgB,IAAhB;AACH,KAhCM;;AA1CH,SAAK,EAAL,GAAU,IAAI,CAAC,EAAf;AACA,SAAK,MAAL,GAAc,IAAI,CAAC,MAAnB;AACA,SAAK,MAAL,GAAc,IAAI,CAAC,MAAnB;AACA,SAAK,YAAL,GAAoB,IAAI,CAAC,YAAzB;AACA,SAAK,SAAL,GAAiB,CAAC,CAAlB;AACA,SAAK,MAAL,GAAc,CAAd;AACA,SAAK,KAAL,GAAa,CAAb;AACA,SAAK,QAAL,GAAgB,KAAhB;AACA,SAAK,SAAL,GAAiB,qBAAW,WAAX,CAAjB;AACA,SAAK,KAAL,GAAa,IAAI,CAAC,KAAlB;AACA,SAAK,GAAL,GAAW,KAAK,MAAL,CAAY,oBAAZ,EAAX;AACA,SAAK,KAAL,CAAW,QAAX;AACA,IAAA,OAAO,CAAC,GAAR,CAAY,KAAK,EAAjB,EAAqB,IAArB;AACH;;AA7ID,EAAA,OAAO,GAAA;AACH,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAKD,EAAA,MAAM,GAAA;AACF,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAsED,MAAI,QAAJ,CAAa,CAAb,EAA+B;AAC3B,SAAK,QAAL,GAAgB,CAAhB;AACH;;AAKD,MAAI,QAAJ,GAAY;AACR,WAAO,KAAK,QAAZ;AACH;;AAKD,MAAI,MAAJ,GAAU;AACN,WAAO,KAAK,MAAZ;AACH;;AAKD,MAAI,KAAJ,GAAS;AACL,WAAO,KAAK,KAAZ;AACH;;AAKD,MAAI,SAAJ,GAAa;AACT,WAAO,KAAK,SAAZ;AACH;;AAKD,MAAI,SAAJ,GAAa;AACT,WAAO,KAAK,SAAZ;AACH;;AAxHmC;;;;;;;;;;;AC1ExC;;AAMA;;AAIA;;AACA;;AACA;;AAGA;;AAKA,MAAM,cAAN,CAAoB;AA8EhB,EAAA,WAAA,CACI,EADJ,EAEI,MAFJ,EAGI,MAHJ,EAII,WAJJ,EAKI,YALJ,EAMI,YANJ,EAOI,KAPJ,EAOiB;AAsBV,SAAA,YAAA,GAAgB,CAAD,IAAgC;AAClD,aAAO,KAAK,iBAAL,CAAuB,CAAvB,CAAP;AACH,KAFM;;AASC,SAAA,cAAA,GAAyC,KAAxB,IAAoE;;;AACzF,YAAM,UAAU,GAAkC,IAAI,GAAJ,EAAlD;AACA,OAAA,EAAA,GAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,CAAA,MAAkB,IAAlB,IAAkB,EAAA,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAkB,EAAA,CAAE,OAAF,CAAW,GAAD,IAAgB;AACxC,cAAM,CAAC,GAAG,KAAK,CAAC,GAAD,CAAf;AACA,4CAAe,CAAf;AACA,cAAM,MAAM,GAAqB;AAAE,UAAA,IAAI,EAAE;AAAR,SAAjC;;AAYA,YAAI,kCAAc,CAAd,CAAJ,EAAsB;AAClB,gBAAM,EAAE,GAAsB,CAA9B;AACA,gBAAM,GAAG,GAAG,KAAK,WAAL,CAAiB,YAAjB,CAA8B;AACtC,YAAA,IAAI,EAAE,EADgC;AAEtC,YAAA,MAAM,EAAE;AAF8B,WAA9B,CAAZ;AAKA,UAAA,MAAM,CAAC,MAAP,GAAgB,GAAhB;AACA,UAAA,MAAM,CAAC,SAAP,GAAmB,GAAG,CAAC,SAAvB;AACA,UAAA,MAAM,CAAC,OAAP,GAAiB,CAAjB;AACA,UAAA,MAAM,CAAC,MAAP,GAAgB,CAAhB;AACA,UAAA,MAAM,CAAC,MAAP,GAAgB,CAAhB;AACA,UAAA,MAAM,CAAC,UAAP,GAAoB,KAApB;AACH,SAbD,MA2BK,IAAK,CAAsB,CAAC,MAA5B,EAAoC;AACrC,gBAAM,EAAE,GAAG,CAAX;AACA,gBAAM,GAAG,GAAG,kCAAc,EAAE,CAAC,MAAjB,IAA2B,KAAK,WAAL,CAAiB,YAAjB,CAA8B;AACjE,YAAA,IAAI,EAAE,EAAE,CAAC,MADwD;AAEjE,YAAA,MAAM,EAAE;AAFyD,WAA9B,CAA3B,GAGP,EAAE,CAAC,MAHR;AAKA,UAAA,MAAM,CAAC,MAAP,GAAgB,EAAE,CAAC,MAAH,GAAY,CAA5B;AACA,4BAAM,MAAM,CAAC,MAAP,IAAiB,CAAvB,EAA0B,mBAA1B;AACA,UAAA,MAAM,CAAC,MAAP,GAAgB,EAAE,CAAC,MAAH,GAAY,CAA5B;AACA,4BAAM,MAAM,CAAC,MAAP,IAAiB,CAAjB,IAAsB,MAAM,CAAC,MAAP,GAAgB,GAA5C,EAAiD,mBAAjD;AACA,UAAA,MAAM,CAAC,UAAP,GAAoB,CAAC,CAAC,EAAE,CAAC,UAAzB;AACA,UAAA,MAAM,CAAC,SAAP,GAAmB,qBAAW,EAAE,CAAC,SAAd,KAA4B,GAAG,CAAC,SAAnD;AACA,4BAAM,MAAM,CAAC,MAAP,CAAc,oBAAd,EAA0B,OAA1B,CAAkC,MAAM,CAAC,SAAzC,MAAwD,CAAC,CAA/D,EAAkE,UAAU,MAAM,CAAC,MAAP,CAAc,oBAAd,CAAyB,EAArG;AACA,4BAAM,EAAE,CAAC,OAAH,KAAe,CAAf,IAAoB,KAAK,MAAL,CAAY,GAAZ,CAAgB,wBAAhB,CAA1B,EAAqE,8CAArE;AACA,4BAAM,EAAE,CAAC,OAAH,IAAc,CAApB,EAAuB,cAAvB;AAEA,UAAA,MAAM,CAAC,MAAP,GAAgB,GAAhB;AACA,UAAA,MAAM,CAAC,SAAP,GAAmB,GAAG,CAAC,SAAvB;AACH;;AACD,QAAA,UAAU,CAAC,GAAX,CAAe,MAAM,CAAC,IAAtB,EAA4B,MAA5B;AACH,OA/DiB,CAAlB;AAgEA,aAAO,UAAP;AACH,KAnEO;;AA2ED,SAAA,2BAAA,GAA8B,CACjC,KADiC,EAEjC,IAAA,GAMI,EAR6B,KASb;AACpB,YAAM,UAAU,GAAG,KAAK,cAAL,CAAoB,KAApB,CAAnB;AACA,UAAI,QAAQ,GAAoB,IAAhC;;AACA,UAAI,IAAI,CAAC,QAAT,EAAmB;AACf,YAAI,IAAI,CAAC,QAAL,YAAyB,gCAA7B,EACI,QAAQ,GAAG,IAAI,CAAC,QAAhB,CADJ,KAGI,QAAQ,GAAG,KAAK,YAAL,CAAkB,oBAAlB,CAAuC;AAC9C,UAAA,IAAI,EAAE,IAAI,CAAC,QADmC;AAE9C,UAAA,SAAS,EAAE,gBAFmC;AAG9C,UAAA,SAAS,EAAE,IAAI,CAAC,SAAL,IAAkB;AAHiB,SAAvC,CAAX;AAKP;;AACD,YAAM,iBAAiB,GAAG,IAAI,sCAAJ,CACtB;AACI,QAAA,EAAE,EAAE,KAAK,EADb;AAEI,QAAA,MAAM,EAAE,KAAK,MAFjB;AAGI,QAAA,MAAM,EAAE,KAAK,MAHjB;AAII,QAAA,YAAY,EAAE,KAAK,YAJvB;AAKI,QAAA,KAAK,EAAE,KAAK;AALhB,OADsB,CAA1B;AASA,MAAA,iBAAiB,CAAC,OAAlB,CAA0B;AACtB,QAAA,SAAS,EAAE,UADW;AAEtB,QAAA,QAAQ,EAAE,QAFY;AAGtB,QAAA,MAAM,EAAE,IAAI,CAAC,MAHS;AAItB,QAAA,KAAK,EAAE,IAAI,CAAC,KAJU;AAKtB,QAAA,SAAS,EAAE,IAAI,CAAC,SALM;AAMtB,QAAA,SAAS,EAAE,IAAI,CAAC;AANM,OAA1B;AAQA,aAAO,iBAAP;AACH,KAxCM;;AA8CA,SAAA,MAAA,GAAU,GAAD,IAAkC;;;AAC9C,UAAI,GAAJ,EAAS,KAAK,OAAL,GAAe,GAAf,CAAT,KACK;AACD,SAAA,EAAA,GAAA,KAAK,OAAL,MAAY,IAAZ,IAAY,EAAA,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAY,EAAA,CAAE,MAAF,EAAZ;AACA,aAAK,OAAL,GAAe,IAAf;AACH;AACJ,KANM;;AAtJH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,OAAL,GAAe,IAAf;AACA,SAAK,MAAL,GAAc,MAAM,CAAC,UAAP,CAAkB,yBAAlB,CAAd;AACA,SAAK,MAAL,GAAc,MAAM,CAAC,UAAP,CAAkB,wBAAlB,CAAd;AACA,SAAK,iBAAL,GAAyB,IAAI,KAAJ,CAAU,MAAM,CAAC,aAAjB,CAAzB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,MAAM,CAAC,aAA3B,EAA0C,CAAC,EAA3C,EACI,KAAK,iBAAL,CAAuB,CAAvB,IAA4B,EAA5B;;AACJ,SAAK,KAAL,GAAa,KAAb;AACH;;AApCD,MAAI,OAAJ,GAAW;AACP,WAAO,KAAK,OAAZ;AACH;;AAlEe;;;AAIT,cAAA,CAAA,OAAA,GAA2C,2BAA3C;;;;;;;;;ACtBX;;AACA;;AAMA,MAAM,WAAN,CAAiB;AA+Bb,EAAA,WAAA,CACI,EADJ,EAEI,KAFJ,EAEiB;AAxBT,SAAA,UAAA,GAAwB,EAAxB;;AAyCD,SAAA,YAAA,GACH,IADkB,IAST;AACT,YAAM,IAAI,GAAG,IAAI,CAAC,IAAlB;AAAA,YACI,UAAU,GAAG,IAAI,CAAC,UAAL,IAAmB,CADpC;AAAA,YAEI,KAAK,GAAG,IAAI,CAAC,KAAL,IAAc,aAF1B;AAAA,YAGI,SAAS,GAAG,IAAI,CAAC,SAAL,IAAkB,OAHlC;AAAA,YAII,SAAS,GAAG,IAAI,CAAC,SAAL,IAAkB,QAJlC;AAAA,YAKI,MAAM,GAAG,IAAI,CAAC,MAAL,IAAe,cAL5B;AAMA,YAAM,MAAM,GAAG,IAAI,gBAAJ,CAAY,KAAK,EAAjB,EAAqB,MAArB,EAA6B,KAA7B,EAAoC,SAApC,EAA+C,SAA/C,CAAf;AACA,MAAA,MAAM,CAAC,IAAP;AACA,UAAI,CAAC,IAAD,IAAS,UAAU,GAAG,CAA1B,EACI,KAAK,EAAL,CAAQ,UAAR,CAAmB,6BAAmB,MAAnB,CAAnB,EAA+C,UAA/C,EAA2D,iBAAO,KAAP,CAA3D,EADJ,KAGI,MAAM,CAAC,eAAP,CAAuB,IAAvB,EAA6B,KAA7B,EAAoC,SAApC;AACJ,WAAK,UAAL,GAAkB,MAAlB;AACA,WAAK,KAAL,CAAW,WAAX;AACA,aAAO,MAAP;AACH,KAzBM;;AAiCA,SAAA,kBAAA,GAAqB,CAAC,IAAD,EAA0B,MAA1B,KAAiE;AACzF,YAAM,KAAK,GAAG,aAAd;AAAA,YAA6B,SAAS,GAAG,OAAzC;AAAA,YAAkD,SAAS,GAAG,QAA9D;AACA,YAAM,MAAM,GAAG,KAAK,UAAL,CAAgB,GAAhB,MAAyB,IAAI,gBAAJ,CAAY,KAAK,EAAjB,EAAqB,MAArB,EAA6B,KAA7B,EAAoC,SAApC,EAA+C,SAA/C,CAAxC;AACA,MAAA,MAAM,CAAC,IAAP;AACA,MAAA,MAAM,CAAC,eAAP,CAAuB,IAAvB,EAA6B,KAA7B,EAAoC,SAApC;AACA,WAAK,UAAL,GAAkB,MAAlB;AACA,aAAO,MAAP;AACH,KAPM;;AAaA,SAAA,mBAAA,GAAuB,YAAD,IAAgC;AACzD,WAAK,UAAL,CAAgB,IAAhB,CAAqB,YAArB;AACH,KAFM;;AA7DH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,KAAL,GAAa,KAAb;AACH;;AArCY;;;AAIN,WAAA,CAAA,cAAA,GAAuC,mBAAvC;;;;;;;;;ACbX;;AAGA;;AAGA;;AAOA,MAAM,aAAN,CAAmB;AAsCf,EAAA,WAAA,CACI,EADJ,EAEI,MAFJ,EAGI,WAHJ,EAII,KAJJ,EAIiB;AAjCT,SAAA,UAAA,GAAgC,EAAhC;;AA8CA,SAAA,YAAA,GACJ,IADmB,IASF;AACjB,MAAA,IAAI,CAAC,iBAAL,CAAuB,IAAvB;AACA,MAAA,IAAI,CAAC,iBAAL,CAAuB,eAAvB,CAAuC,IAAI,CAAC,IAA5C,EAAkD,IAAI,CAAC,KAAvD,EAA8D,IAAI,CAAC,SAAnE;;AAEA,UAAI,CAAC,IAAI,CAAC,SAAV,EAAqB;AACjB,QAAA,IAAI,CAAC,iBAAL,CAAuB,SAAvB,GAAmC,IAAI,CAAC,iBAAL,CAAuB,SAAvB,KAAqC,CAArC,GAC/B,qBAAW,QAAX,CAD+B,GACR,IAAI,CAAC,iBAAL,CAAuB,SAAvB,KAAqC,CAArC,GACnB,qBAAW,OAAX,CADmB,GACG,IAAI,CAAC,iBAAL,CAAuB,SAAvB,KAAqC,CAArC,GAClB,qBAAW,WAAX,CADkB,GACQ,qBAAW,IAAI,CAAC,SAAhB,CAHtC;AAIH,OALD,MAMK,IAAI,CAAC,iBAAL,CAAuB,SAAvB,GAAmC,qBAAW,IAAI,CAAC,SAAL,IAAkB,WAA7B,CAAnC;;AAEL,MAAA,IAAI,CAAC,KAAL,GAAa,IAAI,CAAC,KAAL,IAAc,IAAI,CAAC,iBAAL,CAAuB,UAAlD;AACA,UAAI,IAAI,CAAC,SAAL,KAAmB,gBAAvB,EACI,IAAI,CAAC,KAAL,KAAe,CAAf,CADJ,KAEK,IAAI,IAAI,CAAC,SAAL,KAAmB,cAAvB,EACD,IAAI,CAAC,KAAL,KAAe,CAAf;AAEJ,MAAA,IAAI,CAAC,iBAAL,CAAuB,SAAvB,GAAmC,IAAI,CAAC,KAAxC;AACA,aAAO,IAAI,CAAC,iBAAZ;AACH,KA7BO;;AAoCA,SAAA,YAAA,GAAgB,SAAD,IAAsC;AACzD,cAAQ,SAAR;AACI,aAAK,eAAL;AACA,aAAK,MAAL;AACI,UAAA,SAAS,GAAG,eAAZ;AACA;;AACJ,aAAK,gBAAL;AACA,aAAK,OAAL;AACI,UAAA,SAAS,GAAG,gBAAZ;AACA;;AACJ,aAAK,cAAL;AACA,aAAK,KAAL;AACI,UAAA,SAAS,GAAG,KAAK,MAAL,CAAY,GAAZ,CAAgB,wBAAhB,IAA4C,cAA5C,GAA6D,gBAAzE;AACA;;AACJ;AACI,4BAAM,KAAN,EAAa,0CAA0C,SAAS,EAAhE;AAdR;;AAgBA,aAAO,SAAP;AACH,KAlBO;;AAyBD,SAAA,iBAAA,GAAqB,EAAD,IAAgC;AACvD,aAAO,aAAa,CAAC,iBAAd,CAAgC,GAAhC,CAAoC,EAApC,CAAP;AACH,KAFM;;AASA,SAAA,oBAAA,GACH,IAD0B,IAST;AACjB,YAAM,IAAI,GAAG,IAAI,CAAC,IAAlB;AAAA,YACI,KAAK,GAAG,IAAI,CAAC,KAAL,IAAc,CAD1B;AAAA,YAEI,KAAK,GAAG,IAAI,CAAC,KAAL,IAAc,aAF1B;AAAA,YAGI,MAAM,GAAG,sBAHb;AAAA,YAII,SAAS,GAAG,KAAK,YAAL,CAAkB,IAAI,CAAC,SAAvB,KAAqC,gBAJrD;AAAA,YAKI,SAAS,GAAG,IAAI,CAAC,SAAL,IAAkB,WALlC;AAAA,YAMI,SAAS,GAAG,IAAI,CAAC,SAAL,IAAkB,WANlC;AAAA,YAOI,UAAU,GAAG,IAAI,CAAC,IAAL,CAAU,MAP3B;AAQA,YAAM,UAAU,GAAG,KAAK,WAAL,CAAiB,YAAjB,CAA8B;AAC7C,QAAA,MAAM,EAAE,MADqC;AAE7C,QAAA,IAAI,EAAE,IAFuC;AAG7C,QAAA,KAAK,EAAE,KAHsC;AAI7C,QAAA,SAAS,EAAE,SAJkC;AAK7C,QAAA,SAAS,EAAE,SALkC;AAM7C,QAAA,UAAU,EAAE;AANiC,OAA9B,CAAnB;AAQA,YAAM,iBAAiB,GAAG,IAAI,gCAAJ,CAAoB,UAApB,EAAgC,SAAhC,CAA1B;AACA,WAAK,KAAL,CAAW,aAAX;AACA,aAAO,KAAK,YAAL,CAAkB;AACrB,QAAA,iBAAiB,EAAE,iBADE;AAErB,QAAA,IAAI,EAAE,IAFe;AAGrB,QAAA,SAAS,EAAE,SAHU;AAIrB,QAAA,KAAK,EAAE,KAJc;AAKrB,QAAA,SAAS,EAAE,SALU;AAMrB,QAAA,KAAK,EAAE;AANc,OAAlB,CAAP;AAQH,KApCM;;AA2CA,SAAA,0BAAA,GACH,IADgC,IASf;AACjB,YAAM,IAAI,GAAG,IAAI,CAAC,IAAlB;AAAA,YACI,KAAK,GAAG,IAAI,CAAC,KAAL,IAAc,CAD1B;AAAA,YAEI,KAAK,GAAG,IAAI,CAAC,KAAL,IAAc,aAF1B;AAAA,YAGI,MAAM,GAAG,sBAHb;AAAA,YAII,SAAS,GAAG,KAAK,YAAL,CAAkB,IAAI,CAAC,SAAvB,KAAqC,gBAJrD;AAAA,YAKI,SAAS,GAAG,IAAI,CAAC,SAAL,IAAkB,WALlC;AAAA,YAMI,SAAS,GAAG,IAAI,CAAC,SAAL,IAAkB,WANlC;AAAA,YAOI,UAAU,GAAG,IAAI,CAAC,IAAL,CAAU,MAP3B;AAQA,YAAM,UAAU,GAAG,KAAK,WAAL,CAAiB,YAAjB,CAA8B;AAC7C,QAAA,MAAM,EAAE,MADqC;AAE7C,QAAA,IAAI,EAAE,IAFuC;AAG7C,QAAA,KAAK,EAAE,KAHsC;AAI7C,QAAA,SAAS,EAAE,SAJkC;AAK7C,QAAA,SAAS,EAAE,SALkC;AAM7C,QAAA,UAAU,EAAE;AANiC,OAA9B,CAAnB;AAQA,YAAM,iBAAiB,GAAG,IAAI,gCAAJ,CAAoB,UAApB,EAAgC,SAAhC,CAA1B;AACA,WAAK,KAAL,CAAW,aAAX;AACA,aAAO,KAAK,YAAL,CAAkB;AACrB,QAAA,iBAAiB,EAAE,iBADE;AAErB,QAAA,IAAI,EAAE,IAFe;AAGrB,QAAA,SAAS,EAAE,SAHU;AAIrB,QAAA,KAAK,EAAE,KAJc;AAKrB,QAAA,SAAS,EAAE,SALU;AAMrB,QAAA,KAAK,EAAE;AANc,OAAlB,CAAP;AAQH,KApCM;;AA0CA,SAAA,2BAAA,GAA+B,mBAAD,IAA4C;AAC7E,WAAK,UAAL,CAAgB,IAAhB,CAAqB,mBAArB;AACH,KAFM;;AAtKH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,KAAL,GAAa,KAAb;AACH;;AAhDc;;;AAIR,aAAA,CAAA,iBAAA,GAAkD,sCAAlD;;;;;;;;;AChBX;;AAEA;;AAKA,MAAM,gBAAgB,GAA+B,IAAI,GAAJ,EAArD;;;AAiBA,MAAM,aAAN,SAA4B,gBAA5B,CAAmC;AAwF/B,EAAA,WAAA,CACI,EADJ,EAEI,KAFJ,EAGI,MAHJ,EAII,MAJJ,EAKI,KALJ,EAKiB;AAEb;;AAcG,SAAA,IAAA,GAAO,MAAW;AACrB,YAAM,EAAE,GAAG,KAAK,EAAhB;AACA,MAAA,EAAE,CAAC,gBAAH,CAAoB,EAAE,CAAC,YAAvB,EAAqC,KAAK,YAA1C;AACA,MAAA,EAAE,CAAC,mBAAH,CAAuB,EAAE,CAAC,YAA1B,EAAwC,KAAK,MAA7C,EAAqD,KAAK,KAA1D,EAAiE,KAAK,MAAtE;AACA,WAAK,QAAL;AACH,KALM;;AAbH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,YAAL,GAAoB,EAAE,CAAC,kBAAH,EAApB;AACA,SAAK,MAAL,GAAc,MAAM,IAAI,OAAxB;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,KAAL,CAAW,iBAAX;AACA,IAAA,gBAAgB,CAAC,GAAjB,CAAqB,KAAK,EAA1B,EAA8B,IAA9B;AACH;;AApGD,EAAA,OAAO,GAAA;AACH,UAAM,EAAE,GAAG,KAAK,EAAhB;AACA,UAAM,OAAO,GAAG,KAAK,YAArB;AACA,IAAA,EAAE,CAAC,gBAAH,CAAoB,EAAE,CAAC,YAAvB,EAAqC,IAArC;AACA,IAAA,EAAE,CAAC,kBAAH,CAAsB,OAAtB;AACA,SAAK,YAAL,GAAoB,IAApB;AACA,SAAK,QAAL,GAAgB,CAAhB;AACA,IAAA,gBAAgB,CAAC,MAAjB,CAAwB,KAAK,EAA7B;AACA,SAAK,KAAL,CAAW,iBAAX;AACH;;AAKD,EAAA,MAAM,GAAA;AACF,QAAI,EAAE,KAAK,QAAP,IAAmB,CAAvB,EAA0B,KAAK,OAAL;AAC7B;;AAmCD,MAAI,KAAJ,GAAS;AACL,WAAO,KAAK,KAAZ;AACH;;AAKD,MAAI,MAAJ,GAAU;AACN,WAAO,KAAK,MAAZ;AACH;;AAKD,MAAI,YAAJ,GAAgB;AACZ,WAAO,KAAK,YAAZ;AACH;;AAKD,MAAI,MAAJ,GAAU;AACN,WAAO,6BAAmB,KAAK,MAAxB,CAAP;AACH;;AA9E8B;;;;;;;;;;;ACzBnC;;AACA;;AACA;;AAEA;;AAKA,MAAM,WAAN,SAA0B,gBAA1B,CAAiC;AA2D7B,EAAA,WAAA,CACI,EADJ,EAEI,MAFJ,EAGI,MAHJ,EAGoC;;;AAEhC;;AAeG,SAAA,MAAA,GAAU,QAAD,IAA2B;AACvC,YAAM,EAAE,GAAG,KAAK,EAAhB;AACA,UAAI,KAAK,WAAT,EACI,EAAE,CAAC,oBAAH,CAAwB,EAAE,CAAC,WAA3B,EAAwC,QAAxC,EAAkD,KAAK,MAAvD,EAA+D,KAAK,WAAL,CAAiB,OAAhF,EAAyF,CAAzF,EADJ,KAGI,EAAE,CAAC,uBAAH,CAA2B,EAAE,CAAC,WAA9B,EAA2C,QAA3C,EAAqD,KAAK,MAA1D,EAAkE,KAAK,gBAAL,CAAsB,YAAxF;AACP,KANM;;AAdH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,4BAAkB,MAAM,IAAI,YAA5B,KAA6C,CAA3D;AACA,QAAI,MAAM,YAAY,kBAAtB,EACI,KAAK,WAAL,GAAmB,MAAnB,CADJ,KAEK,IAAI,MAAM,YAAY,4BAAtB,EACD,KAAK,gBAAL,GAAwB,MAAxB;AACJ,SAAK,KAAL,GAAa,CAAA,CAAA,EAAA,GAAA,KAAK,WAAL,MAAgB,IAAhB,IAAgB,EAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAgB,EAAA,CAAE,KAAlB,MAA2B,CAAA,EAAA,GAAA,KAAK,gBAAL,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAE,KAAlD,KAA2D,CAAxE;AACA,SAAK,MAAL,GAAc,CAAA,CAAA,EAAA,GAAA,KAAK,WAAL,MAAgB,IAAhB,IAAgB,EAAA,KAAA,KAAA,CAAhB,GAAgB,KAAA,CAAhB,GAAgB,EAAA,CAAE,MAAlB,MAA4B,CAAA,EAAA,GAAA,KAAK,gBAAL,MAAqB,IAArB,IAAqB,EAAA,KAAA,KAAA,CAArB,GAAqB,KAAA,CAArB,GAAqB,EAAA,CAAE,MAAnD,KAA6D,CAA3E;AACH;;AArED,EAAA,OAAO,GAAA;AACH,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAKD,EAAA,MAAM,GAAA;AACF,QAAI,EAAE,KAAK,QAAP,IAAmB,CAAvB,EACI,KAAK,OAAL;AACP;;AAmCD,MAAI,OAAJ,GAAW;AACP,WAAO,KAAK,WAAZ;AACH;;AAnD4B;;;;;;;;;;;ACNjC;;AACA;;AAEA;;AAQA,MAAM,WAAW,GAAG,IAAI,UAAJ,CAAe,CAAf,CAApB;;AAKA,MAAM,gBAAN,CAAsB;AAmFlB,EAAA,WAAA,CACI,EADJ,EAEI,YAFJ,EAGI,iBAHJ,EAII,MAJJ,EAKI,MALJ,EAMI,KANJ,EAMiB;AAaT,SAAA,eAAA,GACJ,IADsB,IAST;AACb,YAAM,EAAE,GAAG,KAAK,EAAhB;;AACA,UAAI,IAAI,CAAC,SAAT,EAAoB;AAChB,cAAM,OAAO,GAAG,KAAK,YAAL,CAAkB,eAAlB,CACZ,WADY,EAEZ,IAAI,CAAC,CAFO,EAGZ,IAAI,CAAC,CAHO,EAIZ,IAAI,CAAC,CAJO,CAAhB;AAOA,eAAO,IAAI,wBAAJ,CAAgB,EAAhB,EAAoB,YAApB,EAAkC,OAAlC,CAAP;AACH,OATD,MAUK;AACD,cAAM,GAAG,GAAG,KAAK,iBAAL,CAAuB,kBAAvB,CAA0C;AAClD,UAAA,CAAC,EAAE,IAAI,CAAC,CAD0C;AAElD,UAAA,CAAC,EAAE,IAAI,CAAC,CAF0C;AAGlD,UAAA,MAAM,EAAE,IAAI,CAAC,MAAL,IAAe;AAH2B,SAA1C,CAAZ;AAMA,eAAO,IAAI,wBAAJ,CAAgB,EAAhB,EAAoB,cAApB,EAAoC,GAApC,CAAP;AACH;AACJ,KA9BO;;AAgCD,SAAA,iBAAA,GACH,IADuB,IAOT;;;AACd,YAAM,EAAE,GAAG,KAAK,EAAhB;AACA,YAAM,GAAG,GAAG,IAAI,0BAAJ,CAAiB,EAAjB,EAAqB,KAAK,MAA1B,EAAkC,KAAK,KAAvC,CAAZ;AAEA,YAAM,gBAAgB,GAAkB,EAAxC;AACA,OAAA,EAAA,GAAA,IAAI,CAAC,MAAL,MAAW,IAAX,IAAW,EAAA,KAAA,KAAA,CAAX,GAAW,KAAA,CAAX,GAAW,EAAA,CAAE,OAAF,CAAW,KAAD,IAAoC;AACrD,cAAM,IAAI,GAAG,KAAK,YAAY,kBAAjB,GAA4B,YAA5B,GAA2C,cAAxD;AACA,QAAA,gBAAgB,CAAC,IAAjB,CAAsB,IAAI,wBAAJ,CAAgB,EAAhB,EAAoB,IAApB,EAA0B,KAA1B,CAAtB;AACH,OAHU,CAAX;AAKA,YAAM,eAAe,GAAgB,CAAC,IAAI,CAAC,KAAN,GAAc,IAAd,GAAqB,IAAI,wBAAJ,CAAgB,EAAhB,EAAoB,cAApB,EAAoC,IAAI,CAAC,KAAzC,CAA1D;AAEA,YAAM,iBAAiB,GAAgB,CAAC,IAAI,CAAC,OAAN,GAAgB,IAAhB,GAAuB,IAAI,wBAAJ,CAAgB,EAAhB,EAAoB,cAApB,EAAoC,IAAI,CAAC,OAAzC,CAA9D;AAEA,YAAM,sBAAsB,GAAgB,CAAC,IAAI,CAAC,YAAN,GAAqB,IAArB,GAA4B,IAAI,wBAAJ,CAAgB,EAAhB,EAAoB,cAApB,EAAoC,IAAI,CAAC,YAAzC,CAAxE;AAEA,MAAA,GAAG,CAAC,iBAAJ,CAAsB;AAClB,QAAA,gBADkB;AAElB,QAAA,eAFkB;AAGlB,QAAA,iBAHkB;AAIlB,QAAA;AAJkB,OAAtB;AAMA,MAAA,GAAG,CAAC,iBAAJ;AACA,aAAO,GAAP;AACH,KA/BM;;AA3CH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,YAAL,GAAoB,YAApB;AACA,SAAK,iBAAL,GAAyB,iBAAzB;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,KAAL,GAAa,KAAb;AACH;;AAhDD,MAAI,OAAJ,CAAY,CAAZ,EAA2B;AACvB,SAAK,OAAL,GAAe,CAAf;AACH;;AAKD,MAAI,OAAJ,GAAW;AACP,WAAO,KAAK,OAAZ;AACH;;AAKD,MAAI,IAAJ,CAAS,CAAT,EAAwB;AACpB,SAAK,IAAL,GAAY,CAAZ;AACH;;AAKD,MAAI,IAAJ,GAAQ;AACJ,WAAO,KAAK,IAAZ;AACH;;AAxEiB;;;AAIX,gBAAA,CAAA,eAAA,GAA6C,6BAA7C;;;;;;;;;ACvBX;;AACA;;AAGA;;AAKA,MAAM,WAAW,GAA0B,IAAI,GAAJ,EAA3C;;;AA8BA,MAAM,QAAN,SAAuB,gBAAvB,CAA8B;AAuF1B,EAAA,WAAA,CACI,EADJ,EAEI,WAFJ,EAGI,WAHJ,EAII,YAJJ,EAKI,YALJ,EAMI,eANJ,EAM6B;AAEzB;;AAgBJ,SAAA,GAAA,GAAM,MAAK;AACP,wBAAM,KAAK,OAAX,EAAoB,2BAApB;AACA,WAAK,EAAL,CAAQ,UAAR,CAAmB,KAAK,OAAxB;AACH,KAHD;;AASQ,SAAA,IAAA,GAAQ,kBAAD,IAAiC;AAC5C,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YAAoB,WAAW,GAAG,KAAK,WAAvC;AAAA,YAAoD,MAAM,GAAG,KAAK,MAAlE;AAAA,YAA0E,MAAM,GAAG,KAAK,MAAxF;AACA,YAAM,UAAU,GAAG,WAAW,CAAC,YAAZ,CAAyB,iBAAzB,EAA4C,MAA5C,CAAnB;AACA,YAAM,UAAU,GAAG,WAAW,CAAC,YAAZ,CAAyB,eAAzB,EAA0C,MAA1C,CAAnB;AACA,YAAM,OAAO,GAAG,KAAK,OAAL,GAAe,EAAE,CAAC,aAAH,EAA/B;AACA,MAAA,EAAE,CAAC,YAAH,CAAgB,OAAhB,EAAyB,UAAU,CAAC,MAApC;AACA,MAAA,EAAE,CAAC,YAAH,CAAgB,OAAhB,EAAyB,UAAU,CAAC,MAApC;AACA,MAAA,kBAAkB,KAAA,IAAlB,IAAA,kBAAkB,KAAA,KAAA,CAAlB,GAAkB,KAAA,CAAlB,GAAA,kBAAkB,CAAE,OAApB,CAA4B,CAAC,CAAD,EAAS,CAAT,KAAsB;AAC9C,cAAM,OAAO,GAAG,kBAAkB,CAAC,CAAD,CAAlC;AACA,QAAA,EAAE,CAAC,kBAAH,CAAsB,OAAtB,EAA+B,CAA/B,EAAkC,OAAlC;AACH,OAHD,CAAA;AAIA,MAAA,EAAE,CAAC,WAAH,CAAe,OAAf;AACA,wBAAM,EAAE,CAAC,mBAAH,CAAuB,OAAvB,EAAgC,EAAE,CAAC,WAAnC,CAAN,EAAuD,iBAAiB,EAAE,CAAC,iBAAH,CAAqB,OAArB,CAA6B,EAArG;AACA,WAAK,cAAL;AACA,WAAK,gBAAL;AACH,KAfO;;AAoBA,SAAA,cAAA,GAAiB,MAAK;AAC1B,YAAM,gBAAgB,GAAI,IAAD,IAAsB;AAC3C,aAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,KAAK,QAAL,CAAc,MAApC,EAA4C,CAAC,GAAG,GAAhD,EAAqD,CAAC,EAAtD,EAA0D;AACtD,cAAI,KAAK,QAAL,CAAc,CAAd,EAAiB,EAAjB,KAAwB,IAAI,CAAC,EAAjC,EAAqC;AACjC,iBAAK,QAAL,CAAc,CAAd,EAAiB,QAAjB,GAA4B,IAAI,CAAC,QAAjC;AACA;AACH;AACJ;;AACD,aAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB;AACH,OARD;;AASA,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YAAoB,OAAO,GAAG,KAAK,OAAnC;AAAA,YAA4C,WAAW,GAAG,KAAK,WAA/D;AAEA,YAAM,WAAW,GAAG,EAAE,CAAC,mBAAH,CAAuB,OAAvB,EAAgC,wBAAc,iBAAd,CAAhC,CAApB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,WAApB,EAAiC,EAAE,CAAnC,EAAsC;AAClC,cAAM,IAAI,GAAG,EAAE,CAAC,gBAAH,CAAoB,OAApB,EAA6B,CAA7B,CAAb;;AACA,YAAI,IAAJ,EAAU;AACN,cAAI,IAAI,CAAC,IAAL,GAAY,CAAhB,EAAmB;AACf,iBAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,IAAI,CAAC,IAA3B,EAAiC,CAAC,GAAG,GAArC,EAA0C,EAAE,CAA5C,EAA+C;AAC3C,oBAAM,IAAI,GAAG,IAAI,CAAC,IAAL,CAAU,OAAV,CAAkB,KAAlB,EAAyB,IAAI,CAAC,GAA9B,CAAb;AACA,cAAA,gBAAgB,CAAC;AACb,gBAAA,IAAI,EAAE,IADO;AAEb,gBAAA,EAAE,EAAE,WAAW,CAAC,EAAZ,CAAe,IAAf,CAFS;AAGb,gBAAA,QAAQ,EAAE,EAAE,CAAC,kBAAH,CAAsB,OAAtB,EAA+B,IAA/B,CAHG;AAIb,gBAAA,IAAI,EAAE;AAJO,eAAD,CAAhB;AAMH;AACJ;;AACD,cAAI,OAAO,GAAG,IAAI,CAAC,IAAnB;;AACA,cAAI,IAAI,CAAC,IAAL,GAAY,CAAhB,EAAmB;AACf,YAAA,OAAO,GAAG,OAAO,CAAC,OAAR,CAAgB,KAAhB,EAAuB,EAAvB,CAAV;AACH;;AACD,UAAA,gBAAgB,CAAC;AACb,YAAA,IAAI,EAAE,OADO;AAEb,YAAA,EAAE,EAAE,WAAW,CAAC,EAAZ,CAAe,OAAf,CAFS;AAGb,YAAA,QAAQ,EAAE,EAAE,CAAC,kBAAH,CAAsB,OAAtB,EAA+B,OAA/B,CAHG;AAIb,YAAA,IAAI,EAAE;AAJO,WAAD,CAAhB;AAMH;AACJ;AACJ,KAvCO;;AA4CA,SAAA,gBAAA,GAAmB,MAAK;AAC5B,YAAM,gBAAgB,GAAI,IAAD,IAAsB;AAC3C,aAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,KAAK,UAAL,CAAgB,MAAtC,EAA8C,CAAC,GAAG,GAAlD,EAAuD,CAAC,EAAxD,EAA4D;AACxD,cAAI,KAAK,UAAL,CAAgB,CAAhB,EAAmB,EAAnB,KAA0B,IAAI,CAAC,EAAnC,EAAuC;AACnC,iBAAK,UAAL,CAAgB,CAAhB,EAAmB,QAAnB,GAA8B,IAAI,CAAC,QAAnC;AACA;AACH;AACJ;;AACD,aAAK,UAAL,CAAgB,IAAhB,CAAqB,IAArB;AACH,OARD;;AASA,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YAAoB,OAAO,GAAG,KAAK,OAAnC;AACA,YAAM,aAAa,GAAG,EAAE,CAAC,mBAAH,CAAuB,OAAvB,EAAgC,wBAAc,mBAAd,CAAhC,CAAtB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,aAApB,EAAmC,EAAE,CAArC,EAAwC;AACpC,cAAM,IAAI,GAAG,EAAE,CAAC,eAAH,CAAmB,OAAnB,EAA4B,CAA5B,CAAb;AACA,YAAI,IAAJ,EACI,gBAAgB,CAAC;AACb,UAAA,IAAI,EAAE,IAAI,CAAC,IADE;AAEb,UAAA,EAAE,EAAE,KAAK,WAAL,CAAiB,EAAjB,CAAoB,IAAI,CAAC,IAAzB,CAFS;AAGb,UAAA,QAAQ,EAAE,EAAE,CAAC,iBAAH,CAAqB,OAArB,EAA8B,IAAI,CAAC,IAAnC,CAHG;AAIb,UAAA;AAJa,SAAD,CAAhB;AAMP;AACJ,KAtBO;;AAxFJ,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,YAAd;AACA,SAAK,MAAL,GAAc,YAAd;AACA,SAAK,OAAL,GAAe,IAAf;AACA,SAAK,QAAL,GAAgB,EAAhB;AACA,SAAK,UAAL,GAAkB,EAAlB;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,IAAL,CAAU,eAAV;AACA,IAAA,WAAW,CAAC,GAAZ,CAAgB,KAAK,EAArB,EAAyB,IAAzB;AACH;;AAtGD,EAAA,OAAO,GAAA;AACH,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAKD,EAAA,MAAM,GAAA;AACF,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAkDD,MAAI,QAAJ,GAAY;AACR,WAAO,KAAK,QAAZ;AACH;;AAKD,MAAI,UAAJ,GAAc;AACV,WAAO,KAAK,UAAZ;AACH;;AAKD,MAAI,aAAJ,GAAiB;AACb,QAAI,CAAC,KAAK,WAAV,EAAuB;AACnB,WAAK,WAAL,GAAmB,IAAI,GAAJ,EAAnB;AACA,WAAK,UAAL,CAAgB,OAAhB,CAAyB,GAAD,IAAqB;AACzC,aAAK,WAAL,CAAiB,GAAjB,CAAqB,GAAG,CAAC,IAAzB,EAA+B,GAA/B;AACH,OAFD;AAGH;;AACD,WAAO,KAAK,WAAZ;AACH;;AArFyB;;;;;;;;;;;ACvC9B;;AAGA;;AAKA,MAAM,YAAN,CAAkB;AAuCd,EAAA,WAAA,CACI,EADJ,EAEI,WAFJ,EAGI,WAHJ,EAG4B;AAerB,SAAA,aAAA,GAAgB,CACnB,IADmB,EAEnB,IAFmB,EAGnB,eAHmB,KAIT;AACV,wBAAM,IAAI,CAAC,MAAL,IAAe,CAArB,EAAwB,8CAAxB;AACA,wBAAM,IAAI,CAAC,MAAL,IAAe,CAArB,EAAwB,gDAAxB;AACA,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YAAoB,WAAW,GAAG,KAAK,WAAvC;AAAA,YAAoD,WAAW,GAAG,KAAK,WAAvE;AACA,YAAM,UAAU,GAAG,WAAW,CAAC,YAAZ,CAAyB,iBAAzB,EAA4C,WAAW,CAAC,EAAZ,CAAe,IAAf,CAA5C,CAAnB;AACA,YAAM,UAAU,GAAG,WAAW,CAAC,YAAZ,CAAyB,eAAzB,EAA0C,WAAW,CAAC,EAAZ,CAAe,IAAf,CAA1C,CAAnB;AACA,YAAM,WAAW,GAAG,IAAI,kBAAJ,CAAa,EAAb,EAAiB,WAAjB,EAA8B,WAA9B,EAA2C,UAAU,CAAC,EAAtD,EAA0D,UAAU,CAAC,EAArE,EAAyE,eAAzE,CAApB;AACA,aAAO,WAAP;AACH,KAZM;;AAkBA,SAAA,UAAA,GAAc,aAAD,IAAgC;AAChD,YAAM,WAAW,GAAG,YAAY,CAAC,WAAb,CAAyB,GAAzB,CAA6B,aAA7B,CAApB;AACA,MAAA,WAAW,CAAC,GAAZ;AACA,WAAK,WAAL,GAAmB,WAAnB;AACH,KAJM;;AA/BH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,WAAL,GAAmB,IAAnB;AACH;;AAnBD,MAAI,OAAJ,GAAW;AACP,WAAO,KAAK,WAAZ;AACH;;AA/Ba;;;AAIP,YAAA,CAAA,WAAA,GAAqC,qBAArC;;;;;;;;;ACRX;;AACA;;AAMA,MAAM,iBAAN,CAAuB;AAkCnB,EAAA,WAAA,CACI,EADJ,EAEI,MAFJ,EAGI,MAHJ,EAII,KAJJ,EAIiB;AAaV,SAAA,kBAAA,GACH,IADwB,IAMT;AACf,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YAAoB,CAAC,GAAG,IAAI,CAAC,CAAL,IAAU,CAAlC;AAAA,YAAqC,CAAC,GAAG,IAAI,CAAC,CAAL,IAAU,CAAnD;AAAA,YAAsD,CAAC,GAAG,IAAI,CAAC,MAAL,IAAe,OAAzE;AACA,wBAAM,CAAC,GAAG,CAAJ,IAAS,CAAC,GAAG,CAAb,IAAkB,CAAC,IAAI,KAAK,MAAL,CAAY,cAAnC,IAAqD,CAAC,IAAI,KAAK,MAAL,CAAY,cAA5E,EAA4F,2BAA5F;AACA,YAAM,GAAG,GAAG,IAAI,4BAAJ,CAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,CAA5B,EAA+B,KAAK,KAApC,CAAZ;AACA,MAAA,GAAG,CAAC,IAAJ;AACA,aAAO,GAAP;AACH,KAZM;;AAXH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,KAAL,GAAa,KAAb;AACH;;AA5CkB;;;AAKZ,iBAAA,CAAA,gBAAA,GAA+C,+BAA/C;;;;;;;;;ACfX;;AACA;;AACA;;AAMA,MAAM,cAAc,GAAyB,IAAI,GAAJ,EAA7C;;AAKA,MAAM,cAAc,GAAyB,IAAI,GAAJ,EAA7C;;;AAOA,MAAM,OAAN,SAAsB,gBAAtB,CAA6B;AA0CzB,EAAA,WAAA,CACI,EADJ,EAEI,EAFJ,EAGI,MAHJ,EAII,MAJJ,EAIyB;AAErB;AACA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,wBAAc,MAAd,CAAd;AACA,SAAK,MAAL,GAAc,EAAE,CAAC,YAAH,CAAgB,KAAK,MAArB,CAAd;AACA,SAAK,MAAL,GAAc,MAAd;AACA,IAAA,EAAE,CAAC,YAAH,CAAgB,KAAK,MAArB,EAA6B,MAA7B;AACA,IAAA,EAAE,CAAC,aAAH,CAAiB,KAAK,MAAtB;AACA,sBAAM,EAAE,CAAC,kBAAH,CAAsB,KAAK,MAA3B,EAAmC,EAAE,CAAC,cAAtC,CAAN,EAA6D,gBAAgB,EAAE,CAAC,gBAAH,CAAoB,KAAK,MAAzB,CAAgC,EAA7G;AACA,SAAK,MAAL,KAAgB,wBAAc,iBAAd,CAAhB,GAAmD,cAAc,CAAC,GAAf,CAAmB,KAAK,EAAxB,EAA4B,IAA5B,CAAnD,GAAuF,cAAc,CAAC,GAAf,CAAmB,KAAK,EAAxB,EAA4B,IAA5B,CAAvF;AACH;;AAtDD,EAAA,OAAO,GAAA;AACH,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAKD,EAAA,MAAM,GAAA;AACF,UAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;AAyBD,MAAI,MAAJ,GAAU;AACN,WAAO,KAAK,MAAZ;AACH;;AAxCwB;;;;;;;;;;;AClB7B;;AAKA,MAAM,WAAN,CAAiB;AAgCb,EAAA,WAAA,CACI,EADJ,EAEI,WAFJ,EAGI,KAHJ,EAGgB;AAeT,SAAA,YAAA,GAAe,CAAC,MAAD,EAAwB,EAAxB,KAA+C;AACjE,YAAM,UAAU,GAAG,MAAM,KAAK,iBAAX,GAA+B,WAAW,CAAC,cAA3C,GAA4D,WAAW,CAAC,cAA3F;AACA,UAAI,MAAM,GAAG,UAAU,CAAC,GAAX,CAAe,EAAf,CAAb;;AACA,UAAI,CAAC,MAAL,EAAa;AACT,cAAM,MAAM,GAAG,KAAK,WAAL,CAAiB,GAAjB,CAAqB,EAArB,CAAf;AACA,QAAA,MAAM,GAAG,IAAI,gBAAJ,CAAY,KAAK,EAAjB,EAAqB,EAArB,EAAyB,MAAzB,EAAiC,MAAjC,CAAT;AACH;;AACD,aAAO,MAAP;AACH,KARM;;AAbH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,WAAL,GAAmB,WAAnB;AACA,SAAK,KAAL,GAAa,KAAb;AACH;;AAxCY;;;AAIE,WAAA,CAAA,cAAA,GAAuC,uBAAvC;AAKA,WAAA,CAAA,cAAA,GAAuC,uBAAvC;;;;;;;;;ACVnB,MAAM,WAAN,CAAiB;AAAjB,EAAA,WAAA,GAAA;AASY,SAAA,YAAA,GAAyB,EAAzB;;AAOR,SAAA,EAAA,GAAM,GAAD,IAAgB;AACjB,UAAI,MAAM,GAAG,WAAW,CAAC,eAAZ,CAA4B,GAA5B,CAAgC,GAAhC,CAAb;AACA,UAAI,MAAJ,EAAY,OAAO,MAAP;AACZ,MAAA,MAAM,GAAI,KAAK,YAAL,CAAkB,MAA5B;AACA,MAAA,WAAW,CAAC,eAAZ,CAA4B,GAA5B,CAAgC,GAAhC,EAAqC,MAArC;AACA,WAAK,YAAL,CAAkB,IAAlB,CAAuB,GAAvB;AACA,aAAO,MAAP;AACH,KAPD;;AAcA,SAAA,GAAA,GAAO,EAAD,IAAe;AACjB,aAAO,KAAK,YAAL,CAAkB,EAAlB,CAAP;AACH,KAFD;AAGH;;AAjCgB;;;AAIE,WAAA,CAAA,eAAA,GAAuC,IAAI,GAAJ,EAAvC;;;;;;;;;ACLnB,MAAM,SAAS,GAAG,CAAC,MAAD,EAAiB,GAAG,IAApB,KAA8C;AAC5D,EAAA,IAAI,CAAC,OAAL,CAAc,GAAD,IAAgB;AACzB,UAAM,IAAI,GAAG,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAb;;AACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,IAAI,CAAC,MAA3B,EAAmC,CAAC,GAAG,GAAvC,EAA4C,EAAE,CAA9C,EACI,MAAM,CAAC,IAAI,CAAC,CAAD,CAAL,CAAN,GAAkB,GAAG,CAAC,IAAI,CAAC,CAAD,CAAL,CAArB;AACP,GAJD;AAKA,SAAO,MAAP;AACH,CAPD;;;;AAeA,MAAM,OAAO,GAAG,CAAC,MAAD,EAAiB,GAAG,IAApB,KAA8C;AAC1D,EAAA,IAAI,CAAC,OAAL,CAAc,GAAD,IAAgB;;;AACzB,KAAA,EAAA,GAAA,MAAM,CAAC,IAAP,CAAY,MAAZ,CAAA,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmB,EAAA,CAAE,OAAF,CAAW,GAAD,IAAc;AACvC,MAAA,MAAM,CAAC,GAAD,CAAN,GAAc,GAAG,CAAC,GAAD,CAAH,IAAY,MAAM,CAAC,GAAD,CAAhC;AACH,KAFkB,CAAnB;AAGH,GAJD;AAKA,SAAO,MAAP;AACH,CAPD;;;;;;;;;;;ACrBA;;AAMA,MAAM,KAAK,GAAG,IAAI,YAAJ,CAAiB,CAAjB,CAAd;AAAA,MAAmC,GAAG,GAAG,IAAI,WAAJ,CAAgB,KAAK,CAAC,MAAtB,CAAzC;;AAOA,MAAM,WAAW,GAAI,KAAD,IAAyD;AACzE,QAAM,GAAG,GAAG,KAAK,CAAC,MAAlB;;AACA,QAAM,OAAO,GAAG,wBAAY,SAAZ,CAAsB,gBAAtB,EAAwC,GAAxC,CAAhB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,GAApB,EAAyB,EAAE,CAA3B,EAA8B;AAC1B,QAAI,KAAK,CAAC,KAAK,CAAC,CAAD,CAAN,CAAT,EAAqB,OAAO,CAAC,CAAD,CAAP,GAAa,MAAb,CAArB,KACK,IAAI,KAAK,CAAC,CAAD,CAAL,KAAa,QAAjB,EAA2B,OAAO,CAAC,CAAD,CAAP,GAAa,MAAb,CAA3B,KACA,IAAI,KAAK,CAAC,CAAD,CAAL,KAAa,CAAC,QAAlB,EAA4B,OAAO,CAAC,CAAD,CAAP,GAAa,MAAb,CAA5B,KACA;AACD,MAAA,KAAK,CAAC,CAAD,CAAL,GAAW,KAAK,CAAC,CAAD,CAAhB;AACA,YAAM,CAAC,GAAG,GAAG,CAAC,CAAD,CAAb;AACA,YAAM,GAAG,GAAI,CAAC,KAAK,EAAP,IAAc,EAA1B;AACA,YAAM,GAAG,GAAG,CAAE,CAAC,IAAI,CAAN,KAAa,EAAd,IAAoB,GAAhC;AACA,YAAM,IAAI,GAAI,CAAC,IAAI,EAAN,GAAa,CAAC,KAAK,EAAN,IAAY,CAAtC;AACA,UAAI,GAAG,GAAG,CAAC,EAAX,EAAe,OAAO,CAAC,CAAD,CAAP,GAAa,GAAb,CAAf,KACK,IAAI,GAAG,GAAG,CAAC,EAAX,EAAe;AAChB,cAAM,CAAC,GAAG,CAAC,EAAD,GAAM,GAAhB;AACA,QAAA,OAAO,CAAC,CAAD,CAAP,GAAa,GAAG,IAAK,IAAI,IAAI,KAAK,EAAT,CAAL,IAAsB,CAA1B,CAAhB;AACH,OAHI,MAIA,IAAI,GAAG,GAAG,EAAV,EAAc,OAAO,CAAC,CAAD,CAAP,GAAa,GAAG,GAAG,MAAnB,CAAd,KACA,OAAO,CAAC,CAAD,CAAP,GAAa,GAAG,IAAK,GAAG,GAAG,EAAP,IAAc,EAAlB,CAAH,GAA2B,IAAxC;AACR;AACJ;;AACD,SAAO,OAAP;AACH,CAvBD;;;;;;;;;;;ACbA;;AAEA;;AASA,MAAM,SAAN,CAAe;;;;AAOI,SAAA,CAAA,UAAA,GAAa,CAAC,KAAD,EAAmB,IAAnB,KAAqD;AAC7E,QAAM,SAAS,GAAgB,KAAK,CAAC,SAAN,KAAoB,gBAApB,GAAuC,OAAvC,GAAiD,KAAK,CAAC,SAAtF;AACA,SAAO,wBAAY,SAAZ,CAAsB,SAAtB,EAAiC,IAAjC,CAAP;AACH,CAHc;;AAUA,SAAA,CAAA,WAAA,GAAc,CAAC,KAAD,EAAmB,IAAnB,KAAmD;AAC5E,MAAI,KAAK,CAAC,SAAN,KAAoB,gBAAxB,EAA0C;AACtC,IAAA,KAAK,CAAC,IAAN,GAAa,8BAAY,IAAZ,CAAb;;AACA,4BAAY,QAAZ,CAAqB,IAArB;AACH,GAHD,MAIK,KAAK,CAAC,IAAN,GAAa,IAAb;AACR,CANc;;AAiBD,SAAA,CAAA,aAAA,GAAgB,CAAC,KAAD,EAAmB,GAAnB,EAA0C,EAA1C,EAAsD,EAAtD,EAAkE,EAAlE,EAA8E,MAA9E,KAAkH;AAC5I,MAAI,CAAC,GAAL,EAAU,OAAO,GAAP;AACV,QAAM,CAAC,GAAG,KAAK,CAAC,KAAhB;AAAA,QAAuB,CAAC,GAAG,KAAK,CAAC,MAAjC;AAAA,QAAyC,CAAC,GAAG,KAAK,CAAC,QAAnD;AAAA,QAA6D,IAAI,GAAG,CAAC,GAAG,CAAJ,GAAQ,CAA5E;AACA,QAAM,IAAI,GAAG,SAAS,CAAC,UAAV,CAAqB,KAArB,EAA4B,IAA5B,CAAb;AACA,MAAI,CAAC,GAAG,CAAR;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,EAAE,CAAzB,EACI,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,EAAE,CAAzB,EACI,KAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,CAApB,EAAuB,EAAE,CAAzB,EACI,IAAI,CAAC,CAAC,EAAF,CAAJ,GAAY,GAAG,CAAC,EAAE,GAAG,CAAL,GAAS,EAAE,GAAG,CAAd,GAAkB,EAAE,GAAG,CAAvB,GAA2B,MAA5B,CAAf;;AACZ,EAAA,SAAS,CAAC,WAAV,CAAsB,KAAtB,EAA6B,IAA7B;AACH,CAVa;;;;;;;;;ACxClB,MAAM,UAAU,GAAI,CAAD,IAAuB;AACtC,SAAO,CAAC,GAAG,CAAJ,IAAS,CAAC,CAAC,GAAI,CAAC,GAAG,CAAV,KAAiB,CAAjC;AACH,CAFD;;;;;;;;;;;ACJA;;AAQA,MAAM,YAAY,GAAG,CAAC,SAAD,EAA+B,QAA/B,KAA2D;AAC5E,UAAQ,SAAR;AACI,SAAK,wBAAL;AACA,SAAK,wBAAL;AACA,SAAK,sBAAL;AACI,aAAO,CAAP;;AACJ,SAAK,yBAAL;AACI,aAAO,CAAP;;AACJ;AACI,aAAO,gCAAsB,4BAAkB,SAAlB,CAAtB,IAAsD,QAA7D;AARR;AAUH,CAXD;;;;;;;;;;;ACTA;;AAKA;;AACA;;AAEA;;AAQA,MAAM,cAAc,GAAG,CACnB,IADmB,EAUnB,MAVmB,EAWnB,MAXmB,KAYb;AACN,EAAA,IAAI,CAAC,SAAL,GAAiB,IAAI,CAAC,SAAL,IAAkB,MAAnC;AACA,EAAA,IAAI,CAAC,KAAL,GAAa,IAAI,CAAC,KAAL,IAAc,CAA3B;AACA,EAAA,IAAI,CAAC,MAAL,GAAc,IAAI,CAAC,MAAL,IAAe,CAA7B;AACA,EAAA,IAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,QAAL,IAAiB,MAAjC;AACA,EAAA,IAAI,CAAC,QAAL,GAAgB,IAAI,CAAC,QAAL,IAAiB,+BAAqB,wBAAc,IAAI,CAAC,QAAnB,CAArB,CAAjC;AACA,EAAA,IAAI,CAAC,UAAL,GAAkB,6BAAmB,IAAI,CAAC,QAAxB,IAAoC,IAApC,GAA2C,KAA7D;AACA,oBAAM,IAAI,CAAC,SAAL,KAAmB,OAAnB,IAA8B,MAAM,CAAC,GAAP,CAAW,mBAAX,CAApC,EAAqE,qDAArE;AACA,oBAAM,IAAI,CAAC,SAAL,KAAmB,gBAAnB,IAAuC,MAAM,CAAC,GAAP,CAAW,mBAAX,CAA7C,EAA8E,qDAA9E;AACA,oBAAM,CAAC,IAAI,CAAC,SAAL,KAAmB,gBAAnB,IAAuC,IAAI,CAAC,SAAL,KAAmB,cAA1D,IAA4E,IAAI,CAAC,SAAL,KAAmB,yBAAhG,KAA8H,MAAM,CAAC,GAAP,CAAW,qBAAX,CAApI,EAAuK,uDAAvK;AACA,oBAAM,IAAI,CAAC,QAAL,GAAgB,CAAhB,IAAqB,IAAI,CAAC,QAAL,IAAiB,CAA5C,EAA+C,+BAA/C;AACA,oBAAM,IAAI,CAAC,KAAL,GAAa,CAAb,IAAkB,IAAI,CAAC,KAAL,IAAc,MAAM,CAAC,cAAvC,IAAyD,IAAI,CAAC,MAAL,GAAc,CAAvE,IAA4E,IAAI,CAAC,MAAL,IAAe,MAAM,CAAC,cAAxG,EAAwH,4CAA4C,MAAM,CAAC,cAAc,EAAzL;AACH,CAxBD;;;;AAiCA,MAAM,oBAAoB,GAAG,CACzB,OADyB,EAEzB,OAFyB,EAGzB,MAHyB,EAIzB,MAJyB,KAKnB;AAEN,QAAM,CAAC,GAAG,OAAO,CAAC,KAAlB;AAAA,QAAyB,CAAC,GAAG,OAAO,CAAC,MAArC;AAAA,QAA6C,CAAC,GAAG,OAAO,CAAC,QAAzD;AACA,oBAAM,CAAC,GAAG,CAAJ,IAAS,CAAC,IAAI,MAAM,CAAC,cAArB,IAAuC,CAAC,GAAG,CAA3C,IAAgD,CAAC,IAAI,MAAM,CAAC,cAAlE,EAAkF,4CAA4C,MAAM,CAAC,cAAc,EAAnJ;AAEA,MAAI,OAAO,CAAC,KAAR,KAAkB,eAAlB,IAAqC,OAAO,CAAC,KAAR,KAAkB,eAA3D,EACI,kBAAM,2BAAW,CAAX,KAAiB,2BAAW,CAAX,CAAvB,EAAsC,4CAAtC;;AAEJ,MAAI,OAAO,CAAC,OAAR,KAAoB,CAAxB,EAA2B;AACvB,QAAI,CAAC,KAAK,CAAN,IAAW,CAAC,KAAK,CAArB,EACI,kBAAM,OAAO,CAAC,SAAR,KAAsB,sBAAtB,IAAgD,OAAO,CAAC,SAAR,KAAsB,uBAAtE,IAAiG,OAAO,CAAC,SAAR,KAAsB,uBAAvH,IAAkJ,OAAO,CAAC,SAAR,KAAsB,wBAA9K,EAAwM,4CAAxM;AACP,GAHD,MAIK;AACD,sBAAM,2BAAW,CAAX,KAAiB,2BAAW,CAAX,CAAvB,EAAsC,2CAAtC;AACA,sBAAM,OAAO,CAAC,OAAR,KAAoB,CAAC,CAAC,IAAI,CAAN,IAAW,CAArC,EAAwC,qCAAxC;AACH;;AAED,MAAI,OAAO,CAAC,SAAR,KAAsB,OAA1B,EAAmC;AAC/B,sBAAM,MAAM,CAAC,GAAP,CAAW,mBAAX,CAAN,EAAuC,sDAAvC;AACA,sBAAM,CAAC,OAAO,CAAC,SAAR,KAAsB,SAAtB,IAAmC,OAAO,CAAC,SAAR,KAAsB,SAA1D,KAAwE,MAAM,CAAC,GAAP,CAAW,0BAAX,CAA9E,EAAsH,wEAAtH;AACA,sBAAM,CAAC,OAAO,CAAC,UAAf,EAA2B,4CAA3B;AACH;;AAED,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAApB,EAAwB,EAAE,CAA1B,EAA6B;AACzB,UAAM,MAAM,GAAG,OAAO,CAAC,MAAR,CAAe,CAAf,CAAf;;AACA,QAAI,MAAJ,EAAY;AACR,YAAM,EAAE,GAAG,CAAC,IAAI,CAAhB;AAAA,YAAmB,EAAE,GAAG,CAAC,IAAI,CAA7B;AACA,wBAAM,OAAO,CAAC,OAAR,GAAmB,KAAK,CAA9B,EAAkC,kCAAlC;AACA,wBAAM,MAAM,CAAC,KAAP,KAAiB,EAAjB,IAAuB,MAAM,CAAC,MAAP,KAAkB,EAA/C,EAAmD,gDAAnD;AACA,wBAAM,MAAM,CAAC,QAAP,KAAoB,OAAO,CAAC,QAA5B,IAAwC,MAAM,CAAC,UAAP,KAAsB,OAAO,CAAC,UAAtE,IAAoF,MAAM,CAAC,SAAP,KAAqB,OAAO,CAAC,SAAvH,EAAkI,4CAAlI;;AAEA,UAAI,MAAM,CAAC,UAAX,EAAuB,CAEtB,CAFD,MAGK,IAAI,MAAM,CAAC,IAAX,EAAiB;AAClB,cAAM,OAAO,GAAG,IAAI,CAAC,IAAL,CAAU,gCAAa,MAAM,CAAC,SAApB,EAA+B,CAA/B,IAAoC,EAApC,GAAyC,MAAM,CAAC,eAA1D,IAA6E,MAAM,CAAC,eAApG;AACA,0BAAM,MAAM,CAAC,IAAP,CAAY,UAAZ,KAA2B,OAAO,GAAG,EAA3C,EAA+C,iDAA/C;AACH;AACJ;AACJ;;AAED,MAAI,OAAO,CAAC,UAAZ,EACI,kBAAM,CAAC,OAAO,CAAC,UAAf,EAA2B,yCAA3B;AACP,CAhDD;;;;AAyDA,MAAM,gBAAgB,GAAG,CACrB,IADqB,EAErB,MAFqB,EAGrB,KAHqB,EAIrB,MAJqB,KAKf;AACN,QAAM,CAAC,GAAG,MAAM,CAAC,KAAjB;AAAA,QAAwB,CAAC,GAAG,MAAM,CAAC,MAAnC;AAAA,QAA2C,CAAC,GAAG,MAAM,CAAC,QAAtD;AACA,oBAAM,CAAC,GAAG,CAAJ,IAAS,CAAC,IAAI,MAAM,CAAC,cAArB,IAAuC,CAAC,GAAG,CAA3C,IAAgD,CAAC,IAAI,MAAM,CAAC,cAAlE,EAAkF,oCAAlF;AACA,oBAAM,CAAC,KAAK,CAAZ,EAAe,qCAAf;AACA,oBAAM,IAAI,CAAC,KAAL,KAAe,eAAf,IAAkC,IAAI,CAAC,KAAL,KAAe,eAAvD,EAAwE,qDAAxE;AAEA,EAAA,KAAK,CAAC,OAAN,CAAc,IAAI,IAAG;AACjB,sBAAM,IAAI,CAAC,KAAL,KAAe,CAAf,IAAoB,IAAI,CAAC,MAAL,KAAgB,CAA1C,EAA6C,4CAA4C,IAAI,OAA7F;AAEA,UAAM,OAAO,GAAG,IAAI,CAAC,MAArB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,EAApB,EAAwB,CAAC,EAAzB,EAA6B;AACzB,YAAM,GAAG,GAAG,OAAO,CAAC,CAAD,CAAnB;;AACA,UAAI,GAAJ,EAAS;AACL,cAAM,EAAE,GAAG,CAAC,IAAI,CAAhB;AAAA,cAAmB,EAAE,GAAG,CAAC,IAAI,CAA7B;AACA,0BAAM,IAAI,CAAC,OAAL,GAAgB,KAAK,CAA3B,EAA+B,oCAA/B;AACA,0BAAM,GAAG,CAAC,KAAJ,KAAc,EAAd,IAAoB,GAAG,CAAC,MAAJ,KAAe,EAAzC,EAA6C,uCAA7C;AACA,0BAAM,GAAG,CAAC,SAAJ,KAAkB,MAAM,CAAC,SAAzB,IAAsC,GAAG,CAAC,UAAJ,KAAmB,MAAM,CAAC,UAAhE,IAA8E,GAAG,CAAC,QAAJ,KAAiB,MAAM,CAAC,QAA5G,EAAsH,mEAAtH;;AACA,YAAI,GAAG,CAAC,UAAR,EAAoB,CAEnB,CAFD,MAGK,IAAI,GAAG,CAAC,IAAR,EAAc;AACf,4BAAM,GAAG,CAAC,IAAJ,CAAS,UAAT,KAAwB,EAAE,GAAG,EAAL,GAAU,IAAI,CAAC,GAAL,CAAS,gCAAa,GAAG,CAAC,SAAjB,EAA4B,CAA5B,CAAT,EAAyC,GAAG,CAAC,eAA7C,CAAxC,EAAuG,yCAAvG;AACH,SAFI,MAGA,CAEJ;AACJ;AACJ;AACJ,GAtBD;AAuBH,CAlCD;;;;;;;;;;;ACpBA,MAAM,aAAa,GAAG,MAAe;AACjC,QAAM,QAAQ,GAAa;AACvB,IAAA,UAAU,EAAE,MADW;AAEvB,IAAA,QAAQ,EAAE,MAFa;AAGvB,IAAA,SAAS,EAAE,eAHY;AAIvB,IAAA,UAAU,EAAE,KAJW;AAKvB,IAAA,gBAAgB,EAAE,KALK;AAMvB,IAAA,KAAK,EAAE,KANgB;AAOvB,IAAA,eAAe,EAAE,CAPM;AAQvB,IAAA,UAAU,EAAE,uBARW;AASvB,IAAA,KAAK,EAAE,CATgB;AAUvB,IAAA,MAAM,EAAE,CAVe;AAWvB,IAAA,QAAQ,EAAE;AAXa,GAA3B;AAaA,SAAO,QAAP;AACH,CAfD;;;;;;;;;;;ACtFA;;AACA;;AAEA;;AAqCA,MAAM,cAAc,GAAG,MAAgB;AACnC,SAAO;AACH,IAAA,OAAO,EAAE,CADN;AAEH,IAAA,OAAO,EAAE,CAFN;AAGH,IAAA,IAAI,EAAE,IAHH;AAIH,IAAA,SAAS,EAAE,KAJR;AAKH,IAAA,SAAS,EAAE;AALR,GAAP;AAOH,CARD;;AAaA,MAAM,YAAN,CAAkB;AAAlB,EAAA,WAAA,GAAA;AAIY,SAAA,aAAA,GAA6B,EAA7B;;AAMR,SAAA,UAAA,GAAa,MAAgB;AACzB,UAAI,KAAK,aAAL,CAAmB,MAAnB,GAA4B,CAAhC,EACI,OAAO,KAAK,aAAL,CAAmB,GAAnB,EAAP;AACJ,YAAM,CAAC,GAAG,cAAc,EAAxB;AAAA,YAA4B,CAAC,GAAG,mCAAhC;AACA,aAAO,8BAAU,CAAV,EAAa,CAAb,CAAP;AACH,KALD;;AAWA,SAAA,SAAA,GAAa,QAAD,IAA8B;AACtC,UAAI,QAAQ,CAAC,SAAb,EAAwB,wBAAY,IAAZ,CAAiB,QAAQ,CAAC,IAA1B;AACxB,oCAAU,QAAV,EAAoB,cAAc,EAAlC;AACA,WAAK,aAAL,CAAmB,IAAnB,CAAwB,QAAxB;AACH,KAJD;AAKH;;AA1BiB;;AA+BlB,MAAM,aAAa,GAAG,IAAI,YAAJ,EAAtB;;;;;;;;;;ACpFA;;AACA;;AACA;;AAgCA,MAAM,UAAN,CAAgB;AAAhB,EAAA,WAAA,GAAA;AAIY,SAAA,WAAA,GAAyB,EAAzB;;AAMR,SAAA,WAAA,GAAc,MAAc;AACxB,YAAM,MAAM,GAAY,KAAK,WAAL,CAAiB,GAAjB,MAA0B,mCAAlD;AACA,MAAA,MAAM,CAAC,UAAP,GAAoB,KAApB;AACA,MAAA,MAAM,CAAC,UAAP,GAAoB,sBAAY,WAAZ,CAApB;AACA,MAAA,MAAM,CAAC,OAAP,GAAiB,CAAjB;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,IAAI,KAAJ,CAAU,EAAV,CAAhB;AACA,aAAO,MAAP;AACH,KAPD;;AAaA,SAAA,UAAA,GAAc,MAAD,IAA0B;AACnC,YAAM,SAAS,GAAG,MAAM,CAAC,MAAzB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,SAAS,CAAC,MAAhC,EAAwC,CAAC,GAAG,GAA5C,EAAiD,EAAE,CAAnD,EAAsD;AAClD,cAAM,QAAQ,GAAG,SAAS,CAAC,CAAD,CAA1B;AACA,YAAI,QAAJ,EAAc,4BAAc,SAAd,CAAwB,QAAxB;AACd,QAAA,SAAS,CAAC,CAAD,CAAT,GAAe,IAAf;AACH;;AACD,WAAK,WAAL,CAAiB,IAAjB,CAAsB,MAAtB;AACH,KARD;AASH;;AAhCe;;AAkChB,MAAM,WAAW,GAAG,IAAI,UAAJ,EAApB;;;;;;;;;;ACpEA;;AAGA;;AAGA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAEA;;AAaA,MAAM,6BAA6B,GAAU,MAA7C;AAKA,MAAM,oBAAoB,GAAuB,CAC7C,6BAD6C,EAE7C,6BAF6C,EAG7C,6BAH6C,EAI7C,6BAJ6C,EAK7C,6BAL6C,EAM7C,6BAN6C,CAAjD;AAYA,MAAM,iBAAiB,GAAG;AACtB,KAAG,WADmB;AAEtB,KAAG,iBAFmB;AAGtB,KAAG,KAHmB;AAItB,KAAG;AAJmB,CAA1B;;AAUA,MAAM,YAAN,CAAkB;AAsCd,EAAA,WAAA,CACI,EADJ,EAEI,MAFJ,EAGI,MAHJ,EAII,KAJJ,EAIiB;AAcT,SAAA,QAAA,GAAW,CAAC,IAAD,EAAkB,MAAlB,EAA6C,QAA7C,KAAuE;AACtF,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YACI,IAAI,GAAG,IAAI,CAAC,IADhB;AAAA,YAEI,UAAU,GAAG,IAAI,CAAC,UAFtB;AAAA,YAGI,QAAQ,GAAG,IAAI,CAAC,QAHpB;AAAA,YAII,SAAS,GAAG,IAAI,CAAC,SAJrB;AAAA,YAKI,KAAK,GAAG,IAAI,CAAC,KALjB;AAAA,YAMI,MAAM,GAAG,IAAI,CAAC,MANlB;AAAA,YAOI,OAAO,GAAG,4BAAkB,MAAlB,CAPd;;AAQA,UAAI,IAAI,CAAC,UAAT,EAAqB;AACjB,QAAA,EAAE,CAAC,oBAAH,CACI,OADJ,EAEI,QAFJ,EAGI,wBAAc,UAAd,CAHJ,EAII,KAJJ,EAKI,MALJ,EAMI,CANJ,EAOI,IAAI,IAAI,IAPZ;AAQH,OATD,MAUK,IAAI,IAAI,CAAC,SAAT,EAAoB;AACrB,QAAA,EAAE,CAAC,cAAH,CACI,OADJ,EAEI,QAFJ,EAGI,wBAAc,QAAd,CAHJ,EAII,IAAI,CAAC,OAJT,EAKI,IAAI,CAAC,OALT,EAMI,KANJ,EAOI,MAPJ,EAQI,CARJ;AASH,OAVI,MAWA;AACD,QAAA,EAAE,CAAC,UAAH,CACI,OADJ,EAEI,QAFJ,EAGI,wBAAc,UAAd,CAHJ,EAII,KAJJ,EAKI,MALJ,EAMI,CANJ,EAOI,wBAAc,QAAd,CAPJ,EAQI,4BAAkB,SAAlB,CARJ,EASI,IAAI,IAAI,IATZ;AAUH;AACJ,KA1CO;;AAkDA,SAAA,SAAA,GAAY,CAAC,KAAD,EAAiB,MAAjB,KAAoD;AACpE,YAAM,MAAM,GAAG,KAAK,CAAC,MAArB;;AACA,WAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,MAAM,CAAC,MAA7B,EAAqC,CAAC,GAAG,GAAzC,EAA8C,CAAC,EAA/C,EAAmD;AAC/C,cAAM,KAAK,GAAG,MAAM,CAAC,CAAD,CAApB;AACA,YAAI,CAAC,KAAL,EAAY;AACZ,aAAK,QAAL,CAAc,KAAd,EAAqB,MAArB,EAA6B,CAA7B;AACH;AACJ,KAPO;;AAcA,SAAA,WAAA,GAAe,KAAD,IAA0B;AAC5C,YAAM,EAAE,GAAG,KAAK,EAAhB;AAEA,MAAA,EAAE,CAAC,WAAH,CAAe,EAAE,CAAC,mBAAlB,EAAuC,KAAK,CAAC,KAA7C;AAEA,MAAA,EAAE,CAAC,WAAH,CAAe,EAAE,CAAC,8BAAlB,EAAkD,KAAK,CAAC,gBAAxD;AAEA,MAAA,EAAE,CAAC,WAAH,CAAe,EAAE,CAAC,kCAAlB,EAAsD,sBAAY,KAAK,CAAC,UAAlB,CAAtD;AAEA,MAAA,EAAE,CAAC,WAAH,CAAe,EAAE,CAAC,gBAAlB,EAAoC,KAAK,CAAC,eAA1C;AACH,KAVO;;AAiBA,SAAA,UAAA,GAAa,CAAC,IAAD,EAAiB,MAAjB,KAAoD;AACrE,YAAM,MAAM,GAAG,KAAK,MAApB;AAAA,YAA4B,EAAE,GAAG,KAAK,EAAtC;AAAA,YAA0C,OAAO,GAAG,4BAAkB,MAAlB,CAApD;AACA,UAAI,IAAI,CAAC,SAAT,EAAoB,EAAE,CAAC,aAAH,CAAiB,OAAjB,EAA0B,EAAE,CAAC,kBAA7B,EAAiD,4BAAkB,IAAI,CAAC,SAAvB,CAAjD;AACpB,UAAI,IAAI,CAAC,SAAT,EAAoB,EAAE,CAAC,aAAH,CAAiB,OAAjB,EAA0B,EAAE,CAAC,kBAA7B,EAAiD,4BAAkB,IAAI,CAAC,SAAvB,CAAjD;AACpB,UAAI,IAAI,CAAC,KAAT,EAAgB,EAAE,CAAC,aAAH,CAAiB,OAAjB,EAA0B,EAAE,CAAC,cAA7B,EAA6C,6BAAmB,IAAI,CAAC,KAAxB,CAA7C;AAChB,UAAI,IAAI,CAAC,KAAT,EAAgB,EAAE,CAAC,aAAH,CAAiB,OAAjB,EAA0B,EAAE,CAAC,cAA7B,EAA6C,6BAAmB,IAAI,CAAC,KAAxB,CAA7C;AAChB,UAAI,IAAI,CAAC,WAAL,IAAoB,MAAM,CAAC,GAAP,CAAW,gCAAX,CAAxB,EACI,EAAE,CAAC,aAAH,CAAiB,OAAjB,EAA0B,6BAA1B,EAAyD,IAAI,CAAC,WAA9D;;AACJ,UAAI,IAAI,CAAC,UAAT,EAAqB;AACjB,QAAA,EAAE,CAAC,IAAH,CAAQ,EAAE,CAAC,oBAAX,EAAiC,IAAI,CAAC,UAAtC;AACA,QAAA,EAAE,CAAC,cAAH,CAAkB,OAAlB;AACH;AACJ,KAZO;;AAkBA,SAAA,UAAA,GACJ,IADiB,IAUP;AACV,YAAM,OAAO,GAAa;AACtB,QAAA,SAAS,EAAE,SADW;AAEtB,QAAA,SAAS,EAAE,SAFW;AAGtB,QAAA,KAAK,EAAE,eAHe;AAItB,QAAA,KAAK,EAAE,eAJe;AAKtB,QAAA,WAAW,EAAE,CALS;AAMtB,QAAA,UAAU,EAAE,KANU;AAOtB,QAAA,UAAU,EAAE,sBAAY,WAAZ;AAPU,OAA1B;;AAUA,UAAI,IAAI,CAAC,GAAT,EAAc;AACV,QAAA,OAAO,CAAC,SAAR,GAAoB,IAAI,CAAC,GAAzB;AAEA,YAAI,YAAY,CAAC,cAAb,CAA4B,OAA5B,CAAoC,4BAAkB,OAAO,CAAC,SAA1B,CAApC,KAA6E,CAAjF,EACI,OAAO,CAAC,UAAR,GAAqB,IAArB;AACP;;AAED,UAAI,IAAI,CAAC,GAAT,EAAc;AACV,QAAA,OAAO,CAAC,SAAR,GAAoB,IAAI,CAAC,GAAzB;AACH;;AAED,UAAI,IAAI,CAAC,KAAT,EAAgB;AACZ,QAAA,OAAO,CAAC,KAAR,GAAgB,IAAI,CAAC,KAArB;AACH;;AAED,UAAI,IAAI,CAAC,KAAT,EAAgB;AACZ,QAAA,OAAO,CAAC,KAAR,GAAgB,IAAI,CAAC,KAArB;AACH;;AAED,UAAI,IAAI,CAAC,WAAT,EAAsB;AAClB,cAAM,GAAG,GAAG,IAAI,CAAC,WAAjB;AACA,0BAAM,GAAG,IAAI,CAAP,IAAY,GAAG,IAAI,KAAK,MAAL,CAAY,cAArC,EAAqD,oCAAoC,CAAC,KAAK,KAAK,MAAL,CAAY,cAAc,GAAzH;AACA,QAAA,OAAO,CAAC,WAAR,GAAsB,GAAtB;AACH;;AAED,UAAI,IAAI,CAAC,MAAL,IAAe,CAAC,IAAI,CAAC,GAAzB,EACI,OAAO,CAAC,SAAR,GAAoB,wBAApB;AAEJ,aAAO,OAAP;AACH,KAlDO;;AA6DA,SAAA,SAAA,GAAY,CAAC,MAAD,EAAkB,GAAlB,EAAyC,KAAzC,EAA0D,MAA1D,EAA4E,MAA5E,KAAuG;AACvH,YAAM,SAAS,GAAG,MAAM,CAAC,MAAP,CAAc,CAAd,IAAmB,4BAAc,UAAd,EAArC;;AACA,kCAAQ,SAAR,EAAmB,MAAnB;AACA,wBAAM,CAAC,SAAS,CAAC,UAAX,IAAyB,GAAG,YAAY,UAA9C,EAA0D,2CAA1D;AACA,MAAA,SAAS,CAAC,SAAV,GAAsB,MAAM,CAAC,SAAP,GAAmB,sCAAgB,GAAhB,CAAzC;AACA,YAAM,CAAC,GAAG,KAAK,CAAC,CAAD,CAAf;AAAA,YAAoB,CAAC,GAAG,KAAK,CAAC,CAAD,CAA7B;AAAA,YAAkC,CAAC,GAAG,KAAK,CAAC,CAAD,CAA3C;AACA,MAAA,SAAS,CAAC,KAAV,GAAkB,CAAlB;AACA,MAAA,SAAS,CAAC,MAAV,GAAmB,CAAnB;AACA,MAAA,SAAS,CAAC,QAAV,GAAqB,CAArB;AACA,MAAA,SAAS,CAAC,QAAV,GAAqB,SAAS,CAAC,UAAV,GAAuB,iBAAiB,CAAC,CAAD,CAA7D;AACA,MAAA,SAAS,CAAC,SAAV,GAAsB,IAAtB;;AACA,2BAAU,aAAV,CAAwB,SAAxB,EAAmC,GAAnC,EAAwC,MAAM,CAAC,CAAD,CAA9C,EAAmD,MAAM,CAAC,CAAD,CAAzD,EAA8D,MAAM,CAAC,CAAD,CAApE,EAAyE,MAAzE;;AACA,kCAAQ,MAAR,EAAgB,MAAM,CAAC,MAAP,CAAc,CAAd,CAAhB;AACA,aAAO,MAAP;AACH,KAdO;;AA2BD,SAAA,eAAA,GAAkB,CACrB,IADqB,EAErB,CAFqB,EAGrB,CAHqB,EAIrB,CAJqB,EAKrB,IAAA,GASI,EAdiB,KAeX;AACV,YAAM,EAAE,GAAG,KAAK,EAAhB;AACA,YAAM,MAAM,GAAW,IAAI,CAAC,MAAL,IAAe,CAAtC;AACA,YAAM,MAAM,GAAa,IAAI,CAAC,MAAL,IAAe,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAxC;AAEA,YAAM,QAAQ,GAAG,IAAI,kBAAJ,CAAa,EAAb,EAAiB,KAAK,MAAtB,EAA8B,YAA9B,EAA4C,KAAK,KAAjD,CAAjB;AAEA,YAAM,OAAO,GAAG,KAAK,UAAL,CAAgB,IAAhB,CAAhB;AACA,MAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;;AAEA,YAAM,MAAM,GAAG,wBAAY,WAAZ,EAAf;;AACA,YAAM,SAAS,GAAG,MAAM,CAAC,MAAP,CAAc,CAAd,IAAmB,4BAAc,UAAd,EAArC;;AACA,MAAA,MAAM,CAAC,OAAP,GAAiB,CAAjB;AACA,MAAA,SAAS,CAAC,KAAV,GAAkB,MAAM,CAAC,KAAP,GAAe,CAAjC;AACA,MAAA,SAAS,CAAC,MAAV,GAAmB,MAAM,CAAC,MAAP,GAAgB,CAAnC;AACA,MAAA,SAAS,CAAC,QAAV,GAAqB,MAAM,CAAC,QAAP,GAAkB,CAAC,IAAI,CAA5C;;AAEA,UAAI,MAAM,CAAC,CAAD,CAAN,KAAc,CAAd,IAAmB,MAAM,CAAC,CAAD,CAAN,KAAc,CAAjC,IAAsC,MAAM,CAAC,CAAD,CAAN,KAAc,CAAxD,EAA2D;AACvD,QAAA,MAAM,CAAC,CAAD,CAAN,GAAY,SAAS,CAAC,QAAtB;AACA,QAAA,MAAM,CAAC,CAAD,CAAN,GAAY,SAAS,CAAC,QAAV,GAAqB,SAAS,CAAC,KAA3C;AACA,QAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAZ;AACH;;AACD,wBAAM,SAAS,CAAC,QAAV,IAAsB,CAAtB,IAA2B,SAAS,CAAC,QAAV,IAAsB,CAAvD,EAA0D,kCAA1D;AACA,UAAI,QAAQ,CAAC,OAAT,CAAiB,UAArB,EACI,MAAM,CAAC,OAAP,GAAiB,CAAC,MAAM,CAAC,KAAP,IAAgB,CAAjB,IAAsB,CAAvC;AAEJ,MAAA,QAAQ,CAAC,OAAT,GAAmB,MAAnB;AAEA,MAAA,QAAQ,CAAC,MAAT,GAAkB,KAAK,SAAL,CAAe,MAAf,EAAuB,IAAvB,EAA6B,CAAC,SAAS,CAAC,KAAX,EAAkB,SAAS,CAAC,MAA5B,EAAoC,SAAS,CAAC,QAA9C,CAA7B,EAAsF,MAAtF,EAA8F,MAA9F,CAAlB;AAEA,8CAAqB,OAArB,EAA8B,MAA9B,EAAsC,KAAK,MAA3C,EAAmD,KAAK,MAAxD;AACA,UAAI,OAAO,CAAC,UAAZ,EACI,QAAQ,CAAC,MAAT,CAAgB,OAAhB,GAA0B,CAAC,MAAM,CAAC,KAAP,IAAgB,CAAjB,IAAsB,CAAhD;AAEJ,MAAA,QAAQ,CAAC,QAAT;AACA,WAAK,SAAL,CAAe,QAAQ,CAAC,MAAxB,EAAgC,YAAhC;AACA,WAAK,UAAL,CAAgB,QAAQ,CAAC,OAAzB,EAAkC,YAAlC;AACA,MAAA,QAAQ,CAAC,WAAT;;AACA,8BAAY,UAAZ,CAAuB,MAAvB;;AACA,aAAO,QAAP;AACH,KAvDM;;AA4DA,SAAA,iBAAA,GAAoB,CACvB,KADuB,EASvB,CATuB,EAUvB,CAVuB,EAWvB,CAXuB,EAYvB,IAAA,GASI,EArBmB,KAsBvB;AACA,YAAM,MAAM,GAAU,IAAI,CAAC,MAAL,IAAa,CAAnC;AACA,YAAM,MAAM,GAAY,IAAI,CAAC,MAAL,IAAc,CAAC,CAAD,EAAG,CAAH,EAAK,CAAL,CAAtC;AACA,YAAM,QAAQ,GAAG,IAAI,kBAAJ,CAAa,KAAK,EAAlB,EAAsB,KAAK,MAA3B,EAAmC,kBAAnC,EAAuD,KAAK,KAA5D,CAAjB;AAEA,YAAM,OAAO,GAAG,KAAK,UAAL,CAAgB,IAAhB,CAAhB;AACA,MAAA,QAAQ,CAAC,OAAT,GAAmB,OAAnB;AACA,YAAM,MAAM,GAAa,EAAzB;AAEA,MAAA,MAAM,CAAC,IAAP,CAAY,KAAZ,EAAmB,OAAnB,CAA4B,GAAD,IAAc;AACrC,cAAM,IAAI,GAAG,KAAK,CAAC,GAAD,CAAlB;;AACA,cAAM,MAAM,GAAG,wBAAY,WAAZ,EAAf;;AACA,cAAM,SAAS,GAAG,MAAM,CAAC,MAAP,CAAc,CAAd,IAAkB,4BAAc,UAAd,EAApC;;AACA,QAAA,MAAM,CAAC,OAAP,GAAiB,CAAjB;AACA,QAAA,SAAS,CAAC,KAAV,GAAkB,MAAM,CAAC,KAAP,GAAe,CAAjC;AACA,QAAA,SAAS,CAAC,MAAV,GAAmB,MAAM,CAAC,MAAP,GAAgB,CAAnC;AACA,QAAA,SAAS,CAAC,QAAV,GAAqB,MAAM,CAAC,QAAP,GAAkB,CAAC,IAAI,CAA5C;;AAEA,YAAI,MAAM,CAAC,CAAD,CAAN,KAAc,CAAd,IAAmB,MAAM,CAAC,CAAD,CAAN,KAAc,CAAjC,IAAsC,MAAM,CAAC,CAAD,CAAN,KAAc,CAAxD,EAA2D;AACvD,UAAA,MAAM,CAAC,CAAD,CAAN,GAAY,SAAS,CAAC,QAAtB;AACA,UAAA,MAAM,CAAC,CAAD,CAAN,GAAY,SAAS,CAAC,QAAV,GAAqB,SAAS,CAAC,KAA3C;AACA,UAAA,MAAM,CAAC,CAAD,CAAN,GAAY,CAAZ;AACH;;AACD,0BAAM,SAAS,CAAC,QAAV,IAAsB,CAAtB,IAA2B,SAAS,CAAC,QAAV,IAAsB,CAAvD,EAA0D,kCAA1D;AACA,aAAK,SAAL,CAAe,MAAf,EAAuB,IAAvB,EAA6B,CAAC,SAAS,CAAC,KAAX,EAAkB,SAAS,CAAC,MAA5B,EAAoC,SAAS,CAAC,QAA9C,CAA7B,EAAsF,MAAtF,EAA8F,MAA9F;AACA,QAAA,MAAM,CAAC,IAAP,CAAY,MAAZ;AACH,OAjBD;AAkBA,MAAA,QAAQ,CAAC,MAAT,GAAkB,MAAM,CAAC,CAAD,CAAxB;AACA,UAAG,OAAO,CAAC,UAAX,EACI,QAAQ,CAAC,MAAT,CAAgB,OAAhB,GAA0B,CAAC,MAAM,CAAC,CAAD,CAAN,CAAU,KAAV,IAAiB,CAAlB,IAAqB,CAA/C,CADJ,KAGI,QAAQ,CAAC,MAAT,CAAgB,OAAhB,GAA0B,MAAM,CAAC,CAAD,CAAN,CAAU,OAApC;AACJ,MAAA,QAAQ,CAAC,OAAT,GAAmB,MAAM,CAAC,CAAD,CAAzB;AAEA,0CAAiB,OAAjB,EAA0B,QAAQ,CAAC,MAAnC,EAA2C,MAA3C,EAAmD,KAAK,MAAxD;AACA,MAAA,QAAQ,CAAC,QAAT;AACA,MAAA,MAAM,CAAC,OAAP,CAAe,CAAC,MAAD,EAAiB,CAAjB,KAA4B;AACvC,aAAK,SAAL,CAAe,MAAf,EAAuB,oBAAoB,CAAC,CAAD,CAA3C;AACH,OAFD;AAGA,WAAK,UAAL,CAAgB,OAAhB,EAAyB,kBAAzB;AACA,MAAA,QAAQ,CAAC,WAAT;AACA,MAAA,MAAM,CAAC,OAAP,CAAgB,MAAD,IAAkB;AAC7B,gCAAY,UAAZ,CAAuB,MAAvB;AACH,OAFD;AAIA,aAAO,QAAP;AACH,KApEM;;AAnQH,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,MAAL,GAAc,MAAd;AACA,SAAK,KAAL,GAAa,KAAb;AACH;;AAhDa;;;AAIP,YAAA,CAAA,WAAA,GAAqC,qBAArC;AAKA,YAAA,CAAA,cAAA,GAA2B,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CAA3B;;;;;;;;;ACvCX,MAAM,iBAAiB,GAAG,MAAmB;AACzC,QAAM,KAAK,GAAiB;AACxB,IAAA,OAAO,EAAE,GADe;AAExB,IAAA,OAAO,EAAE,GAFe;AAGxB,IAAA,KAAK,EAAE;AAHiB,GAA5B;AAKA,SAAO,KAAP;AACH,CAPD;;;;;;;;;;;ACgCA,MAAM,WAAW,GAAG,MAAa;AAC7B,QAAM,KAAK,GAAW;AAClB,IAAA,QAAQ,EAAE,CADQ;AAElB,IAAA,WAAW,EAAE,CAFK;AAGlB,IAAA,aAAa,EAAE,CAHG;AAIlB,IAAA,gBAAgB,EAAE,CAJA;AAKlB,IAAA,WAAW,EAAE,CALK;AAMlB,IAAA,YAAY,EAAE,CANI;AAOlB,IAAA,SAAS,EAAE,CAPO;AAQlB,IAAA,iBAAiB,EAAE,CARD;AASlB,IAAA,eAAe,EAAE;AATC,GAAtB;AAWA,SAAO,KAAP;AACH,CAbD;;;;;;;;;;;ACjBA,MAAM,SAAN,CAAe;AAgBX,EAAA,WAAA,CAAY,EAAZ,EAAuC,GAAG,QAA1C,EAAgE;AAoBhE,SAAA,GAAA,GAAO,OAAD,IAAqD;AACvD,aAAO,KAAK,UAAL,CAAgB,OAAhB,CAAP;AACH,KAFD;;AASA,SAAA,UAAA,GAAc,OAAD,IAAqD;AAC9D,YAAM,EAAE,GAAG,KAAK,EAAhB;AAAA,YAAoB,UAAU,GAAG,KAAK,UAAtC;AACA,YAAM,GAAG,GAAoB,UAAU,CAAC,OAAD,CAAV,GAAsB,UAAU,CAAC,OAAD,CAAV,IAAuB,EAAE,CAAC,YAAH,CAAgB,OAAhB,CAA1E;AACA,aAAO,GAAP;AACH,KAJD;;AA5BI,SAAK,EAAL,GAAU,EAAV;AACA,SAAK,UAAL,GAAkB,EAAlB;;AACA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,QAAQ,CAAC,MAA/B,EAAuC,CAAC,GAAG,GAA3C,EAAgD,CAAC,EAAjD,EAAqD;AACjD,YAAM,OAAO,GAAG,QAAQ,CAAC,CAAD,CAAxB;AACA,YAAM,GAAG,GAAG,EAAE,CAAC,YAAH,CAAgB,OAAhB,CAAZ;;AACA,UAAI,CAAC,CAAC,GAAN,EAAW;AACP,aAAK,UAAL,CAAgB,OAAhB,IAA2B,GAA3B;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,oBAAoB,OAAO,kBAAvC;AACH,OAHD,MAGO;AACH,QAAA,OAAO,CAAC,GAAR,CAAY,oBAAoB,OAAO,YAAvC;AACH;AACJ;AACJ;;AA7BU;;;;;;;;;;;ACtCf;;AAGA;;AACA;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAmCA,MAAM,MAAN,CAAY;AAuFR,EAAA,WAAA,CAAY,IAAZ,EAA4B;AA0CrB,SAAA,OAAA,GAAuD,IAA7C,IAA2F;AACxG,aAAO,KAAK,YAAL,CAAkB,OAAlB,CAA0B,IAA1B,CAAP;AACH,KAFM;;AAUA,SAAA,GAAA,GAAM,CACT,IADS,EAET,IAAA,GAMI,EARK,KASW;AACpB,aAAO,KAAK,cAAL,CAAoB,2BAApB,CAAgD,IAAhD,EAAsD,IAAtD,CAAP;AACH,KAXM;;AAwBA,SAAA,SAAA,GAAY,CACf,IADe,EAEf,CAFe,EAGf,CAHe,EAIf,CAJe,EAKf,IAAA,GASI,EAdW,KAeL;AACV,aAAO,KAAK,YAAL,CAAkB,eAAlB,CAAkC,IAAlC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,IAAjD,CAAP;AACH,KAjBM;;AA0BA,SAAA,cAAA,GAAiB,CACpB,CADoB,EAEpB,CAFoB,EAGpB,CAHoB,EAIpB,IAAA,GASI,EAbgB,KAcV;AACV,YAAM,SAAS,GAAG,IAAI,UAAJ,CAAe,CAAC,GAAG,CAAJ,GAAQ,CAAvB,CAAlB;AACA,aAAO,KAAK,SAAL,CAAe,SAAf,EAA0B,CAA1B,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,IAAnC,CAAP;AACH,KAjBM;;AA4BA,SAAA,WAAA,GAAc,CAAO,KAAP,EAQrB,CARqB,EASrB,CATqB,EAUrB,CAVqB,EAWrB,IAAA,GASI,EApBiB,KAoBF;AACf,aAAO,KAAK,YAAL,CAAkB,iBAAlB,CAAoC,KAApC,EAA2C,CAA3C,EAA8C,CAA9C,EAAiD,CAAjD,EAAoD,IAApD,CAAP;AACH,KAtBM;;AA6BA,SAAA,YAAA,GACH,IADkB,IAMH;AACf,aAAO,KAAK,iBAAL,CAAuB,kBAAvB,CAA0C,IAA1C,CAAP;AACH,KARM;;AAgBA,SAAA,MAAA,GAAS,CACZ,IADY,EAEZ,IAAA,GAMI,EARQ,KASH;AACT,aAAO,KAAK,WAAL,CAAiB,YAAjB,CAA8B;AACjC,QAAA,IADiC;AAEjC,QAAA,KAAK,EAAE,IAAI,CAAC,KAFqB;AAGjC,QAAA,SAAS,EAAE,IAAI,CAAC,SAHiB;AAIjC,QAAA,MAAM,EAAE,IAAI,CAAC,MAJoB;AAKjC,QAAA,SAAS,EAAE,IAAI,CAAC,SALiB;AAMjC,QAAA,UAAU,EAAE,IAAI,CAAC;AANgB,OAA9B,CAAP;AAQH,KAlBM;;AAyBA,SAAA,WAAA,GACH,IADiB,IAOH;AACd,aAAO,KAAK,gBAAL,CAAsB,iBAAtB,CAAwC,IAAxC,CAAP;AACH,KATM;;AAeA,SAAA,KAAA,GACH,IADW,IAMX;AACA,YAAM,EAAE,GAAG,KAAK,EAAhB;AACA,YAAM;AAAE,QAAA,KAAF;AAAS,QAAA,KAAT;AAAgB,QAAA;AAAhB,UAA4B,IAAlC;AACA,wBAAM,KAAK,CAAC,MAAN,KAAiB,CAAvB,EAA0B,sCAA1B;AAEA,MAAA,EAAE,CAAC,UAAH,CAAc,KAAK,CAAC,CAAD,CAAnB,EAAwB,KAAK,CAAC,CAAD,CAA7B,EAAkC,KAAK,CAAC,CAAD,CAAvC,EAA4C,KAAK,CAAC,CAAD,CAAjD;AACA,UAAI,GAAG,GAAG,EAAE,CAAC,gBAAb;AACA,UAAI,KAAJ,EAAW,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,gBAAf;AACX,UAAI,OAAJ,EAAa,GAAG,GAAG,GAAG,GAAG,EAAE,CAAC,kBAAf;AAEb,MAAA,EAAE,CAAC,KAAH,CAAS,GAAT;AACH,KAjBM;;AArNH,SAAK,KAAL,GAAa,+BAAb;AACA,SAAK,WAAL,GAAmB,2CAAnB;AAEA,SAAK,SAAL,GAAiB,oCAAe,IAAf,CAAjB;AACA,SAAK,MAAL,GAAc,IAAI,oBAAJ,CAAc,KAAK,EAAnB,EAAuB,GAAG,KAAK,SAAL,CAAe,UAAzC,CAAd;AACA,SAAK,MAAL,GAAc,IAAI,YAAJ,CAAU,KAAK,EAAf,EAAmB,KAAK,MAAxB,CAAd;AAEA,SAAK,WAAL,GAAmB,IAAI,wBAAJ,EAAnB;AACA,SAAK,WAAL,GAAmB,IAAI,wBAAJ,CAAgB,KAAK,EAArB,EAAyB,KAAK,KAA9B,CAAnB;AACA,SAAK,YAAL,GAAoB,IAAI,0BAAJ,CAAiB,KAAK,EAAtB,EAA0B,KAAK,MAA/B,EAAuC,KAAK,MAA5C,EAAoD,KAAK,KAAzD,CAApB;AACA,SAAK,YAAL,GAAoB,IAAI,2BAAJ,CAAkB,KAAK,EAAvB,EAA2B,KAAK,MAAhC,EAAwC,KAAK,WAA7C,EAA0D,KAAK,KAA/D,CAApB;AACA,SAAK,WAAL,GAAmB,IAAI,wBAAJ,CAAgB,KAAK,EAArB,EAAyB,KAAK,WAA9B,EAA2C,KAAK,KAAhD,CAAnB;AACA,SAAK,YAAL,GAAoB,IAAI,0BAAJ,CAAiB,KAAK,EAAtB,EAA0B,KAAK,WAA/B,EAA4C,KAAK,WAAjD,CAApB;AACA,SAAK,cAAL,GAAsB,IAAI,8BAAJ,CAAmB,KAAK,EAAxB,EAA4B,KAAK,MAAjC,EAAyC,KAAK,MAA9C,EAAsD,KAAK,WAA3D,EAAwE,KAAK,YAA7E,EAA2F,KAAK,YAAhG,EAA8G,KAAK,KAAnH,CAAtB;AACA,SAAK,iBAAL,GAAyB,IAAI,oCAAJ,CAAsB,KAAK,EAA3B,EAA+B,KAAK,MAApC,EAA4C,KAAK,MAAjD,EAAyD,KAAK,KAA9D,CAAzB;AACA,SAAK,gBAAL,GAAwB,IAAI,kCAAJ,CAAqB,KAAK,EAA1B,EAA8B,KAAK,YAAnC,EAAiD,KAAK,iBAAtD,EAAyE,KAAK,MAA9E,EAAsF,KAAK,MAA3F,EAAmG,KAAK,KAAxG,CAAxB;AAEA,SAAK,YAAL,GAAoB,IAAI,0BAAJ,CAAiB;AACjC,MAAA,EAAE,EAAE,KAAK,EADwB;AAEjC,MAAA,KAAK,EAAE,KAAK,KAFqB;AAGjC,MAAA,WAAW,EAAE,KAAK,WAHe;AAIjC,MAAA,MAAM,EAAE,KAAK,MAJoB;AAKjC,MAAA,MAAM,EAAE,KAAK,MALoB;AAMjC,MAAA,WAAW,EAAE,KAAK,WANe;AAOjC,MAAA,YAAY,EAAE,KAAK,YAPc;AAQjC,MAAA,YAAY,EAAE,KAAK,YARc;AASjC,MAAA,cAAc,EAAE,KAAK,cATY;AAUjC,MAAA,WAAW,EAAE,KAAK,WAVe;AAWjC,MAAA,WAAW,EAAE,KAAK,WAXe;AAYjC,MAAA,YAAY,EAAE,KAAK,YAZc;AAajC,MAAA,iBAAiB,EAAE,KAAK,iBAbS;AAcjC,MAAA,gBAAgB,EAAE,KAAK;AAdU,KAAjB,CAApB;AAgBH;;AA3CD,MAAY,EAAZ,GAAc;AACV,WAAO,KAAK,SAAL,CAAe,EAAtB;AACH;;AAjFO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDZ;;AAGA;;AAGA;;AACA;;AACA;;AACA;;AAGA;;AAGA;;AACA;;;;;;;;;ACjBA,IAAM,UAAU,GAAG,SAAb,UAAa,CAAC,IAAD,EAAiB;AAChC,SAAO,MAAM,CAAC,UAAU,IAAX,CAAN,IAA0B,MAAM,CAAC,QAAQ,IAAT,CAAhC,IAAkD,MAAM,CAAC,OAAO,IAAR,CAA/D;AACH,CAFD;;AAIA,IAAM,GAAG,GAAG,MAAM,CAAC,uBAAD,CAAN,IAAmC,UAAU,CAAC,uBAAD,CAA7C,IAA0E,UAAU,EAAV,EAAsB;AAAI,SAAO,UAAU,CAAC,EAAD,EAAK,EAAL,CAAjB;AAA2B,CAA3I;;;;AAEA,IAAM,IAAI,GAAG,MAAM,CAAC,sBAAD,CAAN,IAAkC,UAAU,CAAC,sBAAD,CAA5C,IAAwE,UAAU,CAAC,6BAAD,CAAlF,IAAqH,UAAU,EAAV,EAAoB;AAAI,EAAA,MAAM,CAAC,YAAP,CAAoB,EAApB;AAA0B,CAApL;;;;;;;;;;;ACCA,IAAM,KAAK,GAAG,SAAR,KAAQ,GAA8B;AACxC,MAAM,CAAC,mDAAP;;AACA,OAAK,IAAI,CAAC,GAAG,CAAR,EAAW,GAAG,GAAG,UAAK,MAA3B,EAAmC,CAAC,GAAG,GAAvC,EAA4C,CAAC,EAA7C,EAAiD;AAC7C,QAAM,MAAM,GAAQ,CAAR,4BAAQ,CAAR,yBAAQ,CAAR,CAAZ;;AACA,SAAK,IAAM,GAAX,IAAkB,MAAlB;AACI,MAAA,CAAC,CAAC,GAAD,CAAD,GAAS,MAAM,CAAC,GAAD,CAAf;AADJ;AAEH;;AACD,SAAO,CAAP;AACH,CARD;;;;;;;;;;;ACPA;;;;;;;;;;AAGA,IAAM,UAAU,GAA0B,IAAI,GAAJ,EAA1C;;AAKA,IAAM,MAAM,GAAG;AAIX,EAAA,MAAM,EAAE;AACJ,IAAA,IAAI,EAAE,cAAC,CAAD,EAAsB;AACxB,aAAO,CAAP;AACH;AAHG,GAJG;AAaX,EAAA,SAAS,EAAE;AACP,IAAA,EAAE,EAAE,YAAC,CAAD,EAAsB;AACtB,aAAO,CAAC,GAAG,CAAX;AACH,KAHM;AAIP,IAAA,GAAG,EAAE,aAAC,CAAD,EAAsB;AACvB,aAAO,CAAC,IAAI,IAAI,CAAR,CAAR;AACH,KANM;AAOP,IAAA,KAAK,EAAE,eAAC,CAAD,EAAsB;AACzB,UAAI,CAAC,CAAC,IAAI,CAAN,IAAW,CAAf,EAAkB,OAAO,MAAM,CAAN,GAAU,CAAjB;AAClB,aAAO,CAAC,GAAD,IAAQ,EAAE,CAAF,IAAO,CAAC,GAAG,CAAX,IAAgB,CAAxB,CAAP;AACH;AAVM;AAbA,CAAf;;;IAoCM;;;AAgDF,mBAAA;AAAA;;AAAA;;AASO,SAAA,KAAA,GAAQ,YAAK;AAChB,UAAI,KAAI,CAAC,SAAT,EAAoB,OAAO,IAAP;AACpB,MAAA,KAAK,CAAC,GAAN,CAAU,KAAV;AACA,MAAA,KAAI,CAAC,SAAL,GAAiB,IAAjB;AACA,MAAA,KAAI,CAAC,oBAAL,GAA4B,KAA5B;;AACA,WAAK,IAAM,QAAX,IAAuB,KAAI,CAAC,SAA5B,EAAuC;AAEnC,YAAI,KAAI,CAAC,SAAL,CAAe,QAAf,aAAoC,KAAxC,EAA+C;AAC3C,cAAI,KAAI,CAAC,SAAL,CAAe,QAAf,EAAyB,MAAzB,KAAoC,CAAxC,EAA2C;AAE3C,UAAA,KAAI,CAAC,SAAL,CAAe,QAAf,IAA2B,CAAC,KAAI,CAAC,SAAL,CAAe,QAAf,CAAD,EAA2B,MAA3B,CAAkC,KAAI,CAAC,SAAL,CAAe,QAAf,CAAlC,CAA3B;AACH;;AAED,YAAI,KAAI,CAAC,SAAL,CAAe,QAAf,MAA6B,SAAjC,EAA4C;AAE5C,QAAA,KAAI,CAAC,WAAL,CAAiB,QAAjB,IAA6B,KAAI,CAAC,SAAL,CAAe,QAAf,CAA7B;AAEA,YAAK,KAAI,CAAC,WAAL,CAAiB,QAAjB,aAAsC,KAAvC,KAAkD,KAAtD,EAA6D,KAAI,CAAC,WAAL,CAAiB,QAAjB,KAA8B,GAA9B;AAChE;;AAED,MAAA,UAAU,CAAC,GAAX,CAAe,KAAI,CAAC,EAApB,EAAwB,UAAC,UAAD,EAAuB;AAAG,QAAA,KAAI,CAAC,MAAL,CAAY,UAAZ;AAA0B,OAA5E;AACH,KArBM;;AAuBC,SAAA,MAAA,GAAS,UAAC,UAAD,EAAuB;AACpC,MAAA,KAAI,CAAC,SAAL,GAAiB,KAAI,CAAC,SAAL,IAAkB,UAAnC;AACA,UAAI,UAAU,GAAG,KAAI,CAAC,SAAtB,EAAiC,OAAO,IAAP;;AAEjC,UAAI,KAAI,CAAC,oBAAL,KAA8B,KAAlC,EAAyC;AACrC,YAAI,KAAI,CAAC,eAAL,KAAyB,IAAzB,IAAiC,KAAI,CAAC,eAAL,KAAyB,SAA9D,EACI,KAAI,CAAC,eAAL,CAAqB,IAArB,CAA0B,KAA1B,EAAgC,KAAI,CAAC,SAArC;AACJ,QAAA,KAAI,CAAC,oBAAL,GAA4B,IAA5B;AACH;;AAED,UAAM,SAAS,GAAG,CAAC,UAAU,GAAG,KAAI,CAAC,SAAnB,IAAgC,KAAI,CAAC,IAAvD;AACA,UAAM,OAAO,GAAG,SAAS,GAAG,CAAZ,GAAgB,CAAhB,GAAoB,SAApC;;AACA,UAAM,KAAK,GAAG,KAAI,CAAC,cAAL,CAAoB,OAApB,CAAd;;AAEA,WAAK,IAAM,QAAX,IAAuB,KAAI,CAAC,SAA5B,EAAuC;AAEnC,YAAI,KAAI,CAAC,WAAL,CAAiB,QAAjB,MAA+B,SAAnC,EAA8C;AAC9C,YAAM,KAAK,GAAG,KAAI,CAAC,WAAL,CAAiB,QAAjB,KAA8B,CAA5C;AACA,YAAI,GAAG,GAAG,KAAI,CAAC,SAAL,CAAe,QAAf,CAAV;;AACA,YAAM,QAAQ,WAAW,GAAX,CAAd;;AACA,YAAI,QAAQ,KAAK,QAAjB,EAA2B;AACvB,cAAI,GAAG,CAAC,MAAJ,CAAW,CAAX,MAAkB,GAAlB,IAAyB,GAAG,CAAC,MAAJ,CAAW,CAAX,MAAkB,GAA/C,EAAoD;AAChD,YAAA,GAAG,GAAG,KAAK,GAAG,UAAU,CAAC,GAAD,CAAxB;AACH,WAFD,MAEO;AACH,YAAA,GAAG,GAAG,UAAU,CAAC,GAAD,CAAhB;AACH;AACJ,SAND,MAMO,IAAI,QAAQ,KAAK,QAAjB,EAA2B;AAC9B,UAAA,KAAI,CAAC,SAAL,CAAe,QAAf,IAA2B,KAAK,GAAG,CAAC,GAAG,GAAG,KAAP,IAAgB,KAAnD;AACH;AACJ;;AAED,UAAI,KAAI,CAAC,gBAAL,KAA0B,IAA9B,EACI,KAAI,CAAC,gBAAL,CAAsB,KAAI,CAAC,SAA3B;;AAEJ,UAAI,OAAO,KAAK,CAAhB,EAAmB;AACf,YAAI,KAAI,CAAC,kBAAL,KAA4B,IAAhC,EACI,KAAI,CAAC,kBAAL,CAAwB,IAAxB,CAA6B,KAAI,CAAC,SAAlC;AACJ,eAAO,UAAU,CAAC,KAAI,CAAC,EAAN,CAAjB;AACH,OAJD,MAMK,UAAU,CAAC,GAAX,CAAe,KAAI,CAAC,EAApB,EAAwB,UAAC,UAAD,EAAuB;AAAG,QAAA,KAAI,CAAC,MAAL,CAAY,UAAZ;AAA0B,OAA5E;AACR,KAzCO;;AA2CD,SAAA,IAAA,GAAO,UAAC,UAAD,EAA8B;AACxC,MAAA,KAAI,CAAC,WAAL,GAAmB,UAAnB;AACA,wBAAM,KAAI,CAAC,SAAX,EAAsB,UAAtB;AACA,aAAO,KAAP;AACH,KAJM;;AAMA,SAAA,EAAA,GAAK,UAAC,UAAD,EAA8B;AACtC,MAAA,KAAI,CAAC,SAAL,GAAiB,UAAjB;AACA,aAAO,KAAP;AACH,KAHM;;AAKA,SAAA,QAAA,GAAW,UAAC,EAAD,EAAwB;AACtC,MAAA,KAAI,CAAC,eAAL,GAAuB,EAAvB;AACA,aAAO,KAAP;AACH,KAHM;;AAKA,SAAA,eAAA,GAAkB,UAAC,EAAD,EAAwB;AAC7C,MAAA,KAAI,CAAC,kBAAL,GAA0B,EAA1B;AACA,aAAO,KAAP;AACH,KAHM;;AAKA,SAAA,aAAA,GAAgB,UAAC,EAAD,EAAwB;AAC3C,MAAA,KAAI,CAAC,gBAAL,GAAwB,EAAxB;AACA,aAAO,KAAP;AACH,KAHM;;AAKA,SAAA,aAAA,GAAgB,UAAC,EAAD,EAAwB;AAC3C,MAAA,KAAI,CAAC,cAAL,GAAsB,EAAtB;AACA,aAAO,KAAP;AACH,KAHM;;AAUA,SAAA,QAAA,GAAW,UAAC,IAAD,EAAsB;AACpC,MAAA,KAAI,CAAC,IAAL,GAAY,IAAZ;AACA,aAAO,KAAP;AACH,KAHM;;AA9GH,SAAK,EAAL,GAAU,KAAK,CAAC,GAAN,EAAV;AACA,SAAK,IAAL,GAAY,GAAZ;AACA,SAAK,oBAAL,GAA4B,KAA5B;AACA,SAAK,SAAL,GAAiB,KAAjB;AACA,SAAK,cAAL,GAAsB,MAAM,CAAC,SAAP,CAAiB,EAAvC;AACA,SAAK,SAAL,GAAiB,EAAjB;AACH;;;;SAnCD,eAAa;AACT,aAAO,KAAK,EAAZ;AACH;;;;;;;AAjBc,KAAA,CAAA,GAAA,GAAM,CAAN;AAKA,KAAA,CAAA,MAAA,GAAS,EAAT;;AAMA,KAAA,CAAA,GAAA,GAAM,UAAC,KAAD,EAAiB;AAClC,EAAA,KAAK,CAAC,MAAN,CAAa,KAAK,CAAC,EAAnB,IAAyB,KAAzB;AACH,CAFc;;;;AC5DnB;;AAEA;;AACA;;AACA;;AAmEA,aAAM,SAAN,CAAgB,qBAAhB,GAAwC,YAAA;AACpC,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,mBAAF,GAAwB,EAAxB;AAKA,EAAA,CAAC,CAAC,mBAAF,CAAsB,KAAtB,GAA8B,IAAI,cAAJ,CAAW;AACrC,IAAA,MAAM,EAAE,CAAC,CAAC,MAD2B;AAErC,IAAA,UAAU,EAAE,CAAC,wBAAD,EAA2B,yBAA3B;AAFyB,GAAX,CAA9B;AAMA,EAAA,CAAC,CAAC,MAAF;AACH,CAdD;;AAmBA,aAAM,SAAN,CAAgB,YAAhB,GAA+B,YAAA;AAC3B,MAAM,CAAC,GAAG,IAAV;AACA,SAAO,CAAC,CAAC,mBAAF,CAAsB,KAA7B;AACH,CAHD;;AAQA,aAAM,SAAN,CAAgB,MAAhB,GAAyB,YAAA;AACrB,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,UAAF,CAAa,CAAb;AACH,CAHD;;AAQA,aAAM,SAAN,CAAgB,WAAhB,GAA8B,UAAU,UAAV,EAA4B;AACtD,MAAM,GAAG,GAAe,EAAxB;;AACA,oBAAW,OAAX,CAAmB,UAAA,EAAE;AAAA,WAAI,GAAG,CAAC,IAAJ,CAAS,EAAT,CAAJ;AAAA,GAArB;;AACA,oBAAW,KAAX;;AACA,MAAI,EAAE,GAAG,GAAG,CAAC,KAAJ,EAAT;;AACA,SAAO,EAAP,EAAW;AACP,IAAA,EAAE,CAAC,UAAD,CAAF;AACA,IAAA,EAAE,GAAG,GAAG,CAAC,KAAJ,EAAL;AACH;AACJ,CATD;;AAcA,aAAM,SAAN,CAAgB,WAAhB,GAA8B,UAAU,UAAV,EAA4B;AACtD,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,IAAF,CAAO,SAAP,EAAkB,UAAlB;AACH,CAHD;;AAQA,aAAM,SAAN,CAAgB,UAAhB,GAA6B,UAAU,UAAV,EAA4B;AACrD,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,IAAF,CAAO,QAAP,EAAiB,UAAjB;AACH,CAHD;;AAQA,aAAM,SAAN,CAAgB,UAAhB,GAA6B,UAAU,UAAV,EAA4B;AACrD,MAAM,CAAC,GAAG,IAAV;AAEA,EAAA,CAAC,CAAC,mBAAF,CAAsB,WAAtB,GAAoC,QAAQ,UAAU,GAAG,CAAC,CAAC,mBAAF,CAAsB,cAA3C,CAApC;AAEA,EAAA,CAAC,CAAC,UAAF,CAAa,UAAb;AAEA,EAAA,CAAC,CAAC,WAAF,CAAc,UAAd;AAEA,EAAA,CAAC,CAAC,WAAF,CAAc,UAAd;AAEA,EAAA,CAAC,CAAC,mBAAF,CAAsB,OAAtB,GAAgC,SAAI,IAAJ,CAAS,MAAT,EAAiB,UAAC,UAAD;AAAA,WAAwB,CAAC,CAAC,UAAF,CAAa,UAAb,CAAxB;AAAA,GAAjB,CAAhC;AACA,EAAA,CAAC,CAAC,mBAAF,CAAsB,cAAtB,GAAuC,UAAvC;AACH,CAbD;;AAkBA,aAAM,SAAN,CAAgB,WAAhB,GAA8B,UAAU,UAAV,EAA4B;AAEtD,MAAM,CAAC,GAAG,IAAV;AAAA,MAAyB,MAAM,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAnD;AAAA,MAA2D,KAAK,GAAG,CAAC,CAAC,mBAArE;AACA,MAAM,KAAK,GAAG,CAAC,CAAC,YAAF,EAAd;AACA,EAAA,KAAK,CAAC,KAAN,CAAY;AAAE,IAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB;AAAT,GAAZ;AAEA,EAAA,CAAC,CAAC,WAAF,CAAc,UAAd;AAEA,EAAA,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,KAAK,CAAC,WAA3B;AAEA,MAAM,KAAK,GAAG,CAAC,CAAC,UAAhB;AACA,EAAA,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,OAAP,CAAe,UAAA,IAAI,EAAG;AAClB,QAAM,CAAC,GAAG,IAAI,CAAC,QAAf;AACA,IAAA,CAAC,CAAC,MAAF,CAAS,UAAT,EAAqB,MAArB;AACH,GAHD,CAAA;AAKA,EAAA,CAAC,CAAC,IAAF,CAAO,UAAP,EAAmB,KAAK,CAAC,WAAzB;AACH,CAjBD;;AAmBA,aAAM,YAAN,CAAmB,aAAM,SAAN,CAAgB,qBAAnC;;;;;;;;AC9HA,IAAM,WAAW,GAAG;AAChB,EAAA,KAAK,EAAE,OADS;AAEhB,EAAA,QAAQ,EAAE;AAFM,CAApB;;AAKA,IAAM,YAAY,GAAG,sBAArB;;AAEA,IAAM,WAAW,GAAG;AAChB,EAAA,SAAS,EAAE,WADK;AAEhB,EAAA,UAAU,EAAE,WAFI;AAGhB,EAAA,WAAW,EAAE,WAHG;AAIhB,EAAA,aAAa,EAAE;AAJC,CAApB;;AAOA,IAAM,UAAU,GAAG;AACf,EAAA,SAAS,EAAE,SADI;AAEf,EAAA,UAAU,EAAE,UAFG;AAGf,EAAA,WAAW,EAAE,UAHE;AAIf,EAAA,aAAa,EAAE;AAJA,CAAnB;;AAOA,IAAM,UAAU,GAAG;AACf,EAAA,QAAQ,EAAE,UADK;AAEf,EAAA,MAAM,EAAE,QAFO;AAGf,EAAA,MAAM,EAAE;AAHO,CAAnB;;;;;ACpEA;;AAEA;;AAEA;;AACA;;AACA;;AAoDA,aAAM,SAAN,CAAgB,sBAAhB,GAAyC,YAAA;AACrC,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,mBAAF,GAAwB;AACpB,IAAA,aAAa,EAAE,IAAI,UAAJ,EADK;AAEpB,IAAA,KAAK,EAAE,KAFa;AAGpB,IAAA,UAAU,EAAE;AAHQ,GAAxB;AAKA,oBAAM,oBAAN,EAAoB,OAApB,CAA4B,UAAC,IAAD,EAAS;AACjC,IAAA,CAAC,CAAC,EAAF,CAAK,IAAL,EAAW,CAAC,CAAC,wBAAb;AACH,GAFD;AAGH,CAVD;;AAeA,aAAM,SAAN,CAAgB,wBAAhB,GAA2C,UAAU,IAAV,EAA8B;AACrE,MAAM,CAAC,GAAG,IAAV;AAAA,MAAyB,CAAC,GAAG,IAAI,CAAC,QAAlC;AAEA,MAAI,CAAC,CAAC,QAAD,CAAD,KAAgB,CAAhB,IAAsB,CAAC,CAAC,SAAD,CAAD,IAAgB,CAAC,CAAC,SAAD,CAAD,CAAa,MAAb,GAAsB,CAAhE,EAAoE;AAEpE,MAAM,EAAE,GAAG,oCAA0B,CAA1B,EAA6B,CAAC,CAAC,MAA/B,CAAX;AACA,EAAA,CAAC,CAAC,mBAAF,CAAsB,aAAtB,GAAsC,IAAI,UAAJ,GAAW,GAAX,CAAe,EAAE,CAAC,OAAlB,EAA2B,EAAE,CAAC,OAA9B,CAAtC;AACA,MAAM,aAAa,GAAmB;AAClC,IAAA,QAAQ,EAAE,CADwB;AAElC,IAAA,eAAe,EAAE;AACb,MAAA,OAAO,EAAE,EAAE,CAAC,OADC;AAEb,MAAA,OAAO,EAAE,EAAE,CAAC;AAFC;AAFiB,GAAtC;AAQA,EAAA,CAAC,CAAC,IAAF,CAAO,mBAAW,QAAlB,EAA4B,aAA5B;AAEA,EAAA,CAAC,CAAC,EAAF,CAAK,oBAAY,CAAC,CAAC,IAAd,CAAL,EAA0B,CAAC,CAAC,uBAA5B;AACA,EAAA,CAAC,CAAC,EAAF,CAAK,mBAAW,CAAC,CAAC,IAAb,CAAL,EAAyB,CAAC,CAAC,oBAA3B;AACH,CAnBD;;AAwBA,aAAM,SAAN,CAAgB,uBAAhB,GAA0C,UAAU,IAAV,EAA8B;AACpE,MAAM,CAAC,GAAG,IAAV;AAAA,MAAyB,CAAC,GAAG,IAAI,CAAC,QAAlC;;AAEA,MAAI,CAAC,CAAC,SAAD,CAAD,IAAgB,CAAC,CAAC,SAAD,CAAD,CAAa,MAAb,GAAsB,CAA1C,EAA6C;AACzC,QAAI,CAAC,CAAC,mBAAF,CAAsB,KAA1B,EAAiC;AAC7B,MAAA,CAAC,CAAC,mBAAF,CAAsB,UAAtB,GAAmC,IAAnC;AACA,MAAA,CAAC,CAAC,oBAAF,CAAuB,IAAvB;AACH;;AACD;AACH;;AAED,MAAM,EAAE,GAAG,oCAA0B,CAA1B,EAA6B,CAAC,CAAC,MAA/B,CAAX;AACA,MAAM,eAAe,GAAG,IAAI,UAAJ,GAAW,GAAX,CAAe,EAAE,CAAC,OAAlB,EAA2B,EAAE,CAAC,OAA9B,CAAxB;AAEA,MAAM,MAAM,GAAG,eAAe,CAAC,KAAhB,GAAwB,GAAxB,CAA4B,CAAC,CAAC,mBAAF,CAAsB,aAAlD,CAAf;AACA,MAAG,CAAC,MAAM,CAAC,CAAR,IAAa,CAAC,MAAM,CAAC,CAAxB,EAA2B;AAE3B,MAAM,aAAa,GAAiB;AAChC,IAAA,QAAQ,EAAC,CADuB;AAEhC,IAAA,eAAe,EAAC;AACZ,MAAA,OAAO,EAAC,EAAE,CAAC,OADC;AAEZ,MAAA,OAAO,EAAC,EAAE,CAAC;AAFC;AAFgB,GAApC;AAOA,EAAA,CAAC,CAAC,IAAF,CAAO,mBAAW,MAAlB,EAA0B,aAA1B;AACA,EAAA,CAAC,CAAC,mBAAF,CAAsB,aAAtB,GAAsC,eAAtC;AACH,CA1BD;;AA+BA,aAAM,SAAN,CAAgB,oBAAhB,GAAuC,UAAU,IAAV,EAA8B;AACjE,MAAM,CAAC,GAAG,IAAV;AAAA,MAAyB,CAAC,GAAG,IAAI,CAAC,QAAlC;AACA,EAAA,CAAC,CAAC,uBAAF;AACA,MAAM,EAAE,GAAG,oCAA0B,CAA1B,EAA6B,CAAC,CAAC,MAA/B,CAAX;AACA,MAAM,aAAa,GAAiB;AAChC,IAAA,QAAQ,EAAC,CADuB;AAEhC,IAAA,eAAe,EAAC;AACZ,MAAA,OAAO,EAAC,EAAE,CAAC,OADC;AAEZ,MAAA,OAAO,EAAC,EAAE,CAAC;AAFC;AAFgB,GAApC;AAOA,EAAA,CAAC,CAAC,IAAF,CAAO,mBAAW,MAAlB,EAA0B,aAA1B;AACH,CAZD;;AAiBA,aAAM,SAAN,CAAgB,uBAAhB,GAA0C,YAAA;AACtC,MAAM,CAAC,GAAG,IAAV;;AACA,OAAK,IAAM,GAAX,IAAkB,mBAAlB,EAA+B;AAC3B,QAAM,aAAa,GAAG,oBAAY,GAAZ,CAAtB;AACA,QAAM,YAAY,GAAG,mBAAW,GAAX,CAArB;AACA,IAAA,CAAC,CAAC,GAAF,CAAM,aAAN,EAAqB,CAAC,CAAC,uBAAvB;AACA,IAAA,CAAC,CAAC,GAAF,CAAM,YAAN,EAAoB,CAAC,CAAC,oBAAtB;AACH;AACJ,CARD;;AAWA,aAAM,YAAN,CAAmB,aAAM,SAAN,CAAgB,sBAAnC;;;;AC3JA;;AACA;;AACA;;AACA;;AAGA,IAAM,cAAc,GAAG,cAAvB;;AAkDA,aAAM,SAAN,CAAgB,uBAAhB,GAA0C,YAAA;AACtC,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,oBAAF,GAAyB;AACrB,IAAA,aAAa,EAAE,CADM;AAErB,IAAA,cAAc,EAAE,IAFK;AAGrB,IAAA,cAAc,EAAE,CAHK;AAIrB,IAAA,MAAM,EAAE,CAJa;AAKrB,IAAA,MAAM,EAAE,KALa;AAMrB,IAAA,OAAO,EAAE,KANY;AAOrB,IAAA,eAAe,EAAE,CAPI;AAQrB,IAAA,cAAc,EAAE,KARK;AASrB,IAAA,UAAU,EAAE;AAAE,MAAA,OAAO,EAAE,CAAX;AAAc,MAAA,OAAO,EAAE;AAAvB;AATS,GAAzB;AAWA,EAAA,CAAC,CAAC,EAAF,CAAK,MAAL,EAAa,CAAC,CAAC,qBAAf;AACH,CAdD;;AAmBA,aAAM,SAAN,CAAgB,wBAAhB,GAA2C,YAAA;AACvC,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,GAAF,CAAM,MAAN,EAAc,CAAC,CAAC,qBAAhB;AACH,CAHD;;AAQA,aAAM,SAAN,CAAgB,qBAAhB,GAAwC,UAAU,IAAV,EAA8B;AAClE,MAAM,CAAC,GAAG,IAAV;AAAA,MAAyB,CAAC,GAAG,IAAI,CAAC,QAAlC;AACA,2BAAe,CAAf;AACA,4BAAgB,CAAhB;;AACA,MAAI,CAAC,CAAC,IAAF,KAAW,OAAX,IAAsB,CAAC,CAAC,CAAC,oBAAF,CAAuB,OAAlD,EAA2D;AACvD,QAAM,CAAC,GAAG,eAAV;AACA,IAAA,CAAC,CAAC,oBAAF,CAAuB,aAAvB,GAAuC,CAAC,CAAC,oBAAF,CAAuB,aAAvB,IAAwC,CAA/E;AACA,QAAI,CAAC,GAAG,CAAC,CAAC,oBAAF,CAAuB,aAA3B,GAA2C,EAA/C,EACI,CAAC,CAAC,oBAAF,CAAuB,cAAvB,GADJ,KAGI,CAAC,CAAC,gBAAF,CAAmB,CAAnB,EAAoC,CAApC;AAEJ,IAAA,UAAU,CAAC,YAAK;AACZ,UAAI,CAAC,CAAC,CAAC,oBAAF,CAAuB,OAA5B,EACI,CAAC,CAAC,gBAAF,CAAmB,CAAnB,EAAoC,CAApC;AACP,KAHS,EAGP,EAHO,CAAV;AAIH;AACJ,CAjBD;;AAsBA,aAAM,SAAN,CAAgB,gBAAhB,GAAmC,UAAU,CAAV,EAAyB,CAAzB,EAAiC;AAChE,MAAM,eAAe,GAAG,oCAA0B,CAA1B,EAA6B,CAAC,CAAC,MAA/B,CAAxB;AACA,MAAM,cAAc,GAAoB;AACpC,IAAA,QAAQ,EAAE,CAD0B;AAEpC,IAAA,eAAe,EAAf;AAFoC,GAAxC;;AAIA,MAAI,CAAC,CAAC,CAAC,oBAAF,CAAuB,OAA5B,EAAqC;AACjC,IAAA,CAAC,CAAC,oBAAF,CAAuB,eAAvB,GAAyC,CAAzC;AACA,IAAA,CAAC,CAAC,oBAAF,CAAuB,cAAvB,GAAwC,KAAxC;AACH;;AAED,MAAI,KAAK,GAAG,CAAC,CAAC,SAAF,KAAgB,UAAU,CAAC,cAA3B,GAA4C,CAAC,CAAC,MAAF,GAAW,EAAvD,GAA4D,CAAC,CAAC,MAA1E;;AACA,MAAI,KAAK,GAAG,cAAR,KAA2B,CAA/B,EAAkC;AAC9B,QAAI,CAAC,CAAC,CAAC,oBAAF,CAAuB,cAA5B,EAA4C;AACxC,MAAA,CAAC,CAAC,oBAAF,CAAuB,eAAvB,GAAyC,IAAI,CAAC,GAAL,CAAS,KAAT,IAAkB,EAAlB,GAAuB,CAAC,CAAC,oBAAF,CAAuB,eAAvB,GAAyC,CAAhE,GAAoE,CAA7G;AACA,UAAI,CAAC,CAAC,oBAAF,CAAuB,eAAvB,IAA0C,CAA9C,EACI,CAAC,CAAC,oBAAF,CAAuB,cAAvB,GAAwC,IAAxC;AACP;;AACD,QAAI,CAAC,CAAC,oBAAF,CAAuB,cAA3B,EACI,KAAK,IAAI,EAAT;AACP;;AAED,MAAI,CAAC,CAAC,QAAF,IAAc,KAAlB,EACI,KAAK,GAAG,KAAK,GAAG,CAAhB;AACJ,EAAA,CAAC,CAAC,oBAAF,CAAuB,cAAvB,GAAwC,CAAxC;AACA,EAAA,CAAC,CAAC,oBAAF,CAAuB,MAAvB,IAAiC,KAAjC;AACA,MAAI,CAAC,CAAC,CAAC,oBAAF,CAAuB,OAAxB,IAAmC,CAAC,CAAC,oBAAF,CAAuB,MAA9D,EACI,CAAC,CAAC,oBAAF,CAAuB,UAAvB,GAAoC,eAApC;AAEJ,EAAA,cAAc,CAAC,KAAf,GAAuB,KAAvB;AACA,EAAA,cAAc,CAAC,IAAf,GAAsB,CAAC,CAAC,oBAAF,CAAuB,cAA7C;AAEA,EAAA,CAAC,CAAC,IAAF,CAAO,oBAAY,KAAnB,EAA0B,cAA1B;AACH,CAjCD;;AAmCA,aAAM,YAAN,CAAmB,aAAM,SAAN,CAAgB,uBAAnC;;;;AC7IA;;AAEA;;AACA;;AAiBA,aAAM,SAAN,CAAgB,KAAhB,GAAwB,UAAS,KAAT,EAAmC,IAAnC,EAAgD,QAAhD,EAA+D;AACnF,MAAM,CAAC,GAAG,IAAV;AAAA,MAAyB,MAAM,GAAG,CAAC,CAAC,MAAF,CAAS,MAAT,CAAgB,UAAhB,EAAlC;AAAA,MAAgE,UAAU,GAAG,CAAC,CAAC,cAAF,CAAiB,UAA9F;AAEA,MAAM,EAAE,GAAG,KAAK,CAAC,UAAN,EAAX;AACA,MAAM,MAAM,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAhC;AAAA,MAAwC,MAAM,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,MAAzE;AACA,MAAM,KAAK,GAAG,MAAM,CAAC,QAAP,CAAgB,GAAhB,KAAsB,CAAC,CAAC,aAAxB,GAAsC,CAAC,CAAC,6BAAF,CAAgC,IAAhC,CAApD;AACA,EAAA,CAAC,CAAC,oBAAF,CAAuB,OAAvB,GAAiC,IAAjC;AACA,MAAM,MAAM,GAAG;AAAC,IAAA,CAAC,EAAC,CAAC,CAAC,gBAAF,CAAmB,UAAnB,CAAH;AAAmC,IAAA,GAAG,EAAC;AAAvC,GAAf;AAEA,MAAI,YAAJ,GACC,IADD,CACM;AAAC,IAAA,GAAG,EAAC,CAAL;AAAQ,IAAA,CAAC,EAAC,MAAM,CAAC,SAAjB;AAA4B,IAAA,CAAC,EAAC,MAAM,CAAC;AAArC,GADN,EAEC,EAFD,CAEI;AAAC,IAAA,GAAG,EAAC,KAAL;AAAY,IAAA,CAAC,EAAC,EAAE,CAAC,SAAjB;AAA4B,IAAA,CAAC,EAAC,EAAE,CAAC;AAAjC,GAFJ,EAGC,QAHD,CAGU,QAHV,EAIC,aAJD,CAIe,cAAO,SAAP,CAAiB,KAJhC,EAKC,aALD,CAKe,UAAC,CAAD,EAAsC;AAEjD,QAAM,YAAY,GAAG,MAAM,CAAC,QAAP,CAAgB,KAAhB,GAAwB,GAAxB,CAA4B,MAA5B,EAAoC,SAApC,EAArB;AACA,QAAM,aAAa,GAAG,CAAC,CAAC,GAAF,GAAQ,MAAM,CAAC,GAArC;AACA,QAAM,KAAK,GAAG,YAAY,CAAC,KAAb,CAAmB,aAAnB,CAAd;AACA,IAAA,MAAM,CAAC,QAAP,GAAkB,MAAM,CAAC,QAAP,CAAgB,KAAhB,GAAwB,GAAxB,CAA4B,KAA5B,CAAlB;AACA,IAAA,MAAM,CAAC,GAAP,GAAa,CAAC,CAAC,GAAf;AAEA,QAAM,EAAE,GAAG,IAAI,sCAAJ,CAAuB,CAAC,CAAC,CAAzB,EAA4B,CAAC,CAAC,CAA9B,CAAX;AACA,QAAM,CAAC,GAAG,CAAC,CAAC,2BAAF,CAA8B,EAA9B,EAAkC,SAAlC,EAAV;AACA,IAAA,CAAC,CAAC,SAAF,CAAY,CAAZ,EAAe,MAAM,CAAC,CAAtB;AACA,IAAA,MAAM,CAAC,CAAP,GAAW,CAAC,CAAC,gBAAF,CAAmB,UAAnB,CAAX;AACH,GAjBD,EAkBC,eAlBD,CAkBiB,YAAI;AACjB,IAAA,CAAC,CAAC,iCAAF;AAEA,IAAA,CAAC,CAAC,oBAAF,CAAuB,OAAvB,GAAiC,KAAjC;AACA,IAAA,CAAC,CAAC,oBAAF,CAAuB,cAAvB,GAAwC,CAAxC;AACA,IAAA,CAAC,CAAC,oBAAF,CAAuB,aAAvB,GAAuC,CAAvC;AACH,GAxBD,EAyBC,KAzBD;AA0BH,CAnCD;;;;ACpBA;;AAEA;;AAEA;;AA2DA,aAAM,SAAN,CAAgB,iBAAhB,GAAoC,YAAA;AAChC,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,WAAF,GAAgB;AACZ,IAAA,MAAM,EAAC,KADK;AAEZ,IAAA,2BAA2B,EAAC,IAAI,UAAJ,EAFhB;AAGZ,IAAA,qBAAqB,EAAC,IAAI,UAAJ,EAHV;AAIZ,IAAA,sBAAsB,EAAC,CAJX;AAKZ,IAAA,eAAe,EAAC;AAAC,MAAA,OAAO,EAAC,CAAT;AAAY,MAAA,OAAO,EAAC;AAApB,KALJ;AAMZ,IAAA,uBAAuB,EAAC,IAAI,UAAJ;AANZ,GAAhB;AASA,EAAA,CAAC,CAAC,EAAF,CAAK,mBAAW,QAAhB,EAA0B,CAAC,CAAC,UAA5B;AACA,EAAA,CAAC,CAAC,EAAF,CAAK,mBAAW,MAAhB,EAAwB,CAAC,CAAC,QAA1B;AACA,EAAA,CAAC,CAAC,EAAF,CAAK,mBAAW,MAAhB,EAAwB,CAAC,CAAC,QAA1B;AACH,CAdD;;AAoBA,aAAM,SAAN,CAAgB,SAAhB,GAA4B,UAAU,EAAV,EAAoB,EAApB,EAA4B;AAEpD,MAAG,EAAE,IAAE,IAAJ,IAAU,EAAE,IAAE,IAAjB,EAAuB;AACvB,MAAM,CAAC,GAAG,IAAV;AAEA,EAAA,CAAC,CAAC,WAAF,CAAc,2BAAd,GAA4C,EAAE,CAAC,KAAH,EAA5C;AACA,EAAA,CAAC,CAAC,WAAF,CAAc,qBAAd,GAAsC,EAAE,CAAC,KAAH,GAAW,KAAX,CAAiB,EAAjB,EAAqB,SAArB,EAAtC;AACA,EAAA,CAAC,CAAC,WAAF,CAAc,sBAAd,GAAuC,EAAE,CAAC,KAAH,CAAS,EAAT,CAAvC;AAEA,EAAA,CAAC,CAAC,WAAF,CAAc,uBAAd,GAAwC,IAAI,UAAJ,GAAW,YAAX,CAAwB,CAAC,CAAC,WAAF,CAAc,qBAAtC,EAA6D,CAAC,CAAC,CAAC,WAAF,CAAc,sBAA5E,CAAxC;;AACA,MAAM,MAAM,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,QAAxB,CAAiC,KAAjC,GAAyC,GAAzC,CAA6C,CAAC,CAAC,cAAF,CAAiB,MAA9D,CAAf;;AACA,EAAA,MAAM,CAAC,SAAP,CAAiB,CAAC,CAAC,WAAF,CAAc,uBAA/B;;AACA,EAAA,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,EAAxB,CAA2B,SAA3B,CAAqC,CAAC,CAAC,WAAF,CAAc,uBAAnD;;AAEA,EAAA,CAAC,CAAC,cAAF,CAAiB,MAAjB,CAAwB,QAAxB,GAAmC,MAAM,CAAC,GAAP,CAAW,CAAC,CAAC,cAAF,CAAiB,MAA5B,CAAnC;AAEH,CAhBD;;AAqBA,aAAM,SAAN,CAAgB,UAAhB,GAA6B,UAAU,QAAV,EAAkC;AAC3D,MAAM,CAAC,GAAG,IAAV;AAAA,MAAyB,EAAE,GAAG,QAAQ,CAAC,eAAvC;AACA,EAAA,CAAC,CAAC,WAAF,CAAc,MAAd,GAAuB,IAAvB;AACA,EAAA,CAAC,CAAC,WAAF,CAAc,eAAd,GAAgC;AAC5B,IAAA,OAAO,EAAC,EAAE,CAAC,OADiB;AAE5B,IAAA,OAAO,EAAC,EAAE,CAAC;AAFiB,GAAhC;AAIH,CAPD;;AAYA,aAAM,SAAN,CAAgB,QAAhB,GAA2B,UAAU,QAAV,EAAkC;AACzD,MAAM,CAAC,GAAG,IAAV;AAAA,MAAyB,EAAE,GAAG,QAAQ,CAAC,eAAvC;AACA,MAAM,EAAE,GAAG;AACP,IAAA,OAAO,EAAE,EAAE,CAAC,OADL;AAEP,IAAA,OAAO,EAAE,EAAE,CAAC;AAFL,GAAX;AAIA,MAAM,EAAE,GAAG,CAAC,CAAC,gBAAF,CAAmB,CAAC,CAAC,WAAF,CAAc,eAAjC,CAAX;AACA,MAAM,EAAE,GAAG,CAAC,CAAC,gBAAF,CAAmB,EAAnB,CAAX;AACA,EAAA,CAAC,CAAC,SAAF,CAAY,EAAZ,EAAgB,EAAhB;AACA,EAAA,CAAC,CAAC,WAAF,CAAc,eAAd,GAA8B;AAC1B,IAAA,OAAO,EAAC,EAAE,CAAC,OADe;AAE1B,IAAA,OAAO,EAAC,EAAE,CAAC;AAFe,GAA9B;AAIH,CAbD;;AAkBA,aAAM,SAAN,CAAgB,QAAhB,GAA2B,UAAU,IAAV,EAA8B;AACrD,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,WAAF,CAAc,MAAd,GAAuB,KAAvB;AACA,EAAA,CAAC,CAAC,iCAAF;AACH,CAJD;;AAOA,aAAM,YAAN,CAAmB,aAAM,SAAN,CAAgB,iBAAnC;;;;;;;;;ACvIA,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAC,CAAD,EAAY,GAAZ,EAAyB,GAAzB,EAAgD;AAC1D,SAAO,CAAC,GAAG,GAAJ,GAAU,GAAV,GAAgB,CAAC,GAAG,GAAJ,GAAU,GAAV,GAAgB,CAAvC;AACH,CAFD;;;;;;ACNA;;AAEA;;AACA;;AACA;;AAyBA,aAAM,SAAN,CAAgB,kBAAhB,GAAqC,YAAA;AACnC,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,EAAF,CAAK,oBAAY,KAAjB,EAAwB,CAAC,CAAC,UAA1B;AACA,EAAA,CAAC,CAAC,EAAF,CAAK,oBAAY,QAAjB,EAA2B,CAAC,CAAC,UAA7B;AACD,CAJD;;AASA,aAAM,SAAN,CAAgB,UAAhB,GAA6B,UAAU,cAAV,EAAyC;AACpE,MAAM,CAAC,GAAG,IAAV;AAAA,MAAyB,CAAC,GAAG,cAAc,CAAC,QAA5C;AAAA,MAAoE,eAAe,GAAG,cAAc,CAAC,eAArG;AAAA,MAAsH,KAAK,GAAG,cAAc,CAAC,KAA7I;AACA,MAAM,EAAE,GAAG,CAAC,CAAC,gBAAF,CAAmB,eAAnB,CAAX;AACA,MAAI,EAAE,KAAK,IAAX,EAAiB;AACjB,MAAM,EAAE,GAAG,kBAAM,KAAK,GAAG,CAAR,GAAY,CAAC,CAAC,IAAF,GAAS,cAAc,CAAC,IAApC,GAA2C,CAAC,CAAC,IAAF,GAAS,cAAc,CAAC,IAAzE,EAA+E,CAAC,CAAC,MAAF,CAAS,OAAxF,EAAiG,CAAC,CAAC,MAAF,CAAS,OAA1G,CAAX;AACA,MAAM,MAAM,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAhC;AAAA,MAAwC,MAAM,GAAG,CAAC,CAAC,cAAF,CAAiB,MAAlE;AAEA,MAAM,KAAK,GAAG,MAAM,CAAC,QAAP,CAAgB,GAAhB,KAAwB,CAAC,CAAC,aAA1B,GAA0C,CAAC,CAAC,6BAAF,CAAgC,EAAhC,CAAxD;AACA,EAAA,CAAC,CAAC,oBAAF,CAAuB,OAAvB,GAAiC,IAAjC;AACA,MAAM,MAAM,GAAG;AAAE,IAAA,EAAE,EAAE,EAAN;AAAU,IAAA,GAAG,EAAE;AAAf,GAAf;AAEA,MAAI,YAAJ,GAAY,IAAZ,CAAiB;AAAE,IAAA,GAAG,EAAE;AAAP,GAAjB,EAA6B,EAA7B,CAAgC;AAAE,IAAA,GAAG,EAAE;AAAP,GAAhC,EAAgD,QAAhD,CAAyD,cAAc,CAAC,IAAf,GAAsB,GAA/E,EACG,aADH,CACiB,UAAC,CAAD,EAAuB;AACpC,QAAM,YAAY,GAAG,MAAM,CAAC,QAAP,CAAgB,KAAhB,GAAwB,GAAxB,CAA4B,MAA5B,EAAoC,SAApC,EAArB;AACA,QAAM,aAAa,GAAG,CAAC,CAAC,GAAF,GAAQ,MAAM,CAAC,GAArC;AACA,QAAM,KAAK,GAAG,YAAY,CAAC,KAAb,CAAmB,aAAnB,CAAd;AACA,IAAA,MAAM,CAAC,QAAP,GAAkB,MAAM,CAAC,QAAP,CAAgB,KAAhB,GAAwB,GAAxB,CAA4B,KAA5B,CAAlB;AACA,QAAM,EAAE,GAAG,CAAC,CAAC,gBAAF,CAAmB,eAAnB,CAAX;AACA,IAAA,CAAC,CAAC,SAAF,CAAY,MAAM,CAAC,EAAnB,EAAuB,EAAvB;AACA,IAAA,MAAM,CAAC,GAAP,GAAa,CAAC,CAAC,GAAf;AACD,GATH,EAUG,eAVH,CAUmB,YAAK;AACpB,IAAA,CAAC,CAAC,IAAF,CAAO,oBAAY,QAAnB;AACD,GAZH,EAaG,KAbH;AAcD,CAzBD;;AA8BA,aAAM,SAAN,CAAgB,UAAhB,GAA6B,YAAA;AAC3B,MAAM,CAAC,GAAG,IAAV;AACA,EAAA,CAAC,CAAC,iCAAF;AAEA,EAAA,CAAC,CAAC,oBAAF,CAAuB,OAAvB,GAAiC,KAAjC;AACA,EAAA,CAAC,CAAC,oBAAF,CAAuB,cAAvB,GAAwC,CAAxC;AACA,EAAA,CAAC,CAAC,oBAAF,CAAuB,aAAvB,GAAuC,CAAvC;AACD,CAPD;;AAUA,aAAM,YAAN,CAAmB,aAAM,SAAN,CAAgB,kBAAnC;;;;;;;;;AC7EA;;AACA;;AAGA,IAAM,WAAW,GAAG,CAApB;;AAQA,IAAM,SAAS,GAAG,SAAZ,SAAY,CAAC,QAAD,EAAgE;AAAA,MAA1C,IAA0C,uEAA3B,WAA2B;AAC9E,MAAM,MAAM,GAAe,EAA3B;AACA,MAAM,MAAM,GAAG,IAAI,IAAnB;AAAA,MAAyB,MAAM,GAAG,QAAQ,CAAC,KAA3C;AAAA,MAAkD,MAAM,GAAG,QAAQ,CAAC,MAApE;AAAA,MAA4E,KAAK,GAAG,QAAQ,CAAC,SAA7F;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,IAArB,EAA2B,CAAC,EAA5B;AACI,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,IAArB,EAA2B,CAAC,EAA5B,EAAgC;AAC5B,UAAM,EAAE,GAAG,KAAK,CAAC,SAAN,GAAkB,CAAC,GAAG,MAAJ,GAAa,MAA1C;AACA,UAAM,EAAE,GAAG,KAAK,CAAC,QAAN,GAAiB,CAAC,GAAG,MAAJ,GAAa,MAAzC;AAEA,UAAM,EAAE,GAAG,IAAI,sCAAJ,CAAuB,EAAvB,EAA2B,EAA3B,EAA+B,CAA/B,CAAX;;AACA,UAAM,UAAU,GAAG,0BAAe,iBAAf,CAAiC,EAAjC,CAAnB;;AACA,MAAA,MAAM,CAAC,IAAP,CAAY,UAAU,CAAC,KAAvB;AACH;AARL;;AASA,SAAO,MAAP;AACH,CAbD;;;;AAoBA,IAAM,WAAW,GAAG,SAAd,WAAc,GAA2C;AAAA,MAA1C,IAA0C,uEAA3B,WAA2B;AAC3D,MAAM,QAAQ,GAAe,EAA7B;AACA,MAAM,MAAM,GAAG,IAAI,IAAnB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,IAArB,EAA2B,CAAC,EAA5B;AACI,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,IAAI,IAArB,EAA2B,CAAC,EAA5B;AACI,MAAA,QAAQ,CAAC,IAAT,CAAc,CAAC,CAAC,GAAG,MAAL,EAAa,IAAI,CAAC,GAAG,MAArB,CAAd;AADJ;AADJ;;AAGA,SAAO,QAAP;AACH,CAPD;;;;AAkBA,IAAM,UAAU,GAAG,SAAb,UAAa,GAA2C;AAAA,MAA1C,IAA0C,uEAA3B,WAA2B;AAC1D,MAAM,QAAQ,GAAe,EAA7B;AACA,MAAM,MAAM,GAAG,IAAI,GAAG,CAAtB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,CAAC,EAA3B;AACI,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,IAApB,EAA0B,CAAC,EAA3B,EAA+B;AAC3B,UAAM,KAAK,GAAG,CAAC,GAAG,MAAJ,GAAa,CAA3B;AACA,UAAM,MAAM,GAAG,KAAK,GAAG,MAAvB;AACA,MAAA,QAAQ,CAAC,IAAT,CAAc,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAK,GAAG,CAAxB,CAAd;AACA,MAAA,QAAQ,CAAC,IAAT,CAAc,CAAC,KAAK,GAAG,CAAT,EAAY,MAAZ,EAAoB,MAAM,GAAG,CAA7B,CAAd;AACH;AANL;;AAOA,SAAO,QAAP;AACH,CAXD;;;;;;;;;;;AC7CA,IAAM,IAAI,GAAG,SAAP,IAAO,CAAC,GAAD,EAA8G;AAAA,MAAhG,GAAgG;AACvH,SAAO,IAAI,OAAJ,CAAY,UAAC,OAAD,EAAU,MAAV,EAAoB;AACnC,IAAA,KAAK,CAAC,GAAD,CAAL,CAAW,IAAX,CAAgB,UAAC,IAAD;AAAA,aAAoB,IAAI,CAAC,IAAL,EAApB;AAAA,KAAhB,EAAiD,IAAjD,CAAsD,UAAC,IAAD;AAAA,aAAgB,iBAAiB,CAAC,IAAD,CAAjC;AAAA,KAAtD,EACK,IADL,CACU,UAAC,MAAD,EAAwB;AAC1B,UAAM,CAAC,GAAG,MAAM,CAAC,KAAjB;AAAA,UAAwB,CAAC,GAAG,MAAM,CAAC,MAAnC;AAAA,UAA2C,CAAC,GAAG,CAA/C;AACA,UAAM,MAAM,GAAG,QAAQ,CAAC,aAAT,CAAuB,QAAvB,CAAf;AACA,MAAA,MAAM,CAAC,KAAP,GAAe,gBAAgB,GAAG,CAAlC;AACA,MAAA,MAAM,CAAC,MAAP,GAAgB,gBAAgB,GAAG,CAAnC;AACA,MAAA,MAAM,CAAC,KAAP,CAAa,KAAb,aAAwB,CAAxB;AACA,MAAA,MAAM,CAAC,KAAP,CAAa,MAAb,aAAyB,CAAzB;AACA,UAAM,GAAG,GAAG,MAAM,CAAC,UAAP,CAAkB,IAAlB,CAAZ;AACA,MAAA,GAAG,CAAC,SAAJ,CAAc,MAAd,EAAsB,CAAtB,EAAyB,CAAzB;AACA,UAAM,MAAM,GAAG,GAAG,CAAC,YAAJ,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,IAA5C;AACA,UAAM,GAAG,GAAG,IAAI,UAAJ,CAAe,MAAf,CAAZ;AACA,MAAA,OAAO,CAAC;AAAE,QAAA,GAAG,EAAH,GAAF;AAAO,QAAA,CAAC,EAAD,CAAP;AAAU,QAAA,CAAC,EAAD,CAAV;AAAa,QAAA,CAAC,EAAD,CAAb;AAAgB,QAAA,GAAG,EAAH;AAAhB,OAAD,CAAP;AACH,KAbL,EAcK,KAdL,CAcW,UAAA,MAAM,EAAG;AACZ,MAAA,MAAM,CAAC,MAAD,CAAN;AACH,KAhBL;AAiBH,GAlBM,CAAP;AAmBH,CApBD;;;;;;;;;;;ACLA;;;;;;;;;;;;;;;;;;;;IAWM;;;;;;;AAAN,wBAAA;AAAA;;AAAA;;;;AAmBc,UAAA,iBAAA,GAAoB,UAAC,IAAD,EAAqD;AAC/E,UAAM,KAAK,GAAG,UAAU,CAAC,SAAX,CAAqB,GAArB,CAAyB,IAAzB,CAAd;AACA,aAAO,KAAP;AACH,KAHS;;AAnBd;AAuBC;;;EAvBwB;;;AAId,UAAA,CAAA,SAAA,GAA6D,IAAI,GAAJ,EAA7D;;AAOA,UAAA,CAAA,gBAAA,GAAmB,UAAC,IAAD,EAAe,KAAf,EAA4D;AAClF,EAAA,UAAU,CAAC,SAAX,CAAqB,GAArB,CAAyB,IAAzB,EAA+B,KAA/B;AACH,CAFM;;;;;;;;;ACrBX;;;;;;;;;;;;;;;;;;;;;;;;IAmBM;;;;;;;AAsBF,uBAAA;AAAA;;AAAA;AAEC;;;;SATD,eAAgB;AACZ,aAAO,KAAK,CAAZ;AACH;;;WA0BM,gBAAO,KAAP,EAAmB;;;AACtB,WAAK,CAAL,GAAS,KAAT;AACA,UAAM,KAAK,GAAG,KAAK,iBAAL,CAAuB,KAAK,WAAL,CAAiB,IAAxC,CAAd;AACA,WAAK,QAAL,GAAgB,IAAI,KAAJ,CAAU,IAAV,EAAgB,KAAK,CAAC,YAAN,EAAhB,CAAhB;AACA,OAAA,EAAA,GAAA,KAAK,YAAL,MAAiB,IAAjB,IAAiB,EAAA,KAAA,KAAA,CAAjB,GAAiB,KAAA,CAAjB,GAAiB,EAAA,CAAE,IAAF,CAAO,IAAP,CAAjB;AACA,OAAA,EAAA,GAAA,KAAK,cAAL,MAAmB,IAAnB,IAAmB,EAAA,KAAA,KAAA,CAAnB,GAAmB,KAAA,CAAnB,GAAmB,EAAA,CAAE,IAAF,CAAO,IAAP,CAAnB;AACH;;;SAKD,eAAmB;AACf,aAAO,KAAK,QAAZ;AACH;;;;EAxDmD;;;;;;;;;;;ACnBxD;;AACA;;AACA;;;;;;;;;;;;;;;;;;;;IAeM;;;;;;;AAAN,uBAAA;AAAA;;AAAA;;;AAIc,UAAA,KAAA,GAA4D,IAAI,GAAJ,EAA5D;;AAKV,UAAA,cAAA,GAAiB,YAAK;AAClB,YAAK,CAAL,CAAO,EAAP,CAAU,aAAV,EAAyB,MAAK,WAA9B;;AACA,YAAK,CAAL,CAAO,EAAP,CAAU,QAAV,EAAoB,MAAK,aAAzB;AACH,KAHD;;AAQU,UAAA,KAAA,GAAgC,EAAhC;;AAMF,UAAA,WAAA,GAAc,UAAC,KAAD,EAA0B;AAC5C,YAAK,KAAL,GAAa,EAAb;AACA,UAAM,KAAK,GAAG,MAAK,KAAnB;AAEA,MAAA,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,OAAP,CAAe,UAAC,CAAD,EAAoB;AAC/B,YAAW,CAAX,GAAyD,CAAzD,CAAQ,CAAR;AAAA,YAAiB,CAAjB,GAAyD,CAAzD,CAAc,CAAd;AAAA,YAA2B,KAA3B,GAAyD,CAAzD,CAAoB,KAApB;AAAA,YAA4C,QAA5C,GAAyD,CAAzD,CAAkC,QAAlC;AACA,YAAM,GAAG,aAAM,KAAN,cAAe,CAAf,cAAoB,CAApB,CAAT;;AACA,YAAI,CAAC,KAAK,CAAC,GAAN,CAAU,GAAV,CAAL,EAAqB;AAEjB,cAAM,GAAG,kGAA2F,KAA3F,cAAoG,CAApG,cAAyG,CAAzG,CAAT;AACA,cAAM,QAAQ,GAAG,oBAAU,QAAV,CAAjB;AACA,cAAM,CAAC,GAAyB;AAC5B,YAAA,GAAG,EAAH,GAD4B;AAE5B,YAAA,GAAG,EAAH,GAF4B;AAG5B,YAAA,QAAQ,EAAR;AAH4B,WAAhC;;AAKA,gBAAK,KAAL,CAAW,OAAX,CAAmB,CAAnB;AACH;AACJ,OAdD,CAAA;AAeH,KAnBO;;AAwBA,UAAA,aAAA,GAAgB,YAAK;AACzB,UAAM,KAAK,GAAG,MAAK,KAAnB;AAAA,UAA0B,KAAK,GAAG,MAAK,KAAvC;;AACA,UAAI,KAAK,CAAC,MAAN,GAAe,CAAf,IAAoB,CAAC,KAAK,CAAC,GAAN,CAAU,KAAK,CAAC,CAAD,CAAL,CAAS,GAAnB,CAAzB,EAAkD;AAC9C,YAAM,CAAC,GAAG,KAAK,CAAC,KAAN,EAAV;AACA,YAAQ,GAAR,GAA+B,CAA/B,CAAQ,GAAR;AAAA,YAAa,QAAb,GAA+B,CAA/B,CAAa,QAAb;AAAA,YAAuB,GAAvB,GAA+B,CAA/B,CAAuB,GAAvB;AACA,QAAA,KAAK,CAAC,GAAN,CAAU,GAAV,EAAe;AAAE,UAAA,GAAG,EAAH,GAAF;AAAO,UAAA,QAAQ,EAAR;AAAP,SAAf;AACA,wBAAK,GAAL,EAAU,GAAV,EAAe,IAAf,CAAoB,UAAA,CAAC,EAAG;AACpB,cAAM,MAAM,GAAyB;AACjC,YAAA,GAAG,EAAE,CAAC,CAAC,GAD0B;AAEjC,YAAA,KAAK,EAAE,CAAC,CAAC,CAFwB;AAGjC,YAAA,MAAM,EAAE,CAAC,CAAC,CAHuB;AAIjC,YAAA,OAAO,EAAE,CAAC,CAAC,CAJsB;AAKjC,YAAA,QAAQ,EAAE,QALuB;AAMjC,YAAA,aAAa,EAAE,CAAC,CAAC;AANgB,WAArC;;AAQA,gBAAK,QAAL,CAAc,OAAd,CAAsB,MAAtB;AACH,SAVD;AAWH;AACJ,KAlBO;;AA/CZ;AAkEC;;;EAlEuB;;;;;;;;;;;ACnBxB,IAAM,KAAK,GAAG,SAAR,KAAQ,CAAC,CAAD,EAAY,CAAZ,EAAuB,CAAvB,EAA4C;AACtD,MAAM,GAAG,GAAG,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,IAAiB,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAAjB,GAAkC,IAAI,CAAC,GAAL,CAAS,CAAT,EAAY,CAAZ,CAA9C;AACA,SAAO,IAAI,CAAC,IAAL,CAAU,GAAV,CAAP;AACH,CAHD;;AAKA,IAAM,MAAM,GAAG,SAAT,MAAS,CAAC,CAAD,EAAY,CAAZ,EAAuB,CAAvB,EAA4C;AACvD,SAAO,IAAI,CAAC,KAAL,CAAW,CAAX,EAAc,CAAC,GAAG,CAAlB,CAAP;AACH,CAFD;;AAIA,IAAM,MAAM,GAAG,SAAT,MAAS,CAAC,IAAD,EAAiB,CAAjB,EAA4B,CAA5B,EAAuC,CAAvC,EAAkD,CAAlD,EAAqE;AAChF,EAAA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAC,GAAG,CAAf;AACA,EAAA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAC,GAAG,CAAf;AACA,EAAA,IAAI,CAAC,CAAD,CAAJ,IAAW,CAAC,GAAG,CAAf;AACH,CAJD;;AAYA,IAAM,aAAa,GAAG,SAAhB,aAAgB,CAAC,QAAD,EAAuB,SAAvB,EAA4D;AAC9E,MAAM,QAAQ,GAAG,SAAS,CAAC,MAA3B;AACA,MAAM,QAAQ,GAAG,QAAQ,CAAC,MAA1B;AAEA,MAAM,OAAO,GAAG,IAAI,KAAJ,CAAU,QAAV,CAAhB;;AACA,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAApB,EAA8B,EAAE,CAAhC,EAAmC;AAC/B,IAAA,OAAO,CAAC,CAAD,CAAP,GAAa,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAb;AACH;;AAED,OAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,QAApB,EAA8B,EAAE,CAAhC,EAAmC;AAC/B,QAAM,IAAI,GAAG,QAAQ,CAAC,CAAD,CAArB;AACA,QAAM,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAD,CAAL,CAAnB;AACA,QAAM,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAD,CAAL,CAAnB;AACA,QAAM,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAD,CAAL,CAAnB;AAEA,QAAM,GAAG,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAApB;AACA,QAAM,GAAG,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAApB;AACA,QAAM,GAAG,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAApB;AACA,QAAM,EAAE,GAAG,KAAK,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAhB;AAEA,QAAM,GAAG,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAApB;AACA,QAAM,GAAG,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAApB;AACA,QAAM,GAAG,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAApB;AACA,QAAM,EAAE,GAAG,KAAK,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAhB;AAEA,QAAM,GAAG,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAApB;AACA,QAAM,GAAG,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAApB;AACA,QAAM,GAAG,GAAG,CAAC,CAAC,CAAD,CAAD,GAAO,CAAC,CAAC,CAAD,CAApB;AACA,QAAM,EAAE,GAAG,KAAK,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAhB;AACA,QAAI,IAAI,CAAC,GAAL,CAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,IAAuB,IAA3B,EAAiC;AACjC,QAAM,CAAC,GAAG,OAAO,EAAE,GAAG,EAAL,GAAU,EAAjB,CAAV;AACA,QAAM,CAAC,GAAG,IAAI,CAAC,IAAL,CAAU,CAAC,CAAC,GAAG,EAAL,KAAY,CAAC,GAAG,EAAhB,KAAuB,CAAC,GAAG,EAA3B,IAAiC,CAA3C,CAAV;AACA,QAAI,EAAE,GAAG,GAAG,GAAG,GAAN,GAAY,GAAG,GAAG,GAA3B;AACA,QAAI,EAAE,GAAG,GAAG,GAAG,GAAN,GAAY,GAAG,GAAG,GAA3B;AACA,QAAI,EAAE,GAAG,GAAG,GAAG,GAAN,GAAY,GAAG,GAAG,GAA3B;AACA,QAAI,EAAE,GAAG,KAAK,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,CAAd;AACA,IAAA,EAAE,IAAI,EAAN;AACA,IAAA,EAAE,IAAI,EAAN;AACA,IAAA,EAAE,IAAI,EAAN;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAD,CAAL,CAAR,EAAmB,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAzB,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAN;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAD,CAAL,CAAR,EAAmB,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAzB,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAN;AACA,IAAA,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAD,CAAL,CAAR,EAAmB,MAAM,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,CAAzB,EAAqC,EAArC,EAAyC,EAAzC,EAA6C,EAA7C,CAAN;AACH;;AAED,OAAK,IAAI,EAAC,GAAG,CAAb,EAAgB,EAAC,GAAG,QAApB,EAA8B,EAAE,EAAhC,EAAmC;AAC/B,QAAM,CAAC,GAAG,OAAO,CAAC,EAAD,CAAjB;AACA,QAAM,CAAC,GAAG,IAAI,CAAC,IAAL,CAAU,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,IAAoB,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAApB,GAAwC,IAAI,CAAC,GAAL,CAAS,CAAC,CAAC,CAAD,CAAV,EAAe,CAAf,CAAlD,CAAV;;AACA,QAAI,CAAC,GAAG,IAAR,EAAc;AACV,MAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAP;AACA,MAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAP;AACA,MAAA,CAAC,CAAC,CAAD,CAAD,GAAO,CAAP;AACA;AACH;;AACD,IAAA,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAR;AACA,IAAA,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAR;AACA,IAAA,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAR;AACH;;AACD,SAAO,OAAP;AACH,CA1DD;;;;;;;;;;;ACjBA;;;;;;;;IAMM;;;AAUF,6BAAY,IAAZ,EAA+B,KAA/B,EAA2C;AAAA;;AACvC,SAAK,IAAL,GAAY,IAAZ;AACA,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,CAAL,GAAS,IAAI,CAAC,KAAd;AACH;;;;WAED,iBAAS,GAAT,EAAe;AACX,YAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;;WAED,cAAU,GAAV,EAAiB;AACb,YAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;;WAED,0BAAc;AACV,YAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;;WAED,gBAAO,UAAP,EAA2B,MAA3B,EAAoD;AAChD,YAAM,IAAI,KAAJ,CAAU,yBAAV,CAAN;AACH;;;;;;;;AAIL,qBAAU,gBAAV,CAA2B,qBAAU,IAArC,EAA2C,iBAA3C;;;;;;;;;AC5CA;;AAEA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;;;;;IA0BM;;;;;;;AAUF,6BAAY,OAAZ,EAAgC,KAAhC,EAA6C;AAAA;;AAAA;;AACzC,8BAAM,OAAN,EAAe,KAAf;AATI,UAAA,KAAA,GAAuC,IAAI,GAAJ,EAAvC;AAEA,UAAA,KAAA,GAA8B,IAAI,GAAJ,EAA9B;;AAsED,UAAA,OAAA,GAAU,UAAC,QAAD,EAAyC;AACtD,UAAM,KAAK,GAAG,MAAK,KAAnB;AACA,UAAM,GAAG,GAAG,QAAQ,CAAC,GAArB;;AACA,YAAK,KAAL,CAAW,GAAX,CAAe,GAAf,EAAoB,IAApB;;AACA,UAAI,CAAC,MAAK,KAAL,CAAW,GAAX,CAAe,GAAf,CAAL,EAA0B;AACtB,YAAM,IAAI,GAAG,MAAK,KAAL,CAAW,MAAX,CAAkB,QAAQ,CAAC,QAA3B,CAAb;;AACA,YAAM,IAAI,GAAG,MAAK,KAAL,CAAW,MAAX,CAAkB,2BAAc,MAAK,QAAnB,EAA6B,QAAQ,CAAC,QAAtC,CAAlB,CAAb;;AACA,YAAM,OAAO,GAAG,MAAK,KAAL,CAAW,SAAX,CAAqB,QAAQ,CAAC,aAA9B,EAA6C,QAAQ,CAAC,KAAtD,EAA6D,QAAQ,CAAC,MAAtE,EAA8E,QAAQ,CAAC,OAAvF,CAAhB;;AACA,YAAM,MAAM,GAAqB;AAAE,UAAA,IAAI,EAAJ,IAAF;AAAQ,UAAA,IAAI,EAAJ,IAAR;AAAc,UAAA,OAAO,EAAP;AAAd,SAAjC;AACA,QAAA,KAAK,CAAC,GAAN,CAAU,GAAV,EAAe,MAAf;AACH;AACJ,KAXM;;AAaA,UAAA,MAAA,GAAS,UAAC,UAAD,EAAqB,MAArB,EAAwD;AACpE,UAAM,KAAK,GAAa,EAAxB;;AAEA,YAAK,KAAL,CAAW,OAAX,CAAmB,UAAC,CAAD,EAAI,CAAJ,EAAS;AACxB,YAAM,MAAM,GAAG,MAAK,KAAL,CAAW,GAAX,CAAe,CAAf,CAAf;;AACA,YAAI,MAAJ,EAAY;AACR,cAAM,IAAI,GAAW;AACjB,YAAA,QAAQ,EAAE,MAAM,CAAC,IADA;AAEjB,YAAA,MAAM,EAAE,MAAM,CAAC,IAFE;AAGjB,YAAA,OAAO,EAAE,MAAM,CAAC,OAHC;AAIjB,YAAA,cAAc,EAAE,MAAM,CAAC,oBAAP,CAA4B;AAJ3B,WAArB;AAMA,UAAA,KAAK,CAAC,IAAN,CAAW,IAAX;AACH;AACJ,OAXD;;AAaA,YAAK,KAAL,CAAW,KAAX,CAAyB,KAAzB;AACH,KAjBM;;AA3EH,UAAK,QAAL,GAAgB,sBAAhB;AACA,UAAK,KAAL,GAAa,KAAK,CAAC,OAAN,CAAkC;AAE3C,MAAA,IAAI,wgBAFuC;AAqB3C,MAAA,IAAI,+oBArBuC;AAuC3C,MAAA,QAAQ,EAAE,MAAK,QAvC4B;AAyC3C,MAAA,UAAU,EAAE;AACR,QAAA,QAAQ,EAAE,IAAI,aAAJ,CAAkB,UAAlB,CADF;AAER,QAAA,MAAM,EAAE,IAAI,aAAJ,CAAkB,QAAlB,CAFA;AAGR,QAAA,QAAQ,EAAE;AAHF,OAzC+B;AA+C3C,MAAA,QAAQ,EAAE;AACN,QAAA,cAAc,EAAE,IAAI,aAAJ,CAAkB,gBAAlB,CADV;AAEN,QAAA,OAAO,EAAE,IAAI,aAAJ,CAAkB,SAAlB;AAFH,OA/CiC;AAoD3C,MAAA,SAAS,EAAE,WApDgC;AAsD3C,MAAA,MAAM,EAAE;AACJ,QAAA,UAAU,EAAE,IADR;AAEJ,QAAA,SAAS,EAAE;AAFP;AAtDmC,KAAlC,CAAb;AAHyC;AA8D5C;;;EAxE2B;;;;AA2GhC,qBAAU,gBAAV,CAA2B,qBAAU,IAArC,EAA2C,iBAA3C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1IA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AAEA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;ACxBA;;AAEA,IAAM,GAAG,GAAG,IAAI,YAAJ,CAAU;AAClB,EAAA,KAAK,EAAE,MAAM,CAAC,UAAP,GAAoB,EADT;AAElB,EAAA,MAAM,EAAE,MAAM,CAAC,WAAP,GAAqB,EAFX;AAGlB,EAAA,IAAI,EAAE,CAHY;AAIlB,EAAA,MAAM,EAAE,WAJU;AAKlB,EAAA,UAAU,EAAE,IAAI,yBAAJ,CAAuB,WAAvB,EAAoC,iBAApC,EAAuD,KAAvD;AALM,CAAV,CAAZ;AASA,IAAM,KAAK,GAAG,IAAI,gBAAJ,EAAd;AACA,GAAG,CAAC,GAAJ,CAAQ,KAAR;AAEA,UAAU,CAAC,YAAK;AACZ,EAAA,GAAG,CAAC,KAAJ,CAAU,IAAI,yBAAJ,CAAuB,GAAvB,EAA4B,IAA5B,CAAV,EAA6C,EAA7C,EAAiD,IAAjD;AACH,CAFS,EAEP,IAFO,CAAV;;;ACfA,IAAIkU,UAAU,GAAG,4BAAjB;AAEA,IAAIC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAcC,MAA9B;;AAEA,SAASA,MAAT,CAAgBC,UAAhB,EAA4B;AAC1BJ,EAAAA,SAAS,CAACK,IAAV,CAAe,IAAf,EAAqBD,UAArB;AACA,OAAKE,GAAL,GAAW;AACTC,IAAAA,IAAI,EAAEN,MAAM,CAACC,MAAP,CAAcM,OADX;AAETC,IAAAA,gBAAgB,EAAE,EAFT;AAGTC,IAAAA,iBAAiB,EAAE,EAHV;AAITC,IAAAA,MAAM,EAAE,UAAUC,EAAV,EAAc;AACpB,WAAKH,gBAAL,CAAsBI,IAAtB,CAA2BD,EAAE,IAAI,YAAY,CAAE,CAA/C;AACD,KANQ;AAOTE,IAAAA,OAAO,EAAE,UAAUF,EAAV,EAAc;AACrB,WAAKF,iBAAL,CAAuBG,IAAvB,CAA4BD,EAA5B;AACD;AATQ,GAAX;AAYAX,EAAAA,MAAM,CAACC,MAAP,CAAcM,OAAd,GAAwB,IAAxB;AACD;;AAEDP,MAAM,CAACC,MAAP,CAAcC,MAAd,GAAuBA,MAAvB;AACA,IAAIY,aAAJ,EAAmBC,cAAnB;AAEA,IAAIC,MAAM,GAAGhB,MAAM,CAACC,MAAP,CAAce,MAA3B;;AACA,IAAI,CAAC,CAACA,MAAD,IAAW,CAACA,MAAM,CAACC,eAApB,KAAwC,OAAOC,SAAP,KAAqB,WAAjE,EAA8E;AAC5E,MAAIC,QAAQ,GAAG,MAA4BC,QAAQ,CAACD,QAApD;AACA,MAAIE,QAAQ,GAAGD,QAAQ,CAACC,QAAT,KAAsB,QAAtB,GAAiC,KAAjC,GAAyC,IAAxD;AACA,MAAIC,EAAE,GAAG,IAAIJ,SAAJ,CAAcG,QAAQ,GAAG,KAAX,GAAmBF,QAAnB,GAA8B,GAA9B,aAA2D,GAAzE,CAAT;;AACAG,EAAAA,EAAE,CAACC,SAAH,GAAe,UAASC,KAAT,EAAgB;AAC7BV,IAAAA,aAAa,GAAG,EAAhB;AACAC,IAAAA,cAAc,GAAG,EAAjB;AAEA,QAAIT,IAAI,GAAGmB,IAAI,CAACC,KAAL,CAAWF,KAAK,CAAClB,IAAjB,CAAX;;AAEA,QAAIA,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1B,UAAIC,OAAO,GAAG,KAAd;AACAtB,MAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAASC,KAAT,EAAgB;AAClC,YAAI,CAACA,KAAK,CAACC,KAAX,EAAkB;AAChB,cAAIC,SAAS,GAAGC,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBL,KAAK,CAACM,EAA7B,CAA9B;;AACA,cAAIJ,SAAJ,EAAe;AACbL,YAAAA,OAAO,GAAG,IAAV;AACD;AACF;AACF,OAPD,EAF0B,CAW1B;;AACAA,MAAAA,OAAO,GAAGA,OAAO,IAAItB,IAAI,CAACuB,MAAL,CAAYS,KAAZ,CAAkB,UAASP,KAAT,EAAgB;AACrD,eAAOA,KAAK,CAACJ,IAAN,KAAe,KAAf,IAAwBI,KAAK,CAACQ,SAAN,CAAgBC,EAA/C;AACD,OAFoB,CAArB;;AAIA,UAAIZ,OAAJ,EAAa;AACXa,QAAAA,OAAO,CAACC,KAAR;AAEApC,QAAAA,IAAI,CAACuB,MAAL,CAAYC,OAAZ,CAAoB,UAAUC,KAAV,EAAiB;AACnCY,UAAAA,QAAQ,CAACR,MAAM,CAACC,aAAR,EAAuBL,KAAvB,CAAR;AACD,SAFD;AAIAhB,QAAAA,cAAc,CAACe,OAAf,CAAuB,UAAUzT,CAAV,EAAa;AAClCuU,UAAAA,YAAY,CAACvU,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAAC,CAAD,CAAR,CAAZ;AACD,SAFD;AAGD,OAVD,MAUO;AACLwU,QAAAA,MAAM,CAACzB,QAAP,CAAgB0B,MAAhB;AACD;AACF;;AAED,QAAIxC,IAAI,CAACqB,IAAL,KAAc,QAAlB,EAA4B;AAC1BL,MAAAA,EAAE,CAACyB,KAAH;;AACAzB,MAAAA,EAAE,CAAC0B,OAAH,GAAa,YAAY;AACvB5B,QAAAA,QAAQ,CAAC0B,MAAT;AACD,OAFD;AAGD;;AAED,QAAIxC,IAAI,CAACqB,IAAL,KAAc,gBAAlB,EAAoC;AAClCc,MAAAA,OAAO,CAACQ,GAAR,CAAY,2BAAZ;AAEAC,MAAAA,kBAAkB;AACnB;;AAED,QAAI5C,IAAI,CAACqB,IAAL,KAAc,OAAlB,EAA2B;AACzBc,MAAAA,OAAO,CAACU,KAAR,CAAc,kBAAkB7C,IAAI,CAAC6C,KAAL,CAAWC,OAA7B,GAAuC,IAAvC,GAA8C9C,IAAI,CAAC6C,KAAL,CAAWE,KAAvE;AAEAH,MAAAA,kBAAkB;AAElB,UAAII,OAAO,GAAGC,kBAAkB,CAACjD,IAAD,CAAhC;AACAkD,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BJ,OAA1B;AACD;AACF,GA1DD;AA2DD;;AAED,SAASJ,kBAAT,GAA8B;AAC5B,MAAII,OAAO,GAAGE,QAAQ,CAACG,cAAT,CAAwB7D,UAAxB,CAAd;;AACA,MAAIwD,OAAJ,EAAa;AACXA,IAAAA,OAAO,CAACM,MAAR;AACD;AACF;;AAED,SAASL,kBAAT,CAA4BjD,IAA5B,EAAkC;AAChC,MAAIgD,OAAO,GAAGE,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACAP,EAAAA,OAAO,CAACjB,EAAR,GAAavC,UAAb,CAFgC,CAIhC;;AACA,MAAIsD,OAAO,GAAGI,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAd;AACA,MAAIC,UAAU,GAAGN,QAAQ,CAACK,aAAT,CAAuB,KAAvB,CAAjB;AACAT,EAAAA,OAAO,CAACW,SAAR,GAAoBzD,IAAI,CAAC6C,KAAL,CAAWC,OAA/B;AACAU,EAAAA,UAAU,CAACC,SAAX,GAAuBzD,IAAI,CAAC6C,KAAL,CAAWE,KAAlC;AAEAC,EAAAA,OAAO,CAACU,SAAR,GACE,2NACE,mFADF,GAEE,yEAFF,GAGE,qEAHF,GAG0EZ,OAAO,CAACY,SAHlF,GAG8F,QAH9F,GAIE,OAJF,GAIYF,UAAU,CAACE,SAJvB,GAImC,QAJnC,GAKA,QANF;AASA,SAAOV,OAAP;AAED;;AAED,SAASW,UAAT,CAAoBhE,MAApB,EAA4BoC,EAA5B,EAAgC;AAC9B,MAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ,WAAO,EAAP;AACD;;AAED,MAAIC,OAAO,GAAG,EAAd;AACA,MAAI1N,CAAJ,EAAO2N,CAAP,EAAUC,GAAV;;AAEA,OAAK5N,CAAL,IAAUyN,OAAV,EAAmB;AACjB,SAAKE,CAAL,IAAUF,OAAO,CAACzN,CAAD,CAAP,CAAW,CAAX,CAAV,EAAyB;AACvB4N,MAAAA,GAAG,GAAGH,OAAO,CAACzN,CAAD,CAAP,CAAW,CAAX,EAAc2N,CAAd,CAAN;;AACA,UAAIC,GAAG,KAAKhC,EAAR,IAAepX,KAAK,CAACqZ,OAAN,CAAcD,GAAd,KAAsBA,GAAG,CAACA,GAAG,CAACE,MAAJ,GAAa,CAAd,CAAH,KAAwBlC,EAAjE,EAAsE;AACpE8B,QAAAA,OAAO,CAACvD,IAAR,CAAanK,CAAb;AACD;AACF;AACF;;AAED,MAAIwJ,MAAM,CAACe,MAAX,EAAmB;AACjBmD,IAAAA,OAAO,GAAGA,OAAO,CAACK,MAAR,CAAeP,UAAU,CAAChE,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAAzB,CAAV;AACD;;AAED,SAAO8B,OAAP;AACD;;AAED,SAASxB,QAAT,CAAkB1C,MAAlB,EAA0B8B,KAA1B,EAAiC;AAC/B,MAAImC,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAIA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,IAAqB,CAACpC,MAAM,CAACe,MAAjC,EAAyC;AACvC,QAAIL,EAAE,GAAG,IAAI8D,QAAJ,CAAa,SAAb,EAAwB,QAAxB,EAAkC,SAAlC,EAA6C1C,KAAK,CAACQ,SAAN,CAAgBC,EAA7D,CAAT;AACAT,IAAAA,KAAK,CAACC,KAAN,GAAc,CAACkC,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAtB;AACA6B,IAAAA,OAAO,CAACnC,KAAK,CAACM,EAAP,CAAP,GAAoB,CAAC1B,EAAD,EAAKoB,KAAK,CAAC2C,IAAX,CAApB;AACD,GAJD,MAIO,IAAIzE,MAAM,CAACe,MAAX,EAAmB;AACxB2B,IAAAA,QAAQ,CAAC1C,MAAM,CAACe,MAAR,EAAgBe,KAAhB,CAAR;AACD;AACF;;AAED,SAASG,cAAT,CAAwBjC,MAAxB,EAAgCoC,EAAhC,EAAoC;AAClC,MAAI6B,OAAO,GAAGjE,MAAM,CAACiE,OAArB;;AACA,MAAI,CAACA,OAAL,EAAc;AACZ;AACD;;AAED,MAAI,CAACA,OAAO,CAAC7B,EAAD,CAAR,IAAgBpC,MAAM,CAACe,MAA3B,EAAmC;AACjC,WAAOkB,cAAc,CAACjC,MAAM,CAACe,MAAR,EAAgBqB,EAAhB,CAArB;AACD;;AAED,MAAIvB,aAAa,CAACuB,EAAD,CAAjB,EAAuB;AACrB;AACD;;AACDvB,EAAAA,aAAa,CAACuB,EAAD,CAAb,GAAoB,IAApB;AAEA,MAAIsC,MAAM,GAAG1E,MAAM,CAAC2E,KAAP,CAAavC,EAAb,CAAb;AAEAtB,EAAAA,cAAc,CAACH,IAAf,CAAoB,CAACX,MAAD,EAASoC,EAAT,CAApB;;AAEA,MAAIsC,MAAM,IAAIA,MAAM,CAACtE,GAAjB,IAAwBsE,MAAM,CAACtE,GAAP,CAAWG,gBAAX,CAA4B+D,MAAxD,EAAgE;AAC9D,WAAO,IAAP;AACD;;AAED,SAAON,UAAU,CAAC9B,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAAV,CAAqCwC,IAArC,CAA0C,UAAUxC,EAAV,EAAc;AAC7D,WAAOH,cAAc,CAACC,MAAM,CAACC,aAAR,EAAuBC,EAAvB,CAArB;AACD,GAFM,CAAP;AAGD;;AAED,SAASO,YAAT,CAAsB3C,MAAtB,EAA8BoC,EAA9B,EAAkC;AAChC,MAAIsC,MAAM,GAAG1E,MAAM,CAAC2E,KAAP,CAAavC,EAAb,CAAb;AACApC,EAAAA,MAAM,CAACM,OAAP,GAAiB,EAAjB;;AACA,MAAIoE,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACtE,GAAP,CAAWC,IAAX,GAAkBL,MAAM,CAACM,OAAzB;AACD;;AAED,MAAIoE,MAAM,IAAIA,MAAM,CAACtE,GAAjB,IAAwBsE,MAAM,CAACtE,GAAP,CAAWI,iBAAX,CAA6B8D,MAAzD,EAAiE;AAC/DI,IAAAA,MAAM,CAACtE,GAAP,CAAWI,iBAAX,CAA6BqB,OAA7B,CAAqC,UAAUgD,EAAV,EAAc;AACjDA,MAAAA,EAAE,CAAC7E,MAAM,CAACM,OAAR,CAAF;AACD,KAFD;AAGD;;AAED,SAAON,MAAM,CAAC2E,KAAP,CAAavC,EAAb,CAAP;AACApC,EAAAA,MAAM,CAACoC,EAAD,CAAN;AAEAsC,EAAAA,MAAM,GAAG1E,MAAM,CAAC2E,KAAP,CAAavC,EAAb,CAAT;;AACA,MAAIsC,MAAM,IAAIA,MAAM,CAACtE,GAAjB,IAAwBsE,MAAM,CAACtE,GAAP,CAAWG,gBAAX,CAA4B+D,MAAxD,EAAgE;AAC9DI,IAAAA,MAAM,CAACtE,GAAP,CAAWG,gBAAX,CAA4BsB,OAA5B,CAAoC,UAAUgD,EAAV,EAAc;AAChDA,MAAAA,EAAE;AACH,KAFD;;AAGA,WAAO,IAAP;AACD;AACF","file":"example.77de5100.js","sourceRoot":"..\\example","sourcesContent":["\r\n/**\r\n * @author yellow 2020/10/28\r\n * 判断运行环境是否是Node\r\n */\r\nconst isNode = (function (): boolean {\r\n    return typeof window['process'] === 'object' && String(window['process']) === '[object process]' && !window['process'][\"browser\"];\r\n})();\r\n\r\n\r\n\r\nexport { isNode }\r\n","import { isNode } from './isNode';\r\n\r\n/**\r\n * 浏览器属性\r\n */\r\ninterface IBrowser {\r\n    ie: boolean,\r\n    ielt9: boolean,\r\n    edge: boolean,\r\n    webkit: boolean,\r\n    gecko: boolean,\r\n    android: boolean,\r\n    android23: boolean,\r\n    chrome: boolean,\r\n    chromeVersion: string,\r\n    safari: boolean,\r\n    phantomjs: boolean,\r\n    ie3d: boolean,\r\n    webkit3d: boolean,\r\n    gecko3d: boolean,\r\n    opera12: boolean,\r\n    any3d: boolean,\r\n    mobile: boolean,\r\n    mobileWebkit: boolean,\r\n    mobileWebkit3d: boolean,\r\n    mobileOpera: boolean,\r\n    mobileGecko: boolean,\r\n    touch: boolean,\r\n    msPointer: boolean,\r\n    pointer: boolean,\r\n    retina: boolean,\r\n    devicePixelRatio: number,\r\n    language: string,\r\n    ie9: boolean,\r\n    ie10: boolean,\r\n    webgl: boolean\r\n}\r\n\r\nlet browser: IBrowser;\r\n\r\nif (!isNode) {\r\n    const ua = navigator.userAgent.toLowerCase(),\r\n        doc = document.documentElement,\r\n        ie = 'ActiveXObject' in window,\r\n        webkit = ua.indexOf('webkit') !== -1,\r\n        phantomjs = ua.indexOf('phantom') !== -1,\r\n        android23 = ua.search('android [23]') !== -1,\r\n        chrome = ua.indexOf('chrome') !== -1,\r\n        gecko = ua.indexOf('gecko') !== -1 && !webkit && !window['opera'] && !ie,\r\n        mobile = typeof orientation !== 'undefined' || ua.indexOf('mobile') !== -1,\r\n        msPointer = !window.PointerEvent && window['MSPointerEvent'],\r\n        pointer = (window.PointerEvent && navigator['pointerEnabled']) || msPointer,\r\n        ie3d = ie && ('transition' in doc.style),\r\n        webkit3d = ('WebKitCSSMatrix' in window) && ('m11' in new window.WebKitCSSMatrix()) && !android23,\r\n        gecko3d = 'MozPerspective' in doc.style,\r\n        opera12 = 'OTransition' in doc.style,\r\n        any3d = (ie3d || webkit3d || gecko3d) && !opera12 && !phantomjs;\r\n    let chromeVersion = '0';\r\n    if (chrome) {\r\n        chromeVersion = ua.match(/chrome\\/([\\d.]+)/)[1];\r\n    }\r\n    const touch = !phantomjs && (pointer || 'ontouchstart' in window ||\r\n        (window['DocumentTouch'] && document instanceof window['DocumentTouch']));\r\n\r\n    let webgl: boolean;\r\n    try {\r\n        const canvas = document.createElement('canvas');\r\n        const gl = canvas.getContext('webgl') ||\r\n            canvas.getContext('experimental-webgl');\r\n        webgl = gl && gl instanceof WebGLRenderingContext;\r\n    } catch (err) {\r\n        webgl = false;\r\n    }\r\n    const devicePixelRatio = (window.devicePixelRatio || (window.screen['deviceXDPI'] / window.screen['logicalXDPI']));\r\n    browser = {\r\n        ie: ie,\r\n        ielt9: ie && !document.addEventListener,\r\n        edge: 'msLaunchUri' in navigator && !('documentMode' in document),\r\n        webkit: webkit,\r\n        gecko: gecko,\r\n        android: ua.indexOf('android') !== -1,\r\n        android23: android23,\r\n        chrome: chrome,\r\n        chromeVersion: chromeVersion,\r\n        safari: !chrome && ua.indexOf('safari') !== -1,\r\n        phantomjs: phantomjs,\r\n        ie3d: ie3d,\r\n        webkit3d: webkit3d,\r\n        gecko3d: gecko3d,\r\n        opera12: opera12,\r\n        any3d: any3d,\r\n        mobile: mobile,\r\n        mobileWebkit: mobile && webkit,\r\n        mobileWebkit3d: mobile && webkit3d,\r\n        mobileOpera: mobile && window['opera'],\r\n        mobileGecko: mobile && gecko,\r\n        touch: !!touch,\r\n        msPointer: !!msPointer,\r\n        pointer: !!pointer,\r\n        retina: devicePixelRatio > 1,\r\n        devicePixelRatio,\r\n        language: navigator['browserLanguage'] ? navigator['browserLanguage'] : navigator.language,\r\n        ie9: (ie && document['documentMode'] === 9),\r\n        ie10: (ie && document['documentMode'] === 10),\r\n        webgl: webgl\r\n    };\r\n}\r\n\r\nexport { browser }","/**\r\n * reference:\r\n *  http://www.css88.com/doc/underscore/docs/underscore.html\r\n */\r\nconst isString = (str: any): boolean => {\r\n    return (typeof str == 'string') && str.constructor == String;\r\n}\r\n\r\nexport { isString }","type fn = (...args: any[]) => void;\r\n\r\n/**\r\n * @description 上下文事件绑定\r\n * @example\r\n * const map = new Globe();\r\n * map.on('update', ()=>{}, map);\r\n */\r\nclass EventEmitter {\r\n    /**\r\n     * 设置单一对象运行绑定事件数量上限\r\n     */\r\n    private maxListener = 8;\r\n\r\n    /**\r\n     * 记录所有绑定事件\r\n     */\r\n    private listeners: Map<string | symbol, Map<EventEmitter, fn[]>> = new Map();\r\n\r\n    /**\r\n     * 注册自定义事件\r\n     * @param name \r\n     * @param listener \r\n     * @param context \r\n     */\r\n    public on = (name: string, listener: fn, context: EventEmitter = undefined): void => {\r\n        const ctx = context || this, listeners = this.listeners;\r\n        if (listeners.get(name) && Array.from(listeners.get(name).values()).length >= this.maxListener)\r\n            throw new Error(`EventEmitter 错误: 对象注册时间超过最大限制 ${this.maxListener}`);\r\n        if (listeners.get(name) instanceof Map) {\r\n            if (listeners.get(name).get(ctx) && (listeners.get(name).get(ctx).indexOf(listener) === -1))\r\n                listeners.get(name).get(ctx).push(listener);\r\n            else if (!listeners.get(name).get(ctx))\r\n                listeners.get(name).set(ctx, [listener]);\r\n        }\r\n        else listeners.set(name, new Map().set(ctx, [listener]));\r\n    }\r\n\r\n    /**\r\n     * 事件广播\r\n     * @param name \r\n     * @param args \r\n     */\r\n    public emit = (name: string, ...args: any[]): void => {\r\n        const listeners = this.listeners, arr = listeners.get(name);\r\n        arr?.forEach((v: fn[], ctx: EventEmitter) => {\r\n            v?.forEach(cb => cb.call(ctx, ...args));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param name \r\n     * @param listener \r\n     * @param context \r\n     */\r\n    public off = (name: string, listener: fn, context: EventEmitter = undefined): void => {\r\n        const ctx = context || this, listeners = this.listeners;\r\n        const arr = listeners.has(name) && listeners.get(name).has(ctx) ? listeners.get(name).get(ctx) : [];\r\n        const i = arr.indexOf(listener);\r\n        if (i >= 0)\r\n            arr.splice(i, 1);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param name \r\n     */\r\n    public removeAllListener = (name: string): void => {\r\n        this.listeners.delete(name);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param name \r\n     * @param listener \r\n     * @param context \r\n     */\r\n    public once = (name: string, listener: fn, context: EventEmitter = undefined): void => {\r\n        const fn = (...args: any[]) => {\r\n            listener.apply(this, args);\r\n            this.off(name, fn, context);\r\n        }\r\n        this.on(name, fn, context);\r\n    }\r\n}\r\n\r\nexport { EventEmitter }","/**\r\n * reference:\r\n * https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/common.js\r\n * \r\n * switch to es6 syntax\r\n * @author yellow 2017/5/8\r\n */\r\n/**\r\n * the degree to rad factor\r\n * @type {number}\r\n */\r\nconst DEGREE = Math.PI / 180;\r\n\r\n/**\r\n * @class\r\n */\r\nexport class GLMatrix {\r\n    /**\r\n     * the precision to indicate two value is equal\r\n     */\r\n    static EPSILON: number = 1e-6;\r\n    /**\r\n     * \r\n     */\r\n    static ARRAY_TYPE = Array;\r\n    /**\r\n     * the Math.random adapter\r\n     */\r\n    static RANDOM = Math.random;\r\n    /**\r\n     * the default setting to use SIMD\r\n     */\r\n    static ENABLE_SIMD: boolean = true;\r\n    /**\r\n     * \r\n     * @param deg Angle in Degrees\r\n     */\r\n    static toRadian = function (deg: number): number {\r\n        return deg * DEGREE;\r\n    };\r\n    /**\r\n     * Convert rad to degree\r\n     * @param rad Angle in Radian\r\n     */\r\n    static toDegree = function (rad: number): number {\r\n        return rad / DEGREE;\r\n    };\r\n    /**\r\n     * True if the numbers are approximately equal, false otherwise.\r\n     * @param a The first number to test.\r\n     * @param b The second number to test.\r\n     */\r\n    static equals = function (a: number, b: number): boolean {\r\n        return Math.abs(a - b) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\r\n    };\r\n}","/**\r\n * reference https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat3.js\r\n * switch to es6 syntax,and change to quote\r\n * warning:if you don't want to change the source value,please use mat3.clone().* instead of mat3.*\r\n * @author yellow 2017/5/8\r\n */\r\nimport {GLMatrix} from './GLMatrix';\r\nimport {Mat4} from './Mat4';\r\nimport {Quat} from './Quat';\r\nimport {Vec2} from './Vec2';\r\n\r\n/**\r\n * @class\r\n */\r\nexport class Mat3 {\r\n    /**\r\n     * \r\n     */\r\n    _out: number[];\r\n    /**\r\n     * an array to store the 3*3 matrix data\r\n     * creates a new identity mat3\r\n     * example:\r\n     * [1,0,0]\r\n     * [0,1,0]\r\n     * [0,0,1]\r\n     */\r\n    constructor() {\r\n        this._out = new Array(9);\r\n        this._out[0] = 1;\r\n        this._out[1] = 0;\r\n        this._out[2] = 0;\r\n        this._out[3] = 0;\r\n        this._out[4] = 1;\r\n        this._out[5] = 0;\r\n        this._out[6] = 0;\r\n        this._out[7] = 0;\r\n        this._out[8] = 1;\r\n    }\r\n    /**\r\n     * adapter for webgl matrix\r\n     * get the array directly\r\n     * @memberof mat3\r\n     * @return {Array}\r\n     */\r\n    get value() {\r\n        return this._out;\r\n    }\r\n    /**\r\n     * set matrix value\r\n     */\r\n    set(m00: number, m01: number, m02: number, m10: number, m11: number, m12: number, m20: number, m21: number, m22: number): Mat3 {\r\n        this._out[0] = m00;\r\n        this._out[1] = m01;\r\n        this._out[2] = m02;\r\n        this._out[3] = m10;\r\n        this._out[4] = m11;\r\n        this._out[5] = m12;\r\n        this._out[6] = m20;\r\n        this._out[7] = m21;\r\n        this._out[8] = m22;\r\n        return this;\r\n    }\r\n    /**\r\n     * clone the mat3 matrix\r\n     * @return {Mat3}\r\n     */\r\n    clone(): Mat3 {\r\n        const mat = new Mat3().set(\r\n            this._out[0], this._out[1], this._out[2],\r\n            this._out[3], this._out[4], this._out[5],\r\n            this._out[6], this._out[7], this._out[8]);\r\n        return mat;\r\n    }\r\n    /**\r\n     * Copies the upper-left 3x3 values into the given mat3.\r\n     * construct from mat4\r\n     * @param mat \r\n     */\r\n    static fromMat4(mat: Mat4): Mat3 {\r\n        const m = new Mat3();\r\n        m.set(\r\n            mat.value[0], mat.value[1], mat.value[2],\r\n            mat.value[4], mat.value[5], mat.value[6],\r\n            mat.value[8], mat.value[9], mat.value[10]\r\n        );\r\n        return m;\r\n    }\r\n    /**\r\n    * Set a mat3 to the identity matrix\r\n    * @method identity\r\n    * @param {Mat3} out the receiving matrix\r\n    * @returns {mat3} out\r\n    */\r\n    identity(): Mat3 {\r\n        this._out[0] = 1;\r\n        this._out[1] = 0;\r\n        this._out[2] = 0;\r\n        this._out[3] = 0;\r\n        this._out[4] = 1;\r\n        this._out[5] = 0;\r\n        this._out[6] = 0;\r\n        this._out[7] = 0;\r\n        this._out[8] = 1;\r\n        return this;\r\n    }\r\n    /**\r\n     * Inverts a mat3\r\n     * @method invert\r\n     */\r\n    invert() {\r\n        const [a00, a01, a02, a10, a11, a12, a20, a21, a22] = this._out;\r\n        const b01 = a22 * a11 - a12 * a21,\r\n            b11 = -a22 * a10 + a12 * a20,\r\n            b21 = a21 * a10 - a11 * a20;\r\n        let det = a00 * b01 + a01 * b11 + a02 * b21;\r\n        if (!det)\r\n            return null;\r\n        det = 1.0 / det;\r\n        this._out[0] = b01 * det;\r\n        this._out[1] = (-a22 * a01 + a02 * a21) * det;\r\n        this._out[2] = (a12 * a01 - a02 * a11) * det;\r\n        this._out[3] = b11 * det;\r\n        this._out[4] = (a22 * a00 - a02 * a20) * det;\r\n        this._out[5] = (-a12 * a00 + a02 * a10) * det;\r\n        this._out[6] = b21 * det;\r\n        this._out[7] = (-a21 * a00 + a01 * a20) * det;\r\n        this._out[8] = (a11 * a00 - a01 * a10) * det;\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculates the adjugate of a mat3\r\n     * \r\n     */\r\n    adjoint() {\r\n        let [a00, a01, a02, a10, a11, a12, a20, a21, a22] = this._out;\r\n        this._out[0] = (a11 * a22 - a12 * a21);\r\n        this._out[1] = (a02 * a21 - a01 * a22);\r\n        this._out[2] = (a01 * a12 - a02 * a11);\r\n        this._out[3] = (a12 * a20 - a10 * a22);\r\n        this._out[4] = (a00 * a22 - a02 * a20);\r\n        this._out[5] = (a02 * a10 - a00 * a12);\r\n        this._out[6] = (a10 * a21 - a11 * a20);\r\n        this._out[7] = (a01 * a20 - a00 * a21);\r\n        this._out[8] = (a00 * a11 - a01 * a10);\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculates the determinant of a mat3\r\n     */\r\n    determinant() {\r\n        const [a00, a01, a02, a10, a11, a12, a20, a21, a22] = this._out;\r\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n    }\r\n    /**\r\n     * Multiplies other mat3\r\n     * @param {Mat3} mat a matrix 3*3 wait to multiply\r\n     */\r\n    multiply(mat: Mat3): Mat3 {\r\n        const [a00, a01, a02, a10, a11, a12, a20, a21, a22] = this._out;\r\n        const [b00, b01, b02, b10, b11, b12, b20, b21, b22] = mat.value;\r\n        this._out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n        this._out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n        this._out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n        this._out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n        this._out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n        this._out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n        this._out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n        this._out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n        this._out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n        return this;\r\n    }\r\n    /**\r\n     * Translate a mat3 by the given vector\r\n     * @param {vec2} v vetor to translate by\r\n     * @return {mat3} \r\n     */\r\n    translate(v: Vec2): Mat3 {\r\n        const [a00, a01, a02, a10, a11, a12, a20, a21, a22] = this.value;\r\n        const [x, y] = v.value;\r\n        this._out[0] = a00;\r\n        this._out[1] = a01;\r\n        this._out[2] = a02;\r\n        this._out[3] = a10;\r\n        this._out[4] = a11;\r\n        this._out[5] = a12;\r\n        this._out[6] = x * a00 + y * a10 + a20;\r\n        this._out[7] = x * a01 + y * a11 + a21;\r\n        this._out[8] = x * a02 + y * a12 + a22;\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotates a mat3 by the given angle\r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     */\r\n    rotate(rad: number): Mat3 {\r\n        const [a00, a01, a02, a10, a11, a12, a20, a21, a22] = this._out;\r\n        const s = Math.sin(rad), c = Math.cos(rad);\r\n        this._out[0] = c * a00 + s * a10;\r\n        this._out[1] = c * a01 + s * a11;\r\n        this._out[2] = c * a02 + s * a12;\r\n        this._out[3] = c * a10 - s * a00;\r\n        this._out[4] = c * a11 - s * a01;\r\n        this._out[5] = c * a12 - s * a02;\r\n        this._out[6] = a20;\r\n        this._out[7] = a21;\r\n        this._out[8] = a22;\r\n        return this;\r\n    }\r\n    /**\r\n     * Scales the mat3 by the dimensions in the given vec\r\n     * @param v \r\n     */\r\n    scale(v: Vec2): Mat3 {\r\n        const [x, y] = v.value;\r\n        this._out[0] = x * this._out[0];\r\n        this._out[1] = x * this._out[1];\r\n        this._out[2] = x * this._out[2];\r\n        this._out[3] = y * this._out[3];\r\n        this._out[4] = y * this._out[4];\r\n        this._out[5] = y * this._out[5];\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculates a 3x3 matrix from the given quaternion\r\n     * @param {quat} q Quaternion to create matrix from\r\n     */\r\n    fromQuat(q: Quat): Mat3 {\r\n        const [x, y, z, w] = q.value;\r\n        const x2 = x + x,\r\n            y2 = y + y,\r\n            z2 = z + z,\r\n            xx = x * x2,\r\n            yx = y * x2,\r\n            yy = y * y2,\r\n            zx = z * x2,\r\n            zy = z * y2,\r\n            zz = z * z2,\r\n            wx = w * x2,\r\n            wy = w * y2,\r\n            wz = w * z2;\r\n        const m = new Mat3().set(\r\n            1 - yy - zz, yx + wz, zx - wy,\r\n            yx - wz, 1 - xx - zz, zy + wx,\r\n            zx + wy, zy - wx, 1 - xx - yy)\r\n        return m;\r\n    }\r\n    /**\r\n     * \r\n     * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n     * @param {mat4} mat \r\n     */\r\n    normalFromMat4(mat: Mat4): Mat3 {\r\n        const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = mat.value;\r\n        const b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32;\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n        if (!det) throw new Error(\"行列式计算失败\");\r\n        det = 1.0 / det;\r\n        let m00 = (a11 * b11 - a12 * b10 + a13 * b09) * det,\r\n            m01 = (a12 * b08 - a10 * b11 - a13 * b07) * det,\r\n            m02 = (a10 * b10 - a11 * b08 + a13 * b06) * det,\r\n            m10 = (a02 * b10 - a01 * b11 - a03 * b09) * det,\r\n            m11 = (a00 * b11 - a02 * b08 + a03 * b07) * det,\r\n            m12 = (a01 * b08 - a00 * b10 - a03 * b06) * det,\r\n            m20 = (a31 * b05 - a32 * b04 + a33 * b03) * det,\r\n            m21 = (a32 * b02 - a30 * b05 - a33 * b01) * det,\r\n            m22 = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        let _mat = new Mat3().set(\r\n            m00, m01, m02,\r\n            m10, m11, m12,\r\n            m20, m21, m22);\r\n        return _mat;\r\n    }\r\n    /**\r\n     * Returns a string representation of a mat3\r\n     */\r\n    toString() {\r\n        return 'mat3(' + this._out[0] + ', ' + this._out[1] + ', ' + this._out[2] + ', ' + this._out[3] + ', ' + this._out[4] + ', ' + this._out[5] + ', ' + this._out[6] + ', ' + this._out[7] + ', ' + this._out[8] + ')';\r\n    }\r\n    /**\r\n     * Returns Frobenius norm of a mat3 \r\n     * mat3 Frobenius norm\r\n     */\r\n    frob() {\r\n        return (Math.sqrt(Math.pow(this._out[0], 2) + Math.pow(this._out[1], 2) + Math.pow(this._out[2], 2) + Math.pow(this._out[3], 2) + Math.pow(this._out[4], 2) + Math.pow(this._out[5], 2) + Math.pow(this._out[6], 2) + Math.pow(this._out[7], 2) + Math.pow(this._out[8], 2)))\r\n    }\r\n    /**\r\n     * Adds two mat3's\r\n     * @param {Mat3} mat \r\n     * @return {Mat3}\r\n     */\r\n    add(mat: Mat3): Mat3 {\r\n        this._out[0] += mat.value[0];\r\n        this._out[1] += mat.value[1];\r\n        this._out[2] += mat.value[2];\r\n        this._out[3] += mat.value[3];\r\n        this._out[4] += mat.value[4];\r\n        this._out[5] += mat.value[5];\r\n        this._out[6] += mat.value[6];\r\n        this._out[7] += mat.value[7];\r\n        this._out[8] += mat.value[8];\r\n        return this;\r\n    }\r\n    /**\r\n     * Subtracts matrix b from matrix a\r\n     * @param {Mat3} mat \r\n     * @return {Mat3}\r\n     */\r\n    sub(mat: Mat3): Mat3 {\r\n        this._out[0] -= mat.value[0];\r\n        this._out[1] -= mat.value[1];\r\n        this._out[2] -= mat.value[2];\r\n        this._out[3] -= mat.value[3];\r\n        this._out[4] -= mat.value[4];\r\n        this._out[5] -= mat.value[5];\r\n        this._out[6] -= mat.value[6];\r\n        this._out[7] -= mat.value[7];\r\n        this._out[8] -= mat.value[8];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @param {any} mat \r\n     * @memberof mat3\r\n     */\r\n    equals(mat: Mat3): boolean {\r\n        const [a0, a1, a2, a3, a4, a5, a6, a7, a8] = this._out;\r\n        const [b0, b1, b2, b3, b4, b5, b6, b7, b8] = mat.value;\r\n        return (Math.abs(a0 - b0) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n            Math.abs(a1 - b1) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n            Math.abs(a2 - b2) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n            Math.abs(a3 - b3) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\r\n            Math.abs(a4 - b4) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\r\n            Math.abs(a5 - b5) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\r\n            Math.abs(a6 - b6) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\r\n            Math.abs(a7 - b7) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\r\n            Math.abs(a8 - b8) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)));\r\n    }\r\n}","/**\r\n * reference https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec3.js\r\n * switch to es6 syntax\r\n * warning:if you don't want to change the source value,please use vec3.clone().* instead of vec3.*\r\n * @author yellow 2017/5/8\r\n * \r\n */\r\n\r\n import { GLMatrix } from \"./GLMatrix\";\r\nimport { Mat3 } from \"./Mat3\";\r\nimport { Mat4 } from \"./Mat4\";\r\nimport { Quat } from \"./Quat\";\r\n\r\n/**\r\n * @class 3 Dimensional Vector\r\n */\r\nexport class Vec3 {\r\n    /**\r\n     * array store for vec3\r\n     */\r\n    private _out: number[];\r\n    /**\r\n     * Creates a new, empty vec3\r\n     */\r\n    constructor() {\r\n        this._out = new Array(3);\r\n        this._out[0] = 0;\r\n        this._out[1] = 0;\r\n        this._out[2] = 0;\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get x() {\r\n        return this._out[0];\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get y() {\r\n        return this._out[1];\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get z() {\r\n        return this._out[2];\r\n    }\r\n    /**\r\n     * adapter for webgl matrix\r\n     * get the array directly\r\n     * @memberof vec3\r\n     * @return {Array}\r\n     */\r\n    get value() {\r\n        return this._out;\r\n    }\r\n    /**\r\n     * set value of v0 v1 v2\r\n     */\r\n    set(x: number, y: number, z: number) {\r\n        this._out[0] = x;\r\n        this._out[1] = y;\r\n        this._out[2] = z;\r\n        return this;\r\n    }\r\n    /**\r\n     * Creates a new vec3 initialized with values from an existing vector\r\n     */\r\n    clone(): Vec3 {\r\n        let vec = new Vec3();\r\n        vec.set(this._out[0], this._out[1], this._out[2]);\r\n        return vec;\r\n    }\r\n    /**\r\n     * Adds two vec3's\r\n     * @param {vec3} vec \r\n     */\r\n    add(vec: Vec3): Vec3 {\r\n        this._out[0] += vec._out[0];\r\n        this._out[1] += vec._out[1];\r\n        this._out[2] += vec._out[2];\r\n        return this;\r\n    }\r\n    /**\r\n     * Subtracts vector vec from vector this\r\n     * @param {vec3} vec\r\n     */\r\n    sub(vec: Vec3): Vec3 {\r\n        this._out[0] -= vec._out[0];\r\n        this._out[1] -= vec._out[1];\r\n        this._out[2] -= vec._out[2];\r\n        return this;\r\n    }\r\n    /**\r\n     * Multiplies two vec3's\r\n     */\r\n    multiply(vec: Vec3): Vec3 {\r\n        this._out[0] *= vec._out[0];\r\n        this._out[1] *= vec._out[1];\r\n        this._out[2] *= vec._out[2];\r\n        return this;\r\n    }\r\n    /**\r\n     * Divides two vec3's\r\n     * @param vec \r\n     */\r\n    divide(vec: Vec3): Vec3 {\r\n        this._out[0] /= vec._out[0];\r\n        this._out[1] /= vec._out[1];\r\n        this._out[2] /= vec._out[2];\r\n        return this;\r\n    }\r\n    /**\r\n     * Math.ceil the components of a vec3\r\n     */\r\n    ceil(): Vec3 {\r\n        this._out[0] = Math.ceil(this._out[0]);\r\n        this._out[1] = Math.ceil(this._out[1]);\r\n        this._out[2] = Math.ceil(this._out[2]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Math.floor the components of a vec3\r\n     */\r\n    floor(): Vec3 {\r\n        this._out[0] = Math.floor(this._out[0]);\r\n        this._out[1] = Math.floor(this._out[1]);\r\n        this._out[2] = Math.floor(this._out[2]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Math.round the components of a vec3\r\n     */\r\n    round() {\r\n        this._out[0] = Math.round(this._out[0]);\r\n        this._out[1] = Math.round(this._out[1]);\r\n        this._out[2] = Math.round(this._out[2]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the minimum of two vec3's\r\n     */\r\n    min(vec: Vec3): Vec3 {\r\n        this._out[0] = Math.min(this._out[0], vec._out[0]);\r\n        this._out[1] = Math.min(this._out[1], vec._out[1]);\r\n        this._out[2] = Math.min(this._out[2], vec._out[2]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the maximum of two vec3's\r\n     */\r\n    max(vec: Vec3): Vec3 {\r\n        this._out[0] = Math.max(this._out[0], vec._out[0]);\r\n        this._out[1] = Math.max(this._out[1], vec._out[1]);\r\n        this._out[2] = Math.max(this._out[2], vec._out[2]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Scales a vec3 by a scalar number\r\n     * @param {number} n amount to scale the vector by\r\n     */\r\n    scale(n: number): Vec3 {\r\n        this._out[0] *= n;\r\n        this._out[1] *= n;\r\n        this._out[2] *= n;\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculates the euclidian distance between two vec3's\r\n     * @param {vec3} vec\r\n     */\r\n    distance(vec: Vec3): number {\r\n        const [x0, y0, z0] = this._out,\r\n            [x1, y1, z1] = vec._out,\r\n            x = x0 - x1,\r\n            y = y0 - y1,\r\n            z = z0 - z1;\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n    /**\r\n     * Calculates the length of a vec3\r\n     */\r\n    len() {\r\n        return this.distance(new Vec3());\r\n    }\r\n    /**\r\n     * Negates the components of a vec3\r\n     */\r\n    negate() {\r\n        this._out[0] = -this._out[0];\r\n        this._out[1] = -this._out[1];\r\n        this._out[2] = -this._out[2];\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the inverse of the components of a vec3\r\n     */\r\n    inverse() {\r\n        this._out[0] = 1.0 / this._out[0];\r\n        this._out[1] = 1.0 / this._out[1];\r\n        this._out[2] = 1.0 / this._out[2];\r\n        return this;\r\n    }\r\n    /**\r\n     * Normalize a vec3\r\n     */\r\n    normalize() {\r\n        let len = this.len();\r\n        if (len > 0) {\r\n            this._out[0] /= len;\r\n            this._out[1] /= len;\r\n            this._out[2] /= len;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculates the dot product of two vec3's\r\n     * @param {vec3} vec\r\n     */\r\n    dot(vec: Vec3): number {\r\n        let [x0, y0, z0] = this._out,\r\n            [x1, y1, z1] = vec._out;\r\n        return x0 * x1 + y0 * y1 + z0 * z1;\r\n    }\r\n    /**\r\n     * Computes the cross product of two vec3's\r\n     * https://webgl2fundamentals.org/webgl/lessons/webgl-3d-camera.html\r\n     * calcue the perpendicular vec3 \r\n     * @param {Vec3} v3\r\n     * @return {Vec3}\r\n     * @example\r\n     * let v3_out = v3_in1.clone().cross(v3_in2);\r\n     * the v3_out perpendicular to v3_in1 and v3_in2\r\n     */\r\n    cross(v3: Vec3): Vec3 {\r\n        let [ax, ay, az] = this._out,\r\n            [bx, by, bz] = v3.value;\r\n        this._out[0] = ay * bz - az * by;\r\n        this._out[1] = az * bx - ax * bz;\r\n        this._out[2] = ax * by - ay * bx;\r\n        return this;\r\n    }\r\n    /**\r\n     * Performs a linear interpolation between two vec3's\r\n     * @param {Vec3} vec\r\n     * @param {number} t\r\n     */\r\n    lerp(vec: Vec3, t: number): Vec3 {\r\n        let [ax, ay, az] = this._out,\r\n            [bx, by, bz] = vec._out;\r\n        this._out[0] = ax + t * (bx - ax);\r\n        this._out[1] = ay + t * (by - ay);\r\n        this._out[2] = az + t * (bz - az);\r\n        return this;\r\n    }\r\n    /**\r\n     * Performs a hermite interpolation with two control points\r\n     * @param {Vec3} v1\r\n     * @param {Vec3} v1\r\n     * @param {Vec3} v1\r\n     * @param {number} t interpolation amount between the two inputs\r\n     */\r\n    hermite(v1: Vec3, v2: Vec3, v3: Vec3, t: number): Vec3 {\r\n        const factorTimes2 = t * t,\r\n            factor1 = factorTimes2 * (2 * t - 3) + 1,\r\n            factor2 = factorTimes2 * (t - 2) + t,\r\n            factor3 = factorTimes2 * (t - 1),\r\n            factor4 = factorTimes2 * (3 - 2 * t);\r\n        this._out[0] = this._out[0] * factor1 + v1._out[0] * factor2 + v2._out[0] * factor3 + v3._out[0] * factor4;\r\n        this._out[1] = this._out[1] * factor1 + v1._out[1] * factor2 + v2._out[1] * factor3 + v3._out[1] * factor4;\r\n        this._out[2] = this._out[2] * factor1 + v1._out[2] * factor2 + v2._out[2] * factor3 + v3._out[2] * factor4;\r\n        return this;\r\n    }\r\n    /**\r\n     * Performs a bezier interpolation with two control points\r\n     * @param {Vec3} v1\r\n     * @param {Vec3} v2\r\n     * @param {Vec3} v3\r\n     * @param {Number} t interpolation amount between the two inputs\r\n     */\r\n    bezier(v1: Vec3, v2: Vec3, v3: Vec3, t: number): Vec3 {\r\n        const inverseFactor = 1 - t,\r\n            inverseFactorTimesTwo = inverseFactor * inverseFactor,\r\n            factorTimes2 = t * t,\r\n            factor1 = inverseFactorTimesTwo * inverseFactor,\r\n            factor2 = 3 * t * inverseFactorTimesTwo,\r\n            factor3 = 3 * factorTimes2 * inverseFactor,\r\n            factor4 = factorTimes2 * t;\r\n        this._out[0] = this._out[0] * factor1 + v1._out[0] * factor2 + v2._out[0] * factor3 + v3._out[0] * factor4;\r\n        this._out[1] = this._out[1] * factor1 + v1._out[1] * factor2 + v2._out[1] * factor3 + v3._out[1] * factor4;\r\n        this._out[2] = this._out[2] * factor1 + v1._out[2] * factor2 + v2._out[2] * factor3 + v3._out[2] * factor4;\r\n        return this\r\n    }\r\n    /**\r\n     * Transforms the vec3 with a mat4.\r\n     * 4th vector component is implicitly '1'\r\n     * @param {mat4} mat the 4x4 matrix to transform with\r\n     */\r\n    transformMat4(mat: Mat4): Vec3 {\r\n        const [x, y, z] = this._out,\r\n            w = (mat.value[3] * x + mat.value[7] * y + mat.value[11] * z + mat.value[15]) || 1.0;\r\n        this._out[0] = (mat.value[0] * x + mat.value[4] * y + mat.value[8] * z + mat.value[12]) / w;\r\n        this._out[1] = (mat.value[1] * x + mat.value[5] * y + mat.value[9] * z + mat.value[13]) / w;\r\n        this._out[2] = (mat.value[2] * x + mat.value[6] * y + mat.value[10] * z + mat.value[14]) / w;\r\n        return this;\r\n    }\r\n    /**\r\n     * Transforms the vec3 with a mat3.\r\n     * @param {mat3} mat  the 3x3 matrix to transform with\r\n     */\r\n    transformMat3(mat: Mat3): Vec3 {\r\n        const [x, y, z] = this._out;\r\n        this._out[0] = x * mat._out[0] + y * mat._out[3] + z * mat._out[6];\r\n        this._out[1] = x * mat._out[1] + y * mat._out[4] + z * mat._out[7];\r\n        this._out[2] = x * mat._out[2] + y * mat._out[5] + z * mat._out[8];\r\n        return this;\r\n    }\r\n    /**\r\n     * returns a string represent vec3\r\n     */\r\n    toString(): string {\r\n        return 'vec3(' + this._out[0] + ', ' + this._out[1] + ', ' + this._out[2] + ')';\r\n    }\r\n    /**\r\n     * ransforms the vec3 with a quat\r\n     * benchmarks: http://jsperf.com/quaternion-transform-vec3-implementations\r\n     * @param {quat} q quaternion to transform with\r\n     */\r\n    transformQuat(q: Quat): Vec3 {\r\n        let [x, y, z] = this._out,\r\n            [qx, qy, qz, qw] = q.value,\r\n            // calculate quat * vec\r\n            ix = qw * x + qy * z - qz * y,\r\n            iy = qw * y + qz * x - qx * z,\r\n            iz = qw * z + qx * y - qy * x,\r\n            iw = -qx * x - qy * y - qz * z;\r\n        this._out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        this._out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        this._out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotate a 3D vector around the x-axis\r\n     * @param {Vec3} v the origin of the rotation\r\n     * @param {number} c the angle of rotation\r\n     */\r\n    rotateX(v: Vec3, c: number): Vec3 {\r\n        var p = [], r = [];\r\n        //Translate point to the origin\r\n        p[0] = this._out[0] - v._out[0];\r\n        p[1] = this._out[1] - v._out[1];\r\n        p[2] = this._out[2] - v._out[2];\r\n        //perform rotation\r\n        r[0] = p[0];\r\n        r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n        r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n        //translate to correct position\r\n        this._out[0] = r[0] + v.value[0];\r\n        this._out[1] = r[1] + v.value[1];\r\n        this._out[2] = r[2] + v.value[2];\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotate a 3D vector around the y-axis\r\n     * @param {Vec3} v The origin of the rotation\r\n     * @param {number} c The angle of rotation\r\n     */\r\n    rotateY(v: Vec3, c: number): Vec3 {\r\n        var p = [], r = [];\r\n        //Translate point to the origin\r\n        p[0] = this._out[0] - v._out[0];\r\n        p[1] = this._out[1] - v._out[1];\r\n        p[2] = this._out[2] - v._out[2];\r\n        //perform rotation\r\n        r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n        r[1] = p[1];\r\n        r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n        //translate to correct position\r\n        this._out[0] = r[0] + v.value[0];\r\n        this._out[1] = r[1] + v.value[1];\r\n        this._out[2] = r[2] + v.value[2];\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotate a 3D vector around the z-axis\r\n     * @param {Vec3} v The origin of the rotation\r\n     * @param {number} c the angle of rotation\r\n     */\r\n    rotateZ(v: Vec3, c: number): Vec3 {\r\n        var p = [], r = [];\r\n        //Translate point to the origin\r\n        p[0] = this._out[0] - v._out[0];\r\n        p[1] = this._out[1] - v._out[1];\r\n        p[2] = this._out[2] - v._out[2];\r\n        //perform rotation\r\n        r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n        r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n        r[2] = p[2];\r\n        //translate to correct position\r\n        this._out[0] = r[0] + v.value[0];\r\n        this._out[1] = r[1] + v.value[1];\r\n        this._out[2] = r[2] + v.value[2];\r\n        return this;\r\n    }\r\n    /**\r\n     * calcute the angle between two 3D vectors\r\n     * @param {Vec3} v the second vector\r\n     */\r\n    angle(v: Vec3): number {\r\n        const va = this.clone().normalize(),\r\n            vb = v.clone().normalize();\r\n        const cosine = va.clone().dot(vb);\r\n        if (cosine > 1.0)\r\n            return 0;\r\n        else if (cosine < -1.0)\r\n            return Math.PI;\r\n        else\r\n            return Math.acos(cosine);\r\n    }\r\n    /**\r\n     * reference:\r\n     * https://github.com/mrdoob/three.js/blob/dev/src/math/Vector3.js\r\n     * @typedef {import(\"./Quat\")} Quat \r\n     * @param {Quat} q\r\n     */\r\n    applyQuat(q: Quat): Vec3 {\r\n        //\r\n        const x = this.x, y = this.y, z = this.z,\r\n            qx = q.x, qy = q.y, qz = q.z, qw = q.w;\r\n        // calculate quat * vector\r\n        const ix = qw * x + qy * z - qz * y,\r\n            iy = qw * y + qz * x - qx * z,\r\n            iz = qw * z + qx * y - qy * x,\r\n            iw = - qx * x - qy * y - qz * z;\r\n        // calculate result * inverse quat\r\n        this._out[0] = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n        this._out[1] = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n        this._out[2] = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n        //\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same position.\r\n     */\r\n    equals(vec: Vec3): boolean {\r\n        const [a0, a1, a2] = this._out,\r\n            [b0, b1, b2] = vec._out;\r\n        return (Math.abs(a0 - b0) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n            Math.abs(a1 - b1) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n            Math.abs(a2 - b2) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)));\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    applyMatrix4(m4: Mat4): Vec3 {\r\n        const x = this.x, y = this.y, z = this.z;\r\n        const w = 1 / (m4.value[3] * x + m4.value[7] * y + m4.value[11] * z + m4.value[15]);\r\n        const x1 = (m4.value[0] * x + m4.value[4] * y + m4.value[8] * z + m4.value[12]) * w,\r\n            y1 = (m4.value[1] * x + m4.value[5] * y + m4.value[9] * z + m4.value[13]) * w,\r\n            z1 = (m4.value[2] * x + m4.value[6] * y + m4.value[10] * z + m4.value[14]) * w;\r\n        this.set(x1, y1, z1);\r\n        return this;\r\n    }\r\n}","/**\r\n * reference https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/quat.js\r\n * switch to es6 syntax\r\n * warning:if you don't want to change the source value,please use quat.clone().* instead of quat.*\r\n * @author yellow 2017/5/10\r\n */\r\n\r\nimport { GLMatrix } from \"./GLMatrix\";\r\nimport { Mat3 } from \"./Mat3\";\r\nimport { Mat4 } from \"./Mat4\";\r\nimport { Vec3 } from \"./Vec3\";\r\n\r\n\r\n/**\r\n * @class Quaternion\r\n * @name quat\r\n */\r\nexport class Quat {\r\n    /**\r\n     * \r\n     */\r\n    private _out: number[];\r\n    /**\r\n     * \r\n     */\r\n    private _r1: Vec3;\r\n    /**\r\n     * \r\n     */\r\n    private _r2: Vec3;\r\n    /**\r\n     * \r\n     */\r\n    private _r3: Vec3;\r\n    /**\r\n     * \r\n     */\r\n    private _s1: Quat;\r\n    /**\r\n     * \r\n     */\r\n    private _s2: Quat;\r\n    /**\r\n     * quat array store\r\n     * Creates a new identity quat\r\n     */\r\n    constructor() {\r\n        this._out = new Array(4);\r\n        this._out[0] = 0;\r\n        this._out[1] = 0;\r\n        this._out[2] = 0;\r\n        this._out[3] = 1;\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get x() {\r\n        return this._out[0];\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get y() {\r\n        return this._out[1];\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get z() {\r\n        return this._out[2];\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get w() {\r\n        return this._out[3];\r\n    }\r\n    /**\r\n     * adapter for webgl matrix\r\n     * get the array directly\r\n     * @memberof quat\r\n     * @return {Array}\r\n     */\r\n    get value() {\r\n        return this._out;\r\n    }\r\n    /**\r\n     * generic a quat from mat3\r\n     * @param {mat3} mat the 3x3 matrix \r\n     */\r\n    static fromMat3(mat: Mat3): Quat {\r\n        // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n        // article \"Quaternion Calculus and Fast Animation\".\r\n        const qua = new Quat(),\r\n            fTrace = mat.value[0] + mat.value[4] + mat.value[8];\r\n        let fRoot;\r\n        if (fTrace > 0.0) {\r\n            // |w| > 1/2, may as well choose w > 1/2\r\n            fRoot = Math.sqrt(fTrace + 1.0);  // 2w\r\n            qua._out[3] = 0.5 * fRoot;\r\n            fRoot = 0.5 / fRoot;  // 1/(4w)\r\n            qua._out[0] = (mat._out[5] - mat._out[7]) * fRoot;\r\n            qua._out[1] = (mat._out[6] - mat._out[2]) * fRoot;\r\n            qua._out[2] = (mat._out[1] - mat._out[3]) * fRoot;\r\n        } else {\r\n            // |w| <= 1/2\r\n            let i = 0;\r\n            if (mat.value[4] > mat.value[0]) i = 1;\r\n            if (mat.value[8] > mat.value[i * 3 + i]) i = 2;\r\n            var j = (i + 1) % 3;\r\n            var k = (i + 2) % 3;\r\n            fRoot = Math.sqrt(mat._out[i * 3 + i] - mat._out[j * 3 + j] - mat._out[k * 3 + k] + 1.0);\r\n            qua._out[i] = 0.5 * fRoot;\r\n            fRoot = 0.5 / fRoot;\r\n            qua._out[3] = (mat._out[j * 3 + k] - mat._out[k * 3 + j]) * fRoot;\r\n            qua._out[j] = (mat._out[j * 3 + i] + mat._out[i * 3 + j]) * fRoot;\r\n            qua._out[k] = (mat._out[k * 3 + i] + mat._out[i * 3 + k]) * fRoot;\r\n        }\r\n        return qua;\r\n    }\r\n    /**\r\n     * set the value of quat\r\n     * @param x \r\n     * @param y \r\n     * @param z \r\n     * @param w \r\n     */\r\n    set(x: number, y: number, z: number, w: number): Quat {\r\n        this._out[0] = x;\r\n        this._out[1] = y;\r\n        this._out[2] = z;\r\n        this._out[3] = w;\r\n        return this;\r\n    }\r\n    /**\r\n     * Creates a new quat initialized with values from an existing quaternion\r\n     */\r\n    clone(): Quat {\r\n        const qua = new Quat();\r\n        qua.set(qua._out[0], qua._out[1], qua._out[2], qua._out[3]);\r\n        return qua;\r\n    }\r\n    /**\r\n     * Set a quat to the identity quaternion\r\n     */\r\n    identity(): Quat {\r\n        this._out[0] = 0;\r\n        this._out[1] = 0;\r\n        this._out[2] = 0;\r\n        this._out[3] = 1;\r\n        return this;\r\n    }\r\n    /**\r\n     * https://github.com/toji/gl-matrix/blob/master/src/quat.js\r\n     * @param v1 the initial vector\r\n     * @param v2 the destination vector\r\n     */\r\n    rotationTo(v1: Vec3, v2: Vec3): Quat {\r\n        this._r1 = this._r1 || new Vec3();\r\n        this._r2 = this._r2 || new Vec3().set(1, 0, 0);\r\n        this._r3 = this._r3 || new Vec3().set(0, 1, 0);\r\n        const dot = v1.dot(v2);\r\n        if (dot < -0.999999) {\r\n            this._r1 = this._r3.clone().cross(v1);\r\n            if (this._r1.len() < 0.000001) this._r1 = this._r3.clone().cross(v1);\r\n            this._r3.normalize();\r\n            this.setAxisAngle(this._r1, Math.PI);\r\n            return this;\r\n        } else if (dot > 0.999999) {\r\n            this._out[0] = 0;\r\n            this._out[1] = 0;\r\n            this._out[2] = 0;\r\n            this._out[3] = 1;\r\n            return this;\r\n        } else {\r\n            this._r1 = v1.clone().cross(v2);\r\n            this._out[0] = this._r1.value[0];\r\n            this._out[1] = this._r1.value[1];\r\n            this._out[2] = this._r1.value[2];\r\n            this._out[3] = 1 + dot;\r\n            return this.normalize();\r\n        }\r\n    }\r\n    /**\r\n     * Sets the specified quaternion with values corresponding to the given\r\n     * axes. Each axis is a vec3 and is expected to be unit length and\r\n     * perpendicular to all other specified axes.\r\n     * @param {Vec3} vv  the vector representing the viewing direction\r\n     * @param {Vec3} vr the vector representing the local \"right\" direction\r\n     * @param {Vec3} vu    the vector representing the local \"up\" direction\r\n     */\r\n    setAxes(vv: Vec3, vr: Vec3, vu: Vec3): Quat {\r\n        const mat = new Mat3().set(\r\n            vr.value[0], vu.value[0], -vv.value[0],\r\n            vr.value[1], vu.value[1], -vv.value[1],\r\n            vr.value[2], vu.value[2], -vv.value[2]\r\n        );\r\n        return Quat.fromMat3(mat);\r\n    }\r\n    /**\r\n     * Sets a quat from the given angle and rotation axis,\r\n     * then returns it.\r\n     * @param {Vec3} axis the axis around which to rotate\r\n     * @param {number} rad\r\n     */\r\n    setAxisAngle(axis: Vec3, rad: number): Quat {\r\n        rad = rad * 0.5;\r\n        const s = Math.sin(rad);\r\n        this._out[0] = s * axis.value[0];\r\n        this._out[1] = s * axis.value[1];\r\n        this._out[2] = s * axis.value[2];\r\n        this._out[3] = Math.cos(rad);\r\n        return this;\r\n    }\r\n    /**\r\n     * https://github.com/mrdoob/three.js/blob/280cc9211b736dd728c37a3e355aa51fb1cf2a42/src/math/Quaternion.js#L352\r\n     * assumes direction vectors vFrom and vTo are normalized\r\n     * @param {Vec3} vFrom \r\n     * @param {Vec3} vTo \r\n     */\r\n    setFromUnitVectors(vFrom: Vec3, vTo: Vec3): Quat {\r\n        let r = vFrom.clone().dot(vTo) + 1;\r\n        let x, y, z, w;\r\n        if (r < GLMatrix.EPSILON) {\r\n            r = 0;\r\n            if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\r\n                x = - vFrom.y;\r\n                y = vFrom.x;\r\n                z = 0;\r\n                w = r;\r\n            } else {\r\n                x = 0;\r\n                y = - vFrom.z;\r\n                z = vFrom.y;\r\n                w = r;\r\n            }\r\n        } else {\r\n            // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\r\n            x = vFrom.y * vTo.z - vFrom.z * vTo.y;\r\n            y = vFrom.z * vTo.x - vFrom.x * vTo.z;\r\n            z = vFrom.x * vTo.y - vFrom.y * vTo.x;\r\n            w = r;\r\n        }\r\n        return this.set(x, y, z, w).normalize();\r\n    }\r\n    /**\r\n     * http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n     */\r\n    setFromRotationMatrix(m: Mat4): Quat {\r\n        const te = m.value,\r\n            m11 = te[0], m12 = te[4], m13 = te[8],\r\n            m21 = te[1], m22 = te[5], m23 = te[9],\r\n            m31 = te[2], m32 = te[6], m33 = te[10],\r\n            trace = m11 + m22 + m33;\r\n        let s, w, x, y, z;\r\n        if (trace > 0) {\r\n            s = 0.5 / Math.sqrt(trace + 1.0);\r\n            w = 0.25 / s;\r\n            x = (m32 - m23) * s;\r\n            y = (m13 - m31) * s;\r\n            z = (m21 - m12) * s;\r\n        } else if (m11 > m22 && m11 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n            w = (m32 - m23) / s;\r\n            x = 0.25 * s;\r\n            y = (m12 + m21) / s;\r\n            z = (m13 + m31) / s;\r\n        } else if (m22 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n            w = (m13 - m31) / s;\r\n            x = (m12 + m21) / s;\r\n            y = 0.25 * s;\r\n            z = (m23 + m32) / s;\r\n        } else {\r\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n            w = (m21 - m12) / s;\r\n            x = (m13 + m31) / s;\r\n            y = (m23 + m32) / s;\r\n            z = 0.25 * s;\r\n        }\r\n        return this.set(x, y, z, w);\r\n    }\r\n    /**\r\n     * Gets the rotation axis and angle for a given quaternion. \r\n     * If a quaternion is created with setAxisAngle, \r\n     * this method will return the same values as providied in the original parameter list OR functionally equivalent values.\r\n     * @example The quaternion formed by axis [0, 0, 1] and angle -90 is the same as the quaternion formed by [0, 0, 1] and 270. \r\n     *          This method favors the latter.\r\n     * @return [axis,angle]\r\n     */\r\n    getAxisAngle() {\r\n        const rad = Math.acos(this._out[3]) * 2.0,\r\n            s = Math.sin(rad / 2.0),\r\n            axis = new Vec3();\r\n        s === 0.0 ? axis.set(1, 0, 0) : axis.set(this._out[0] / s, this._out[1] / s, this._out[2] / s);\r\n        return [axis, rad];\r\n    }\r\n    /**\r\n     * add two quat's\r\n     * @param {Quat} qua \r\n     */\r\n    add(qua: Quat): Quat {\r\n        this._out[0] += qua._out[0];\r\n        this._out[1] += qua._out[1];\r\n        this._out[2] += qua._out[2];\r\n        this._out[3] += qua._out[3];\r\n        return this;\r\n    }\r\n    /**\r\n     * Multiplies two quat's\r\n     */\r\n    multiply(qua: Quat): Quat {\r\n        const [ax, ay, az, aw] = this.value,\r\n            [bx, by, bz, bw] = qua.value;\r\n        this._out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n        this._out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n        this._out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n        this._out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {number} s\r\n     */\r\n    scale(s: number): Quat {\r\n        this._out[0] *= s;\r\n        this._out[1] *= s;\r\n        this._out[2] *= s;\r\n        this._out[3] *= s;\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotates a quaternion by the given angle about the X axis\r\n     * @param {number} rad angle (in radians) to rotate\r\n     */\r\n    rotateX(rad: number): Quat {\r\n        rad *= 0.5;\r\n        const [ax, ay, az, aw] = this.value,\r\n            bx = Math.sin(rad),\r\n            bw = Math.cos(rad);\r\n        this._out[0] = ax * bw + aw * bx;\r\n        this._out[1] = ay * bw + az * bx;\r\n        this._out[2] = az * bw - ay * bx;\r\n        this._out[3] = aw * bw - ax * bx;\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotates a quaternion by the given angle about the Y axis\r\n     * @param {number} rad angle (in radians) to rotate\r\n     */\r\n    rotateY(rad: number): Quat {\r\n        rad *= 0.5;\r\n        const [ax, ay, az, aw] = this._out,\r\n            by = Math.sin(rad),\r\n            bw = Math.cos(rad);\r\n        this._out[0] = ax * bw - az * by;\r\n        this._out[1] = ay * bw + aw * by;\r\n        this._out[2] = az * bw + ax * by;\r\n        this._out[3] = aw * bw - ay * by;\r\n        return this;\r\n    }\r\n    /**\r\n     * Rotates a quaternion by the given angle about the Z axis\r\n     * @param {number} rad angle (in radians) to rotate\r\n     */\r\n    rotateZ(rad: number): Quat {\r\n        rad *= 0.5;\r\n        const [ax, ay, az, aw] = this._out,\r\n            bz = Math.sin(rad),\r\n            bw = Math.cos(rad);\r\n        this._out[0] = ax * bw + ay * bz;\r\n        this._out[1] = ay * bw - ax * bz;\r\n        this._out[2] = az * bw + aw * bz;\r\n        this._out[3] = aw * bw - az * bz;\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculates the W component of a quat from the X, Y, and Z components.\r\n     * Assumes that quaternion is 1 unit in length\r\n     * Any existing W component will be ignored.\r\n     */\r\n    calculateW() {\r\n        let [x, y, z, w] = this._out;\r\n        this._out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculates the dot product of two quat's\r\n     * @return {number} dot product of two quat's\r\n     */\r\n    dot(qua: Quat): number {\r\n        const [x0, y0, z0, w0] = this._out,\r\n            [x1, y1, z1, w1] = qua.value;\r\n        return x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1;\r\n    }\r\n    /**\r\n     * Performs a linear interpolation between two quat's\r\n     * @param {Quat} qua the second operand\r\n     * @param {Number} t interpolation amount between the two inputs\r\n     */\r\n    lerp(qua: Quat, t: number): Quat {\r\n        const [ax, ay, az, aw] = this._out;\r\n        this._out[0] = ax + t * (qua.value[0] - ax);\r\n        this._out[1] = ay + t * (qua.value[1] - ay);\r\n        this._out[2] = az + t * (qua.value[2] - az);\r\n        this._out[3] = aw + t * (qua.value[3] - aw);\r\n        return this;\r\n    }\r\n    /**\r\n     * Performs a spherical linear interpolation between two quat\r\n     * benchmarks: http://jsperf.com/quaternion-slerp-implementations\r\n     */\r\n    slerp(a: Quat, b: Quat, t: number): Quat {\r\n        let [ax, ay, az, aw] = a.value,\r\n            [bx, by, bz, bw] = b.value,\r\n            omega, cosom, sinom, scale0, scale1;\r\n        // calc cosine\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary)\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = - bx;\r\n            by = - by;\r\n            bz = - bz;\r\n            bw = - bw;\r\n        }\r\n        // calculate coefficients\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            // standard case (slerp)\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" quaternions are very close \r\n            //  ... so we can do a linear interpolation\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values\r\n        this._out[0] = scale0 * ax + scale1 * bx;\r\n        this._out[1] = scale0 * ay + scale1 * by;\r\n        this._out[2] = scale0 * az + scale1 * bz;\r\n        this._out[3] = scale0 * aw + scale1 * bw;\r\n        return this;\r\n    }\r\n    /**\r\n     * Performs a spherical linear interpolation with two control points\r\n     * @param {Quat} quaI\r\n     * @param {Quat} quaII\r\n     * @param {Quat} quaIII\r\n     * @return\r\n     */\r\n    sqlerp(q1: Quat, q2: Quat, q3: Quat, q4: Quat, t: number): Quat {\r\n        //a.slerp(d,t)  b.slerp(c,t)\r\n        this._s1 =  this._s1 || new Quat();\r\n        this._s2 =  this._s2 || new Quat();\r\n        this._s1 = this._s1.clone().slerp(q1, q4, t);\r\n        this._s2 = this._s2.clone().slerp(q2, q3, t);\r\n        const qua = new Quat().slerp(this._s1, this._s2, 2 * t * (1 - t));\r\n        return qua;\r\n    }\r\n    /**\r\n     * Calculates the inverse of a quat\r\n     * @return {Quat} the inversed quat \r\n     */\r\n    invert(): Quat {\r\n        const [a0, a1, a2, a3] = this._out,\r\n            dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3,\r\n            invDot = dot ? 1.0 / dot : 0;\r\n        this._out[0] = -a0 * invDot;\r\n        this._out[1] = -a1 * invDot;\r\n        this._out[2] = -a2 * invDot;\r\n        this._out[3] = a3 * invDot;\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculates the conjugate of a quat\r\n     * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\r\n     */\r\n    conjugate(): Quat {\r\n        this._out[0] = -this._out[0];\r\n        this._out[1] = -this._out[1];\r\n        this._out[2] = -this._out[2];\r\n        return this;\r\n    }\r\n    /**\r\n     * retrun the length of quat\r\n     * @return {number} \r\n     */\r\n    len(): number {\r\n        const [x, y, z, w] = this._out;\r\n        return Math.sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n    /**\r\n     * Normalize a quat\r\n     */\r\n    normalize(): Quat {\r\n        const len = this.len();\r\n        if (len > 0) {\r\n            this._out[0] /= len;\r\n            this._out[0] /= len;\r\n            this._out[0] /= len;\r\n            this._out[0] /= len;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns a string representation of a quatenion\r\n     * @returns {String} string representation of the vector\r\n     */\r\n    toString(): string {\r\n        return 'quat(' + this._out[0] + ', ' + this._out[1] + ', ' + this._out[2] + ', ' + this._out[3] + ')';\r\n    }\r\n    /**\r\n     * Returns whether or not the quat have approximately the same elements in the same position.\r\n     * @param \r\n     */\r\n    equals(qua: Quat): boolean {\r\n        const [a0, a1, a2, a3] = this._out,\r\n            [b0, b1, b2, b3] = qua._out;\r\n        return (Math.abs(a0 - b0) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n            Math.abs(a1 - b1) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n            Math.abs(a2 - b2) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n            Math.abs(a3 - b3) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)));\r\n    }\r\n}","/**\r\n * reference https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/mat4.js\r\n * switch to es6 syntax\r\n * warning:if you don't want to change the source value,please use mat4.clone().* instead of mat4.* (* means matrix operations)\r\n * @author yellow 2017/5/10\r\n * translation:\r\n * [1, 0, 0, 0,\r\n *  0, 1, 0, 0,\r\n *  0, 0, 1, 0,\r\n *  tx,ty,tz,1]\r\n * x-rotation:\r\n * [1, 0, 0, 0,\r\n *  0, c, s, 0,\r\n *  0,-s, c, 0,\r\n *  0, 0, 0, 1]\r\n * y-rotation:\r\n * [c, 0,-s, 0,\r\n *  0, 1, 0, 0,\r\n *  s, 0, c, 0,\r\n *  0, 0, 0, 1]\r\n * z-rotation:\r\n * [c, s, 0, 0,\r\n *  -s,c, s, 0,\r\n *  0, 0, 1, 0,\r\n *  0, 0, 0, 1]\r\n * scale:\r\n * [sx,0, 0, 0,\r\n *  0, sy,0, 0,\r\n *  0, 0, sz,0,\r\n *  0, 0, 0, 1]\r\n * notice that multlpy as translation*vec\r\n */\r\nimport { GLMatrix } from \"./GLMatrix\";\r\nimport { Mat3 } from \"./Mat3\";\r\nimport { Quat } from \"./Quat\";\r\nimport { Vec3 } from \"./Vec3\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport class Mat4 {\r\n    /**\r\n     * 4x4 matrix array store\r\n     */\r\n    private _out: number[];\r\n\r\n    /**\r\n     *  Creates a new identity mat4\r\n     */\r\n    constructor() {\r\n        this._out = new Array(16);\r\n        this._out[0] = 1;\r\n        this._out[1] = 0;\r\n        this._out[2] = 0;\r\n        this._out[3] = 0;\r\n        this._out[4] = 0;\r\n        this._out[5] = 1;\r\n        this._out[6] = 0;\r\n        this._out[7] = 0;\r\n        this._out[8] = 0;\r\n        this._out[9] = 0;\r\n        this._out[10] = 1;\r\n        this._out[11] = 0;\r\n        this._out[12] = 0;\r\n        this._out[13] = 0;\r\n        this._out[14] = 0;\r\n        this._out[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * adapter for webgl matrix\r\n     * get the array directly\r\n     * @memberof mat4\r\n     * @return {Array}\r\n     */\r\n    get value():number[] {\r\n        return this._out;\r\n    }\r\n\r\n    /**\r\n     * set the value of 4x4 matrix\r\n     */\r\n    set(m00: number, m01: number, m02: number, m03: number,\r\n        m10: number, m11: number, m12: number, m13: number,\r\n        m20: number, m21: number, m22: number, m23: number,\r\n        m30: number, m31: number, m32: number, m33: number): Mat4 {\r\n        this._out[0] = m00;\r\n        this._out[1] = m01;\r\n        this._out[2] = m02;\r\n        this._out[3] = m03;\r\n        this._out[4] = m10;\r\n        this._out[5] = m11;\r\n        this._out[6] = m12;\r\n        this._out[7] = m13;\r\n        this._out[8] = m20;\r\n        this._out[9] = m21;\r\n        this._out[10] = m22;\r\n        this._out[11] = m23;\r\n        this._out[12] = m30;\r\n        this._out[13] = m31;\r\n        this._out[14] = m32;\r\n        this._out[15] = m33;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Creates a new mat4 initialized with values from an existing matrix\r\n     */\r\n    clone():Mat4 {\r\n        let mat = new Mat4();\r\n        mat.set(this._out[0], this._out[1], this._out[2], this._out[3],\r\n            this._out[4], this._out[5], this._out[6], this._out[7],\r\n            this._out[8], this._out[9], this._out[10], this._out[11],\r\n            this._out[12], this._out[13], this._out[14], this._out[15]);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Set a mat4 to the identity matrix\r\n     */\r\n    identity(): Mat4 {\r\n        this.set(\r\n            1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * reference:\r\n     * https://github.com/AnalyticalGraphicsInc/cesium/blob/8c0ff591ce557d9660104676e27ed2e42a846f0b/Source/Core/Matrix4.js#L2337\r\n     */\r\n    inverseTransformation():Mat4 {\r\n\r\n        var matrix0 = this._out[0];\r\n        var matrix1 = this._out[1];\r\n        var matrix2 = this._out[2];\r\n        var matrix4 = this._out[4];\r\n        var matrix5 = this._out[5];\r\n        var matrix6 = this._out[6];\r\n        var matrix8 = this._out[8];\r\n        var matrix9 = this._out[9];\r\n        var matrix10 = this._out[10];\r\n\r\n        var vX = this._out[12];\r\n        var vY = this._out[13];\r\n        var vZ = this._out[14];\r\n\r\n        var x = -matrix0 * vX - matrix1 * vY - matrix2 * vZ;\r\n        var y = -matrix4 * vX - matrix5 * vY - matrix6 * vZ;\r\n        var z = -matrix8 * vX - matrix9 * vY - matrix10 * vZ;\r\n\r\n        this._out[0] = matrix0;\r\n        this._out[1] = matrix4;\r\n        this._out[2] = matrix8;\r\n        this._out[3] = 0.0;\r\n        this._out[4] = matrix1;\r\n        this._out[5] = matrix5;\r\n        this._out[6] = matrix9;\r\n        this._out[7] = 0.0;\r\n        this._out[8] = matrix2;\r\n        this._out[9] = matrix6;\r\n        this._out[10] = matrix10;\r\n        this._out[11] = 0.0;\r\n        this._out[12] = x;\r\n        this._out[13] = y;\r\n        this._out[14] = z;\r\n        this._out[15] = 1.0;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Inverts a mat4\r\n     */\r\n    invert():Mat4 {\r\n        //deconstruction assignment\r\n        const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = this._out,\r\n            b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32;\r\n        // Calculate the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n        if (!det)\r\n            return null;\r\n        det = 1.0 / det;\r\n        this._out = [(a11 * b11 - a12 * b10 + a13 * b09) * det, (a02 * b10 - a01 * b11 - a03 * b09) * det, (a31 * b05 - a32 * b04 + a33 * b03) * det, (a22 * b04 - a21 * b05 - a23 * b03) * det,\r\n        (a12 * b08 - a10 * b11 - a13 * b07) * det, (a00 * b11 - a02 * b08 + a03 * b07) * det, (a32 * b02 - a30 * b05 - a33 * b01) * det, (a20 * b05 - a22 * b02 + a23 * b01) * det,\r\n        (a10 * b10 - a11 * b08 + a13 * b06) * det, (a01 * b08 - a00 * b10 - a03 * b06) * det, (a30 * b04 - a31 * b02 + a33 * b00) * det, (a21 * b02 - a20 * b04 - a23 * b00) * det,\r\n        (a11 * b07 - a10 * b09 - a12 * b06) * det, (a00 * b09 - a01 * b07 + a02 * b06) * det, (a31 * b01 - a30 * b03 - a32 * b00) * det, (a20 * b03 - a21 * b01 + a22 * b00) * det];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Transpose the values of a mat4\r\n     */\r\n    transpose():Mat4 {\r\n        //store value\r\n        const a01 = this._out[1],\r\n            a02 = this._out[2],\r\n            a03 = this._out[3],\r\n            a12 = this._out[6],\r\n            a13 = this._out[7],\r\n            a23 = this._out[11];\r\n        //transpos value itself\r\n        this._out[1] = this._out[4];\r\n        this._out[2] = this._out[8];\r\n        this._out[3] = this._out[12];\r\n        this._out[4] = a01;\r\n        this._out[6] = this._out[9];\r\n        this._out[7] = this._out[13];\r\n        this._out[8] = a02;\r\n        this._out[9] = a12;\r\n        this._out[11] = this._out[14];\r\n        this._out[12] = a03;\r\n        this._out[13] = a13;\r\n        this._out[14] = a23;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Calculates the adjugate of a mat4 not using SIMD\r\n     */\r\n    adjoint():Mat4 {\r\n        const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = this._out;\r\n        this._out[0] = (a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22));\r\n        this._out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n        this._out[2] = (a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12));\r\n        this._out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n        this._out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n        this._out[5] = (a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22));\r\n        this._out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n        this._out[7] = (a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12));\r\n        this._out[8] = (a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21));\r\n        this._out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n        this._out[10] = (a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11));\r\n        this._out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n        this._out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n        this._out[13] = (a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21));\r\n        this._out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n        this._out[15] = (a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11));\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Calculates the determinant of a mat4\r\n     * @return {number} determinant of this matrix\r\n     */\r\n    determinant():number {\r\n        const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = this._out;\r\n        let b00 = a00 * a11 - a01 * a10,\r\n            b01 = a00 * a12 - a02 * a10,\r\n            b02 = a00 * a13 - a03 * a10,\r\n            b03 = a01 * a12 - a02 * a11,\r\n            b04 = a01 * a13 - a03 * a11,\r\n            b05 = a02 * a13 - a03 * a12,\r\n            b06 = a20 * a31 - a21 * a30,\r\n            b07 = a20 * a32 - a22 * a30,\r\n            b08 = a20 * a33 - a23 * a30,\r\n            b09 = a21 * a32 - a22 * a31,\r\n            b10 = a21 * a33 - a23 * a31,\r\n            b11 = a22 * a33 - a23 * a32;\r\n        // Calculate the determinant\r\n        return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {import('./Vec3')} position \r\n     * @param {import('./Quat')} quaternion \r\n     * @param {import('./Vec3')} scale \r\n     */\r\n    decompose():{ position:Vec3, quaternion:Quat, scale:Vec3} {\r\n        let sx = new Vec3().set(this._out[0], this._out[1], this._out[2]).len(),\r\n            sy = new Vec3().set(this._out[4], this._out[5], this._out[6]).len(),\r\n            sz = new Vec3().set(this._out[8], this._out[9], this._out[10]).len();\r\n        const det = this.determinant();\r\n        if (det < 0) sx = -sx;\r\n        const position = new Vec3().set(this._out[12], this._out[13], this._out[14]);\r\n        const invSX = 1 / sx,\r\n            invSY = 1 / sy,\r\n            invSZ = 1 / sz;\r\n        const m1 = this.clone();\r\n        m1._out[0] *= invSX;\r\n        m1._out[1] *= invSX;\r\n        m1._out[2] *= invSX;\r\n        m1._out[4] *= invSY;\r\n        m1._out[5] *= invSY;\r\n        m1._out[6] *= invSY;\r\n        m1._out[8] *= invSZ;\r\n        m1._out[9] *= invSZ;\r\n        m1._out[10] *= invSZ;\r\n        const quaternion = new Quat().setFromRotationMatrix(this);\r\n        const scale = new Vec3().set(sx, sy, sz);\r\n        return { position, quaternion, scale };\r\n    }\r\n\r\n    /**\r\n     * Multiplies two mat4's explicitly not using SIMD\r\n     * @param {Mat4} mat\r\n     */\r\n    multiply(mat: Mat4): Mat4 {\r\n        const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = this._out;\r\n        // Cache only the current line of the second matrix\r\n        let b0 = mat.value[0], b1 = mat.value[1], b2 = mat.value[2], b3 = mat.value[3];\r\n        this._out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this._out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this._out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this._out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = mat.value[4]; b1 = mat.value[5]; b2 = mat.value[6]; b3 = mat.value[7];\r\n        this._out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this._out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this._out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this._out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = mat.value[8]; b1 = mat.value[9]; b2 = mat.value[10]; b3 = mat.value[11];\r\n        this._out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this._out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this._out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this._out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = mat.value[12]; b1 = mat.value[13]; b2 = mat.value[14]; b3 = mat.value[15];\r\n        this._out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        this._out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        this._out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        this._out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * add two 4x4 matrixs \r\n     */\r\n    add(mat: Mat4): Mat4 {\r\n        this._out[0] += mat.value[0];\r\n        this._out[1] += mat.value[1];\r\n        this._out[2] += mat.value[2];\r\n        this._out[3] += mat.value[3];\r\n        this._out[4] += mat.value[4];\r\n        this._out[5] += mat.value[5];\r\n        this._out[6] += mat.value[6];\r\n        this._out[7] += mat.value[7];\r\n        this._out[8] += mat.value[8];\r\n        this._out[9] += mat.value[9];\r\n        this._out[10] += mat.value[10];\r\n        this._out[11] += mat.value[11];\r\n        this._out[12] += mat.value[12];\r\n        this._out[13] += mat.value[13];\r\n        this._out[14] += mat.value[14];\r\n        this._out[15] += mat.value[15];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Translate a mat4 by the given vector not using SIMD\r\n     * @param {Vec3} v3 vector to translate by\r\n     * @return {Mat4}\r\n     * @example\r\n     *  let m4=new mat4();\r\n     *  m4.translate(new vec3(1,0,4));\r\n     *  m4.getTranslation(); \r\n     */\r\n    translate(v3: Vec3): Mat4 {\r\n        const [x, y, z] = v3.value,\r\n            [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23, a30, a31, a32, a33] = this._out;\r\n        this._out[12] = a00 * x + a10 * y + a20 * z + a30;\r\n        this._out[13] = a01 * x + a11 * y + a21 * z + a31;\r\n        this._out[14] = a02 * x + a12 * y + a22 * z + a32;\r\n        this._out[15] = a03 * x + a13 * y + a23 * z + a33;\r\n        return this;\r\n    }\r\n    \r\n    /**\r\n     * Scales the mat4 by the dimensions in the given vec3 not using vectorization\r\n     * @param {Vec3} vec the vec3 to scale the matrix by\r\n     */\r\n    scale(vec: Vec3): Mat4 {\r\n        let [x, y, z] = vec.value;\r\n        this._out[0] *= x;\r\n        this._out[1] *= x;\r\n        this._out[2] *= x;\r\n        this._out[3] *= x;\r\n        this._out[4] *= y;\r\n        this._out[5] *= y;\r\n        this._out[6] *= y;\r\n        this._out[7] *= y;\r\n        this._out[8] *= z;\r\n        this._out[9] *= z;\r\n        this._out[10] *= z;\r\n        this._out[11] *= z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Rotates a mat4 by the given angle around the given axis\r\n     * @param {number} rad the angle to rotate the matrix by\r\n     * @param {Vec3} axis the axis to rotate around\r\n     */\r\n    rotate(rad: number, axis: Vec3): Mat4 {\r\n        const [a00, a01, a02, a03, a10, a11, a12, a13, a20, a21, a22, a23] = this.value;\r\n        let [x, y, z] = axis.value,\r\n            len = axis.len();\r\n        if (Math.abs(len) < GLMatrix.EPSILON) throw new Error(\"旋转角度过小\");\r\n        const det = 1.0 / len;\r\n        x *= det;\r\n        y *= det;\r\n        z *= det;\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            t = 1 - c,\r\n            // Construct the elements of the rotation matrix\r\n            b00 = x * x * t + c,\r\n            b01 = y * x * t + z * s,\r\n            b02 = z * x * t - y * s,\r\n            b10 = x * y * t - z * s,\r\n            b11 = y * y * t + c,\r\n            b12 = z * y * t + x * s,\r\n            b20 = x * z * t + y * s,\r\n            b21 = y * z * t - x * s,\r\n            b22 = z * z * t + c;\r\n        // Perform rotation-specific matrix multiplication\r\n        this._out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        this._out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        this._out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        this._out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        this._out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        this._out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        this._out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        this._out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        this._out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        this._out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        this._out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        this._out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Rotates a matrix by the given angle around the X axis not using SIMD\r\n     * @param {number} rad\r\n     */\r\n    rotateX(rad: number): Mat4 {\r\n        const s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a10 = this._out[4],\r\n            a11 = this._out[5],\r\n            a12 = this._out[6],\r\n            a13 = this._out[7],\r\n            a20 = this._out[8],\r\n            a21 = this._out[9],\r\n            a22 = this._out[10],\r\n            a23 = this._out[11];\r\n        // Perform axis-specific matrix multiplication\r\n        this._out[4] = a10 * c + a20 * s;\r\n        this._out[5] = a11 * c + a21 * s;\r\n        this._out[6] = a12 * c + a22 * s;\r\n        this._out[7] = a13 * c + a23 * s;\r\n        this._out[8] = a20 * c - a10 * s;\r\n        this._out[9] = a21 * c - a11 * s;\r\n        this._out[10] = a22 * c - a12 * s;\r\n        this._out[11] = a23 * c - a13 * s;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Rotates a matrix by the given angle around the Y axis not using SIMD\r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     */\r\n    rotateY(rad: number): Mat4 {\r\n        const s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = this._out[0],\r\n            a01 = this._out[1],\r\n            a02 = this._out[2],\r\n            a03 = this._out[3],\r\n            a20 = this._out[8],\r\n            a21 = this._out[9],\r\n            a22 = this._out[10],\r\n            a23 = this._out[11];\r\n        // Perform axis-specific matrix multiplication\r\n        this._out[0] = a00 * c - a20 * s;\r\n        this._out[1] = a01 * c - a21 * s;\r\n        this._out[2] = a02 * c - a22 * s;\r\n        this._out[3] = a03 * c - a23 * s;\r\n        this._out[8] = a00 * s + a20 * c;\r\n        this._out[9] = a01 * s + a21 * c;\r\n        this._out[10] = a02 * s + a22 * c;\r\n        this._out[11] = a03 * s + a23 * c;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Rotates a matrix by the given angle around the Z axis not using SIMD\r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     */\r\n    rotateZ(rad: number): Mat4 {\r\n        const s = Math.sin(rad),\r\n            c = Math.cos(rad),\r\n            a00 = this._out[0],\r\n            a01 = this._out[1],\r\n            a02 = this._out[2],\r\n            a03 = this._out[3],\r\n            a10 = this._out[4],\r\n            a11 = this._out[5],\r\n            a12 = this._out[6],\r\n            a13 = this._out[7];\r\n        // Perform axis-specific matrix multiplication\r\n        this._out[0] = a00 * c + a10 * s;\r\n        this._out[1] = a01 * c + a11 * s;\r\n        this._out[2] = a02 * c + a12 * s;\r\n        this._out[3] = a03 * c + a13 * s;\r\n        this._out[4] = a10 * c - a00 * s;\r\n        this._out[5] = a11 * c - a01 * s;\r\n        this._out[6] = a12 * c - a02 * s;\r\n        this._out[7] = a13 * c - a03 * s;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a vector translation\r\n     * This is equivalent to (but much faster than):\r\n     *      mat4.identity(dest);\r\n     *      mat4.translate(dest, dest, vec);\r\n     * @param {Vec3} v3 Translation vector\r\n     */\r\n    static fromVec3Translation(v3: Vec3): Mat4 {\r\n        const [x, y, z] = v3.value,\r\n            m4 = new Mat4();\r\n        m4.set(1, 0, 0, 0,\r\n            0, 1, 0, 0,\r\n            0, 0, 1, 0,\r\n            x, y, z, 1);\r\n        return m4;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {Mat3} rot \r\n     * @param {Vec3} mat \r\n     */\r\n    static fromMat3Translation(rot: Mat3, mat: Vec3): Mat4 {\r\n        return new Mat4().set(\r\n            rot._out[0], rot._out[3], rot._out[6], mat.x,\r\n            rot._out[1], rot._out[4], rot._out[7], mat.y,\r\n            rot._out[2], rot._out[5], rot._out[8], mat.z,\r\n            0.0, 0.0, 0.0, 1.0);\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a vector scaling\r\n     * This is equivalent to (but much faster than):\r\n     *  mat4.identity(dest);\r\n     *  mat4.scale(dest, dest, vec);\r\n     * @param {Vec3} vec Scaling vector\r\n     * @returns {Mat4} \r\n     */\r\n    static fromScaling(vec: Vec3): Mat4 {\r\n        const [x, y, z] = vec.value,\r\n            mat = new Mat4();\r\n        mat.set(x, 0, 0, 0,\r\n            0, y, 0, 0,\r\n            0, 0, z, 0,\r\n            0, 0, 0, 1);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a given angle around a given axis\r\n     * This is equivalent to (but much faster than):\r\n     *  mat4.identity(dest);\r\n     *  mat4.rotate(dest, dest, rad, axis);\r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     * @param {Vec3} axis the axis to rotate around\r\n     */\r\n    static fromRotation(rad: number, axis: Vec3): Mat4 {\r\n        let [x, y, z] = axis.value,\r\n            len = axis.len(),\r\n            mat = new Mat4(),\r\n            s, c, t;\r\n        if (len < GLMatrix.EPSILON) throw new Error(\"构造错误\");\r\n        len = 1.0 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n        // Perform rotation-specific matrix multiplication\r\n        mat.set(x * x * t + c, y * x * t + z * s, z * x * t - y * s, 0,\r\n            x * y * t - z * s, y * y * t + c, z * y * t + x * s, 0,\r\n            x * z * t + y * s, y * z * t - x * s, z * z * t + c, 0,\r\n            0, 0, 0, 1);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from the given angle around the X axis\r\n     * This is equivalent to (but much faster than):\r\n     *  mat4.identity(dest);\r\n     *  mat4.rotateX(dest, dest, rad);\r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     */\r\n    static fromXRotation(rad: number): Mat4 {\r\n        const mat = new Mat4(),\r\n            s = Math.sin(rad),\r\n            c = Math.cos(rad);\r\n        mat.set(1, 0, 0, 0,\r\n            0, c, s, 0,\r\n            0, -s, c, 0,\r\n            0, 0, 0, 1);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from the given angle around the Y axis\r\n     * This is equivalent to (but much faster than):\r\n     *  mat4.identity(dest);\r\n     *  mat4.rotateY(dest, dest, rad);\r\n     * \r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     */\r\n    static fromYRotation(rad: number): Mat4 {\r\n        const mat = new Mat4(),\r\n            s = Math.sin(rad),\r\n            c = Math.cos(rad);\r\n        // Perform axis-specific matrix multiplication\r\n        mat.set(c, 0, -s, 0,\r\n            0, 1, 0, 0,\r\n            s, 0, c, 0,\r\n            0, 0, 0, 1);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from the given angle around the Z axis\r\n     * This is equivalent to (but much faster than):\r\n     *  mat4.identity(dest);\r\n     *  mat4.rotateZ(dest, dest, rad);\r\n     * \r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     */\r\n    static fromZRotation(rad: number): Mat4 {\r\n        const mat = new Mat4(),\r\n            s = Math.sin(rad),\r\n            c = Math.cos(rad);\r\n        // Perform axis-specific matrix multiplication\r\n        mat.set(c, s, 0, 0,\r\n            -s, c, 0, 0,\r\n            0, 0, 1, 0,\r\n            0, 0, 0, 1);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Returns the translation vector component of a transformation\r\n     *  matrix. If a matrix is built with fromRotationTranslation,\r\n     *  the returned vector will be the same as the translation vector\r\n     *  originally supplied.\r\n     * @return {Vec3} out\r\n    */\r\n    getTranslation(): Vec3 {\r\n        const v3 = new Vec3();\r\n        v3.set(this._out[12], this._out[13], this._out[14]);\r\n        return v3;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param {*} v3 \r\n     */\r\n    setTranslation(v3: Vec3): Mat4 {\r\n        this._out[12] = v3.x;\r\n        this._out[13] = v3.y;\r\n        this._out[14] = v3.z;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a quaternion rotation and vector translation\r\n     * This is equivalent to (but much faster than):\r\n     *  mat4.identity(dest);\r\n     *  mat4.translate(dest, vec);\r\n     *  var quatMat = mat4.create();\r\n     *  quat4.toMat4(quat, quatMat);\r\n     *  mat4.multiply(dest, quatMat);\r\n     * \r\n     * @param {quat} qua Rotation quaternion\r\n     * @param {Vec3} vec Translation vector\r\n     */\r\n    static fromRotationTranslation(qua: Quat, vec: Vec3): Mat4 {\r\n        // Quaternion math\r\n        const mat = new Mat4(),\r\n            [x, y, z, w] = qua.value,\r\n            [v0, v1, v2] = vec.value,\r\n            x2 = x + x,\r\n            y2 = y + y,\r\n            z2 = z + z,\r\n            xx = x * x2,\r\n            xy = x * y2,\r\n            xz = x * z2,\r\n            yy = y * y2,\r\n            yz = y * z2,\r\n            zz = z * z2,\r\n            wx = w * x2,\r\n            wy = w * y2,\r\n            wz = w * z2;\r\n        mat.set(1 - (yy + zz), xy + wz, xz - wy, 0,\r\n            xy - wz, 1 - (xx + zz), yz + wx, 0,\r\n            xz + wy, yz - wx, 1 - (xx + yy), 0,\r\n            v0, v1, v2, 1);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Returns the scaling factor component of a transformation\r\n     * matrix. If a matrix is built with fromRotationTranslationScale\r\n     * with a normalized Quaternion paramter, the returned vector will be \r\n     * the same as the scaling vector\r\n     * originally supplied.\r\n     * @return {Vec3} \r\n     */\r\n    getScaling():Vec3 {\r\n        let m11 = this._out[0],\r\n            m12 = this._out[1],\r\n            m13 = this._out[2],\r\n            m21 = this._out[4],\r\n            m22 = this._out[5],\r\n            m23 = this._out[6],\r\n            m31 = this._out[8],\r\n            m32 = this._out[9],\r\n            m33 = this._out[10];\r\n        const x = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13),\r\n            y = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23),\r\n            z = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n        const vec = new Vec3().set(x, y, z);\r\n        return vec;\r\n    }\r\n\r\n    /**\r\n     * Returns a quaternion representing the rotational component\r\n     * of a transformation matrix. If a matrix is built with\r\n     * fromRotationTranslation, the returned quaternion will be the\r\n     * same as the quaternion originally supplied.\r\n     * Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n     * @return {quat} \r\n     */\r\n    getRotation(): Quat {\r\n        let S = 0,\r\n            x, y, z, w,\r\n            qua = new Quat(),\r\n            trace = this._out[0] + this._out[5] + this._out[10];\r\n        if (trace > 0) {\r\n            S = Math.sqrt(trace + 1.0) * 2;\r\n            w = 0.25 * S;\r\n            x = (this._out[6] - this._out[9]) / S;\r\n            y = (this._out[8] - this._out[2]) / S;\r\n            z = (this._out[1] - this._out[4]) / S;\r\n        } else if ((this._out[0] > this._out[5]) && (this._out[0] > this._out[10])) {\r\n            S = Math.sqrt(1.0 + this._out[0] - this._out[5] - this._out[10]) * 2;\r\n            w = (this._out[6] - this._out[9]) / S;\r\n            x = 0.25 * S;\r\n            y = (this._out[1] + this._out[4]) / S;\r\n            z = (this._out[8] + this._out[2]) / S;\r\n        } else if (this._out[5] > this._out[10]) {\r\n            S = Math.sqrt(1.0 + this._out[5] - this._out[0] - this._out[10]) * 2;\r\n            w = (this._out[8] - this._out[2]) / S;\r\n            x = (this._out[1] + this._out[4]) / S;\r\n            y = 0.25 * S;\r\n            z = (this._out[6] + this._out[9]) / S;\r\n        } else {\r\n            S = Math.sqrt(1.0 + this._out[10] - this._out[0] - this._out[5]) * 2;\r\n            w = (this._out[1] - this._out[4]) / S;\r\n            x = (this._out[8] + this._out[2]) / S;\r\n            y = (this._out[6] + this._out[9]) / S;\r\n            z = 0.25 * S;\r\n        }\r\n        qua.set(x, y, z, w);\r\n        return qua;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a quaternion rotation, vector translation and vector scale\r\n     * This is equivalent to (but much faster than):\r\n     *  mat4.identity(dest);\r\n     *  mat4.translate(dest, vec);\r\n     *  var quatMat = mat4.create();\r\n     *  quat4.toMat4(quat, quatMat);\r\n     *  mat4.multiply(dest, quatMat);\r\n     *  mat4.scale(dest, scale)\r\n     * @param {quat} q rotation quaternion\r\n     * @param {Vec3} v translation vector\r\n     * @param {Vec3} s scaling vectoer\r\n     * @return {Mat4} \r\n     */\r\n    static fromRotationTranslationScale(q: Quat, v: Vec3, s: Vec3): Mat4 {\r\n        const mat = new Mat4(),\r\n            [x, y, z, w] = q.value,\r\n            [v0, v1, v2] = v.value,\r\n            [sx, sy, sz] = s.value,\r\n            x2 = x + x,\r\n            y2 = y + y,\r\n            z2 = z + z,\r\n            xx = x * x2,\r\n            xy = x * y2,\r\n            xz = x * z2,\r\n            yy = y * y2,\r\n            yz = y * z2,\r\n            zz = z * z2,\r\n            wx = w * x2,\r\n            wy = w * y2,\r\n            wz = w * z2;\r\n        mat.set((1 - (yy + zz)) * sx, (xy + wz) * sx, (xz - wy) * sx, 0,\r\n            (xy - wz) * sy, (1 - (xx + zz)) * sy, (yz + wx) * sy, 0,\r\n            (xz + wy) * sz, (yz - wx) * sz, (1 - (xx + yy)) * sz, 0,\r\n            v0, v1, v2, 1);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n     * This is equivalent to (but much faster than):\r\n     *  mat4.identity(dest);\r\n     *  mat4.translate(dest, vec);\r\n     *  mat4.translate(dest, origin);\r\n     *  var quatMat = mat4.create();\r\n     *  quat4.toMat4(quat, quatMat);\r\n     *  mat4.multiply(dest, quatMat);\r\n     *  mat4.scale(dest, scale);\r\n     *  mat4.translate(dest, negativeOrigin);\r\n     * \r\n     * @param {quat} q Rotation quaternion\r\n     * @param {Vec3} v Translation vector\r\n     * @param {Vec3} s Scaling vector\r\n     * @param {Vec3} o The origin vector around which to scale and rotate\r\n     * @return {Mat4}\r\n     */\r\n    static fromRotationTranslationScaleOrigin(q: Quat, v: Vec3, s: Vec3, o: Vec3): Mat4 {\r\n        // Quaternion math\r\n        const mat = new Mat4(),\r\n            [x, y, z, w] = q.value,\r\n            [sx, sy, sz] = v.value,\r\n            [ox, oy, oz] = o.value,\r\n            [vx, vy, vz] = v.value,\r\n            x2 = x + x,\r\n            y2 = y + y,\r\n            z2 = z + z,\r\n            xx = x * x2,\r\n            xy = x * y2,\r\n            xz = x * z2,\r\n            yy = y * y2,\r\n            yz = y * z2,\r\n            zz = z * z2,\r\n            wx = w * x2,\r\n            wy = w * y2,\r\n            wz = w * z2;\r\n        const u0 = (1 - (yy + zz)) * sx,\r\n            u1 = (xy + wz) * sx,\r\n            u2 = (xz - wy) * sx,\r\n            u4 = (xy - wz) * sy,\r\n            u5 = (1 - (xx + zz)) * sy,\r\n            u6 = (yz + wx) * sy,\r\n            u8 = (xz + wy) * sz,\r\n            u9 = (yz - wx) * sz,\r\n            u10 = (1 - (xx + yy)) * sz,\r\n            u12 = vx + ox - (u0 * ox + u4 * oy + u8 * oz),\r\n            u13 = vy + oy - (u1 * ox + u5 * oy + u9 * oz),\r\n            u14 = vz + oz - (u2 * ox + u6 * oy + u10 * oz);\r\n        mat.set(u0, u1, u2, 0,\r\n            u4, u5, u6, 0,\r\n            u8, u9, u10, 0,\r\n            u12, u13, u14, 1);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Calculates a 4x4 matrix from the given quaternion\r\n     * @param {quat} q Quaternion to create matrix from\r\n     * @return {Mat4}\r\n     */\r\n    static fromQuat(q: Quat): Mat4 {\r\n        const mat = new Mat4(),\r\n            [x, y, z, w] = q.value,\r\n            x2 = x + x,\r\n            y2 = y + y,\r\n            z2 = z + z,\r\n            xx = x * x2,\r\n            yx = y * x2,\r\n            yy = y * y2,\r\n            zx = z * x2,\r\n            zy = z * y2,\r\n            zz = z * z2,\r\n            wx = w * x2,\r\n            wy = w * y2,\r\n            wz = w * z2;\r\n        mat.set(1 - yy - zz, yx + wz, zx - wy, 0,\r\n            yx - wz, 1 - xx - zz, zy + wx, 0,\r\n            zx + wy, zy - wx, 1 - xx - yy, 0,\r\n            0, 0, 0, 1)\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Generates a frustum matrix with the given bounds\r\n     * @param {Number} l Left bound of the frustum\r\n     * @param {Number} r Right bound of the frustum\r\n     * @param {Number} b Bottom bound of the frustum\r\n     * @param {Number} t Top bound of the frustum\r\n     * @param {Number} n Near bound of the frustum\r\n     * @param {Number} f Far bound of the frustum\r\n     * @return {Mat4}\r\n     */\r\n    static frustum(l: number, r: number, b: number, t: number, n: number, f: number): Mat4 {\r\n        var mat = new Mat4(),\r\n            rl = 1 / (r - l),\r\n            tb = 1 / (t - b),\r\n            nf = 1 / (n - f);\r\n        mat.set((n * 2) * rl, 0, 0, 0,\r\n            0, (n * 2) * tb, 0, 0,\r\n            (r + l) * rl, (t + b) * tb, (f + n) * nf, -1,\r\n            0, 0, (f * n * 2) * nf, 0);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Generates a perspective projection matrix with the given bounds\r\n     * @param {number} fovy Vertical field of view in radians\r\n     * @param {number} aspect Aspect ratio. typically viewport width/height\r\n     * @param {number} near Near bound of the frustum\r\n     * @param {number} far Far bound of the frustum\r\n     * @return {Mat4}\r\n     */\r\n    static perspective(fovy: number, aspect: number, near: number, far: number): Mat4 {\r\n        const m4 = new Mat4(),\r\n            //f = 1.0 / Math.tan(fovy / 2), discard\r\n            //tan（π/2-α）= cotα \r\n            //cot(fovy/2) = tan(pi/2 - fovy/2);\r\n            f = Math.tan((Math.PI - fovy) * 0.5),\r\n            nf = 1.0 / (near - far);\r\n        m4.set(f / aspect, 0, 0, 0,\r\n            0, f, 0, 0,\r\n            0, 0, (far + near) * nf, -1,\r\n            0, 0, (2 * far * near) * nf, 0);\r\n        return m4;\r\n    }\r\n\r\n    /**\r\n     * Generates a perspective projection matrix with the given bounds\r\n     * coordinate z range of [-1, 1]\r\n     * @param {number} fovy Vertical field of view in radians\r\n     * @param {number} aspect Aspect ratio. typically viewport width/height\r\n     * @param {number} near Near bound of the frustum\r\n     * @param {number} far Far bound of the frustum\r\n     * @return {Mat4}\r\n     */\r\n    static perspectiveN11(fovy: number, aspect: number, near: number, far: number): Mat4 {\r\n        const m4 = new Mat4(),\r\n            f = 1.0 / Math.tan(fovy / 2),\r\n            nf = 1 / (near - far);\r\n        //discard\r\n        //tan（π/2-α）= cotα \r\n        //cot(fovy/2) = tan(pi/2 - fovy/2);\r\n        // f = Math.tan((Math.PI - fovy) * 0.5),\r\n        // nf = 1.0 / (near - far);\r\n        m4.set(f / aspect, 0, 0, 0,\r\n            0, f, 0, 0,\r\n            0, 0, (far + near) * nf, -1,\r\n            0, 0, 2 * far * near * nf, 0);\r\n        return m4;\r\n    }\r\n\r\n    /**\r\n     * coordinate z range of [0,1]\r\n     * @param fovy Vertical field of view in radians\r\n     * @param aspect \r\n     * @param near \r\n     * @param far \r\n     */\r\n    static perspective01(fovy: number, aspect: number, near: number, far: number): Mat4 {\r\n        const m4 = new Mat4(),\r\n            f = 1.0 / Math.tan(fovy / 2),\r\n            nf = 1 / (near - far);\r\n        //discard\r\n        //tan（π/2-α）= cotα \r\n        //cot(fovy/2) = tan(pi/2 - fovy/2);\r\n        // f = Math.tan((Math.PI - fovy) * 0.5),\r\n        // nf = 1.0 / (near - far);\r\n        m4.set(f / aspect, 0, 0, 0,\r\n            0, f, 0, 0,\r\n            0, 0, far * nf, -1,\r\n            0, 0, far * near * nf, 0);\r\n        return m4;\r\n    }\r\n\r\n    /**\r\n     * Generates a perspective projection matrix with the given field of view.\r\n     * This is primarily useful for generating projection matrices to be used\r\n     * with the still experiemental WebVR API.\r\n     * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\r\n     * @param {number} near Near bound of the frustum\r\n     * @param {number} far Far bound of the frustum\r\n     * @return {Mat4} out\r\n     */\r\n    static perspectiveFromFieldOfView(up: number, down: number, left: number, right: number, near: number, far: number):Mat4 {\r\n        const m4 = new Mat4(),\r\n            upTan = Math.tan(up * Math.PI / 180.0),\r\n            downTan = Math.tan(down * Math.PI / 180.0),\r\n            leftTan = Math.tan(left * Math.PI / 180.0),\r\n            rightTan = Math.tan(right * Math.PI / 180.0),\r\n            xScale = 2.0 / (leftTan + rightTan),\r\n            yScale = 2.0 / (upTan + downTan);\r\n        m4.set(xScale, 0, 0, 0,\r\n            0, yScale, 0, 0,\r\n            -((leftTan - rightTan) * xScale * 0.5), ((upTan - downTan) * yScale * 0.5), far / (near - far), -1,\r\n            0, 0, (far * near) / (near - far), 0);\r\n        return m4;\r\n    }\r\n\r\n    /**\r\n     * Generates a orthogonal projection matrix with the given bounds\r\n     * reference https://webgl2fundamentals.org/webgl/lessons/webgl-3d-orthographic.html\r\n     * @param {number} left Left bound of the frustum\r\n     * @param {number} right Right bound of the frustum\r\n     * @param {number} bottom Bottom bound of the frustum\r\n     * @param {number} top Top bound of the frustum\r\n     * @param {number} near Near bound of the frustum\r\n     * @param {number} far Far bound of the frustum\r\n     * @return {Mat4} \r\n     */\r\n    static ortho(left: number, right: number, bottom: number, top: number, near: number, far: number):Mat4 {\r\n        const mat = new Mat4(),\r\n            lr = 1.0 / (left - right),\r\n            bt = 1.0 / (bottom - top),\r\n            nf = 1.0 / (near - far);\r\n        mat.set(-2 * lr, 0, 0, 0,\r\n            0, -2 * bt, 0, 0,\r\n            0, 0, 2 * nf, 0,\r\n            (left + right) * lr, (top + bottom) * bt, (far + near) * nf, 1);\r\n        return mat;\r\n    }\r\n\r\n    /**\r\n     * Generates a look-at matrix with the given eye position, focal point, and up axis\r\n     * @param {Vec3} cameraPosition the camera Position of the viewer\r\n     * @param {Vec3} center the target point the viewer is looking at\r\n     * @param {Vec3} up vec3 pointing up\r\n     * @return {Mat4}\r\n     */\r\n    lookAt(cameraPosition: Vec3, target: Vec3, up: Vec3): Mat4 {\r\n        const zAxis = cameraPosition.clone().sub(target).normalize(),\r\n            xAxis = up.clone().cross(zAxis),\r\n            yAxis = zAxis.clone().cross(xAxis);\r\n        this.set(\r\n            xAxis.value[0], xAxis.value[1], xAxis.value[2], 0,\r\n            yAxis.value[0], yAxis.value[1], yAxis.value[2], 0,\r\n            zAxis.value[0], zAxis.value[1], zAxis.value[2], 0,\r\n            cameraPosition.value[0], cameraPosition.value[1], cameraPosition.value[2], 1\r\n        );\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of a mat4\r\n     * @return {String}\r\n     */\r\n    toString(): string {\r\n        return 'mat4(' +\r\n            this._out[0] + ', ' + this._out[1] + ', ' + this._out[2] + ', ' + this._out[3] + ', ' +\r\n            this._out[4] + ', ' + this._out[5] + ', ' + this._out[6] + ', ' + this._out[7] + ', ' +\r\n            this._out[8] + ', ' + this._out[9] + ', ' + this._out[10] + ', ' + this._out[11] + ', ' +\r\n            this._out[12] + ', ' + this._out[13] + ', ' + this._out[14] + ', ' + this._out[15] + ')';\r\n    }\r\n\r\n    /**\r\n     * Returns Frobenius norm of a mat4\r\n     * @return {Number} Frobenius norm\r\n     */\r\n    forb(): number {\r\n        return Math.sqrt(Math.pow(this._out[0], 2) + Math.pow(this._out[1], 2) + Math.pow(this._out[2], 2) + Math.pow(this._out[3], 2) +\r\n            Math.pow(this._out[4], 2) + Math.pow(this._out[5], 2) + Math.pow(this._out[6], 2) + Math.pow(this._out[7], 2) +\r\n            Math.pow(this._out[8], 2) + Math.pow(this._out[9], 2) + Math.pow(this._out[10], 2) + Math.pow(this._out[11], 2) +\r\n            Math.pow(this._out[12], 2) + Math.pow(this._out[13], 2) + Math.pow(this._out[14], 2) + Math.pow(this._out[15], 2));\r\n    }\r\n\r\n    /**\r\n     * Subtracts matrix b from matrix a\r\n     * @param {Mat4} m4\r\n     * @return {Mat4}\r\n     */\r\n    sub(m4: Mat4): Mat4 {\r\n        this._out[0] -= m4.value[0];\r\n        this._out[1] -= m4.value[1];\r\n        this._out[2] -= m4.value[2];\r\n        this._out[3] -= m4.value[3];\r\n        this._out[4] -= m4.value[4];\r\n        this._out[5] -= m4.value[5];\r\n        this._out[6] -= m4.value[6];\r\n        this._out[7] -= m4.value[7];\r\n        this._out[8] -= m4.value[8];\r\n        this._out[9] -= m4.value[9];\r\n        this._out[10] -= m4.value[10];\r\n        this._out[11] -= m4.value[11];\r\n        this._out[12] -= m4.value[12];\r\n        this._out[13] -= m4.value[13];\r\n        this._out[14] -= m4.value[14];\r\n        this._out[15] -= m4.value[15];\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the matrices have approximately the same elements in the same position.\r\n     * @param {Mat4} m4\r\n     * @param {boolean}\r\n     */\r\n    equals(m4: Mat4): boolean {\r\n        const [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15] = this._out,\r\n            [b0, b1, b2, b3, b4, b5, b6, b7, b8, b9, b10, b11, b12, b13, b14, b15] = m4.value;\r\n        return (Math.abs(a0 - b0) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n            Math.abs(a1 - b1) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n            Math.abs(a2 - b2) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n            Math.abs(a3 - b3) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) &&\r\n            Math.abs(a4 - b4) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) &&\r\n            Math.abs(a5 - b5) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) &&\r\n            Math.abs(a6 - b6) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) &&\r\n            Math.abs(a7 - b7) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) &&\r\n            Math.abs(a8 - b8) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) &&\r\n            Math.abs(a9 - b9) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) &&\r\n            Math.abs(a10 - b10) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) &&\r\n            Math.abs(a11 - b11) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) &&\r\n            Math.abs(a12 - b12) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) &&\r\n            Math.abs(a13 - b13) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) &&\r\n            Math.abs(a14 - b14) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) &&\r\n            Math.abs(a15 - b15) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15)));\r\n    }\r\n}","/**\r\n * reference https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec2.js\r\n * switch to es6 syntax\r\n * warning:if you don't want to change the source value,please use vec2.clone().* instead of vec2.*\r\n * @author yellow 2017/5/8\r\n */\r\n\r\nimport { GLMatrix } from \"./GLMatrix\";\r\nimport { Mat3 } from \"./Mat3\";\r\nimport { Mat4 } from \"./Mat4\";\r\n\r\n/**\r\n * @class\r\n */\r\nexport class Vec2 {\r\n    /**\r\n     * array store for vec2\r\n     */\r\n    private _out: number[];\r\n    /**\r\n     * Creates a new, empty vec2\r\n     */\r\n    constructor() {\r\n        this._out = new Array(2);\r\n        this._out[0] = 0;\r\n        this._out[1] = 0;\r\n    };\r\n    /**\r\n     * \r\n     */\r\n    get x() {\r\n        return this._out[0];\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get y() {\r\n        return this._out[1];\r\n    }\r\n    /**\r\n     * adapter for webgl matrix\r\n     * get the array directly\r\n     * @memberof vec2\r\n     * @return {Array}\r\n     */\r\n    get value() {\r\n        return this._out;\r\n    };\r\n    /**\r\n     * generate a random vector\r\n     */\r\n    static random(scale: number = 1.0): Vec2 {\r\n        scale = scale || 1.0;\r\n        const r = GLMatrix.RANDOM() * 2.0 * Math.PI;\r\n        const v = new Vec2().set(Math.cos(r) * scale, Math.sin(r) * scale);\r\n        return v;\r\n    };\r\n    /**\r\n     * set value of vec2,such as [x,y]\r\n     */\r\n    set(x: number, y: number): Vec2 {\r\n        this._out[0] = x;\r\n        this._out[1] = y;\r\n        return this;\r\n    };\r\n    /**\r\n     * Creates a new vec2 initialized with values from an existing vector\r\n     */\r\n    clone() {\r\n        let vec = new Vec2();\r\n        vec.set(this._out[0], this._out[1]);\r\n        return vec;\r\n    };\r\n    /**\r\n     * Add two vec2's\r\n     * @param {Vec2} vec the vec2 which waiting for add\r\n     */\r\n    add(vec: Vec2): Vec2 {\r\n        this._out[0] += vec._out[0];\r\n        this._out[1] += vec._out[1];\r\n        return this;\r\n    };\r\n    /**\r\n     * substract vector vec from this\r\n     * @param {Vec2} vec\r\n     */\r\n    sub(vec: Vec2): Vec2 {\r\n        this._out[0] -= vec._out[0];\r\n        this._out[1] -= vec._out[1];\r\n        return this;\r\n    };\r\n    /**\r\n     * multiplies two vec2's\r\n     * @param {Vec2} \r\n     */\r\n    multiply(vec: Vec2): Vec2 {\r\n        this._out[0] *= vec._out[0];\r\n        this._out[1] *= vec._out[1];\r\n        return this;\r\n    };\r\n    /**\r\n     * diveides two vec2's\r\n     * \r\n     */\r\n    divide(vec: Vec2): Vec2 {\r\n        this._out[0] /= vec._out[0];\r\n        this._out[1] /= vec._out[1];\r\n        return this;\r\n    };\r\n    /**\r\n     * use math.ceil to adjust the value of v0 v1\r\n     * \r\n     */\r\n    ceil(): Vec2 {\r\n        this._out[0] = Math.ceil(this._out[0]);\r\n        this._out[1] = Math.ceil(this._out[1]);\r\n        return this;\r\n    };\r\n    /**\r\n     * use math.floor to adjust the value of v0 v1\r\n     */\r\n    floor(): Vec2 {\r\n        this._out[0] = Math.floor(this._out[0]);\r\n        this._out[1] = Math.floor(this._out[1]);\r\n        return this;\r\n    };\r\n    /**\r\n     * use math.round to adjust the value of v0 v1\r\n     */\r\n    round(): Vec2 {\r\n        this._out[0] = Math.round(this._out[0]);\r\n        this._out[1] = Math.round(this._out[1]);\r\n        return this;\r\n    };\r\n    /**\r\n     * merge two vector's min value\r\n     * \r\n     */\r\n    min(vec: Vec2): Vec2 {\r\n        this._out[0] = Math.min(this._out[0], vec._out[0]);\r\n        this._out[1] = Math.min(this._out[1], vec._out[1]);\r\n        return this;\r\n    };\r\n    /**\r\n     *  merge two vector's max value\r\n     */\r\n    max(vec: Vec2): Vec2 {\r\n        this._out[0] = Math.max(this._out[0], vec._out[0]);\r\n        this._out[1] = Math.max(this._out[1], vec._out[1]);\r\n        return this;\r\n    };\r\n    /**\r\n     * Scales a vec2 by a scalar number\r\n     * @param {Number} n\r\n     */\r\n    scale(n: number): Vec2 {\r\n        this._out[0] *= n;\r\n        this._out[1] *= n;\r\n        return this;\r\n    };\r\n    /**\r\n     * Calculates the euclidian distance between two vec2's\r\n     */\r\n    distance(v: Vec2): number {\r\n        const x = this._out[0] - v._out[0],\r\n            y = this._out[1] - v._out[1];\r\n        return Math.sqrt(x * x + y * y);\r\n    };\r\n    /**\r\n     * Calculates the manhattan distance between two vec2's\r\n     */\r\n    manhattanDistance(v: Vec2): number {\r\n        const x = Math.abs(this._out[0] - v._out[0]),\r\n            y = Math.abs(this._out[1] - v._out[1]);\r\n        return x + y;\r\n    };\r\n    /**\r\n     * Calculates the chebyshev distance between two vec2's\r\n     */\r\n    chebyshevDistance(v: Vec2): number {\r\n        const x = Math.abs(this._out[0] - v._out[0]),\r\n            y = Math.abs(this._out[1] - v._out[1]);\r\n        return Math.max(x, y);\r\n    };\r\n    /**\r\n     * Calculates the length of a vec2\r\n     */\r\n    len(): number {\r\n        return this.distance(new Vec2());\r\n    };\r\n    /**\r\n     * Negates the components of a vec2\r\n     */\r\n    negate(): Vec2 {\r\n        this._out[0] = -this._out[0];\r\n        this._out[1] = -this._out[1];\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns the inverse of the components of a vec2\r\n     */\r\n    inverse(): Vec2 {\r\n        this._out[0] = 1.0 / this._out[0];\r\n        this._out[1] = 1.0 / this._out[1];\r\n        return this;\r\n    };\r\n    /**\r\n     * Normalize a vec2\r\n     */\r\n    normalize(): Vec2 {\r\n        const len = this.len();\r\n        if (len > 0) {\r\n            //for the reason * has a high performance than /\r\n            //}{fixed 2019.1.15 high precision\r\n            this._out[0] /= len;\r\n            this._out[1] /= len;\r\n        }\r\n        return this;\r\n    };\r\n    /**\r\n     * Calculates the dot product of two vec2's\r\n     */\r\n    dot(v: Vec2): number {\r\n        return this._out[0] * v._out[0] + this._out[1] * v._out[1];\r\n    };\r\n    /**\r\n     * performs a linear interpolation between two vec2's\r\n     * @param {Vec2} v\r\n     * @param {number} t interpolation amount between the two inputs\r\n     */\r\n    lerp(v: Vec2, t: number): Vec2 {\r\n        const [ax, ay] = this._out,\r\n            [bx, by] = v._out;\r\n        this._out[0] = ax + t * (bx - ax);\r\n        this._out[1] = ay + t * (by - ay);\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a string representation of a vector\r\n     */\r\n    toString(): string {\r\n        return 'vec2(' + this._out[0] + ',' + this._out[1] + ')';\r\n    };\r\n    /**\r\n     * Transforms the vec2 with a mat3\r\n     * @param {mat3} mat matrix to transform with\r\n     */\r\n    transformMat3(mat: Mat3): Vec2 {\r\n        const [x, y] = this._out;\r\n        this._out[0] = mat._out[0] * x + mat._out[3] * y + mat._out[6];\r\n        this._out[1] = mat._out[1] * x + mat._out[4] * y + mat._out[7];\r\n        return this;\r\n    };\r\n    /**\r\n     * Transforms the vec2 with a mat4\r\n     */\r\n    transformMat4(mat: Mat4): Vec2 {\r\n        const [x, y] = this._out;\r\n        this._out[0] = mat.value[0] * x + mat.value[4] * y + mat.value[5];\r\n        this._out[1] = mat.value[1] * x + mat.value[5] * y + mat.value[13];\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same position.\r\n     * precision\r\n     */\r\n    equals(vec: Vec2): boolean {\r\n        const [a0, a1] = this._out,\r\n            [b0, b1] = vec._out;\r\n        return (Math.abs(a0 - b0) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n            Math.abs(a1 - b1) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)));\r\n    };\r\n};","\r\n\r\n/**\r\n * reference https://github.com/toji/gl-matrix/blob/master/src/gl-matrix/vec4.js\r\n * switch to es6 syntax\r\n * warning:if you don't want to change the source value,please use vec4.clone().* instead of vec4.*\r\n * @author yellow 2017/5/9\r\n */\r\nimport { Mat4 } from \"./Mat4\";\r\nimport { GLMatrix } from './GLMatrix';\r\nimport { Quat } from \"./Quat\";\r\n/**\r\n * @class 4 Dimensional Vector\r\n * @name vec4\r\n */\r\nexport class Vec4 {\r\n    /**\r\n     * vec4 array store\r\n     */\r\n    _out: number[];\r\n    /**\r\n     *  Creates a new, empty vec4\r\n     */\r\n    constructor() {\r\n        this._out = new Array(4);\r\n        this._out[0] = 0;\r\n        this._out[1] = 0;\r\n        this._out[2] = 0;\r\n        this._out[3] = 0;\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get x() {\r\n        return this._out[0];\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get y() {\r\n        return this._out[1];\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get z() {\r\n        return this._out[2];\r\n    }\r\n    /**\r\n     * \r\n     */\r\n    get w() {\r\n        return this._out[3];\r\n    }\r\n    /**\r\n     * adapter for webgl matrix\r\n     * get the array directly\r\n     * @memberof vec4\r\n     * @return {Array}\r\n     */\r\n    get value(): number[] {\r\n        return this._out;\r\n    }\r\n    /**\r\n     * Generates a random vector with the given scale\r\n     * @param {number} [s] Length of the resulting vector. If ommitted, a unit vector will be returned\r\n     */\r\n    static random(s: number = 1.0): Vec4 {\r\n        s = s || 1.0;\r\n        const vec = new Vec4();\r\n        //TODO: This is a pretty awful way of doing this. Find something better.\r\n        vec.set(GLMatrix.RANDOM(), GLMatrix.RANDOM(), GLMatrix.RANDOM(), GLMatrix.RANDOM()).normalize().scale(s);\r\n        return vec;\r\n    }\r\n    /**\r\n     * set the value of vec4\r\n     */\r\n    set(x: number, y: number, z: number, w: number): Vec4 {\r\n        this._out[0] = x;\r\n        this._out[1] = y;\r\n        this._out[2] = z;\r\n        this._out[3] = w;\r\n        return this;\r\n    }\r\n    /**\r\n     * Creates a new vec4 initialized with values from an existing vector\r\n     */\r\n    clone(): Vec4 {\r\n        const vec = new Vec4();\r\n        vec.set(this._out[0], this._out[1], this._out[2], this._out[3]);\r\n        return vec;\r\n    }\r\n    /**\r\n     * Adds two vec4's\r\n     * @param {Vec4} vec\r\n     */\r\n    add(vec: Vec4): Vec4 {\r\n        this._out[0] += vec.value[0];\r\n        this._out[1] += vec.value[1];\r\n        this._out[2] += vec.value[2];\r\n        this._out[3] += vec.value[3];\r\n        return this;\r\n    }\r\n    /**\r\n     * Subtracts vector vec from vector this\r\n     */\r\n    sub(vec: Vec4): Vec4 {\r\n        this._out[0] -= vec.value[0];\r\n        this._out[1] -= vec.value[1];\r\n        this._out[2] -= vec.value[2];\r\n        this._out[3] -= vec.value[3];\r\n        return this;\r\n    }\r\n    /**\r\n     * Multiplies two vec4's\r\n     */\r\n    multiply(vec: Vec4): Vec4 {\r\n        this._out[0] *= vec.value[0];\r\n        this._out[1] *= vec.value[1];\r\n        this._out[2] *= vec.value[2];\r\n        this._out[3] *= vec.value[3];\r\n        return this;\r\n    }\r\n    /**\r\n    * Divides two vec4's\r\n    */\r\n    divide(vec: Vec4): Vec4 {\r\n        this._out[0] /= vec.value[0];\r\n        this._out[1] /= vec.value[1];\r\n        this._out[2] /= vec.value[2];\r\n        this._out[3] /= vec.value[3];\r\n        return this;\r\n    }\r\n    /**\r\n     * Math.ceil the components of a vec4\r\n     */\r\n    ceil(): Vec4 {\r\n        this._out[0] = Math.ceil(this._out[0]);\r\n        this._out[1] = Math.ceil(this._out[1]);\r\n        this._out[2] = Math.ceil(this._out[2]);\r\n        this._out[3] = Math.ceil(this._out[3]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Math.round the components of a vec4\r\n     */\r\n    round(): Vec4 {\r\n        this._out[0] = Math.round(this._out[0]);\r\n        this._out[1] = Math.round(this._out[1]);\r\n        this._out[2] = Math.round(this._out[2]);\r\n        this._out[3] = Math.round(this._out[3]);\r\n        return this;\r\n    }\r\n    /**\r\n    * Math.floor the components of a vec4\r\n    */\r\n    floor(): Vec4 {\r\n        this._out[0] = Math.floor(this._out[0]);\r\n        this._out[1] = Math.floor(this._out[1]);\r\n        this._out[2] = Math.floor(this._out[2]);\r\n        this._out[3] = Math.floor(this._out[3]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the minimum of two vec4's\r\n     * @param {Vec4} vec\r\n     */\r\n    min(vec: Vec4): Vec4 {\r\n        this._out[0] = Math.min(this._out[0], vec.value[0]);\r\n        this._out[1] = Math.min(this._out[1], vec.value[1]);\r\n        this._out[2] = Math.min(this._out[2], vec.value[2]);\r\n        this._out[3] = Math.min(this._out[3], vec.value[3]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the maximum of two vec4's\r\n     * @param {Vec4} vec\r\n     */\r\n    max(vec: Vec4): Vec4 {\r\n        this._out[0] = Math.max(this._out[0], vec.value[0]);\r\n        this._out[1] = Math.max(this._out[1], vec.value[1]);\r\n        this._out[2] = Math.max(this._out[2], vec.value[2]);\r\n        this._out[3] = Math.max(this._out[3], vec._out[3]);\r\n        return this;\r\n    }\r\n    /**\r\n     * Scales a vec4 by a scalar number\r\n     * @param {number} s the scale\r\n     */\r\n    scale(s: number): Vec4 {\r\n        this._out[0] *= s;\r\n        this._out[1] *= s;\r\n        this._out[2] *= s;\r\n        this._out[3] *= s;\r\n        return this;\r\n    }\r\n    /**\r\n     * Calculates the euclidian distance between two vec4's\r\n     * @param {Vec4} vec the distance to vec\r\n     */\r\n    distance(vec: Vec4): number {\r\n        let [x0, y0, z0, w0] = this._out,\r\n            [x1, y1, z1, w1] = vec._out,\r\n            x = x0 - x1,\r\n            y = y0 - y1,\r\n            z = z0 - z1,\r\n            w = w0 - w1;\r\n        return Math.sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n    /**\r\n     * Calculates the length of a vec4\r\n     */\r\n    len() {\r\n        return this.distance(new Vec4());\r\n    }\r\n    /**\r\n     * Negates the components of a vec4\r\n     */\r\n    negate() {\r\n        this._out[0] = -this._out[0];\r\n        this._out[1] = -this._out[1];\r\n        this._out[2] = -this._out[2];\r\n        this._out[3] = -this._out[3];\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns the inverse of the components of a vec4\r\n     */\r\n    inverse() {\r\n        this._out[0] = 1.0 / this._out[0];\r\n        this._out[1] = 1.0 / this._out[1];\r\n        this._out[2] = 1.0 / this._out[2];\r\n        this._out[3] = 1.0 / this._out[3];\r\n    }\r\n    /**\r\n     * Normalize a vec4\r\n     */\r\n    normalize() {\r\n        let len = this.len();\r\n        if (len > 0) {\r\n            this._out[0] /= len;\r\n            this._out[1] /= len;\r\n            this._out[2] /= len;\r\n            this._out[3] /= len;\r\n        }\r\n        return this;\r\n    }\r\n    /**\r\n     * @param {Vec4} vec\r\n     */\r\n    dot(vec: Vec4): number {\r\n        const [x0, y0, z0, w0] = this.value,\r\n            [x1, y1, z1, w1] = vec.value;\r\n        return x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1;\r\n    }\r\n    /**\r\n     * \r\n     * @param {Vec4} v1 the first operand\r\n     * @param {Vec4} v2 the second operand\r\n     * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\r\n     */\r\n    lerp(v1: Vec4, v2: Vec4, t: number): Vec4 {\r\n        const [ax, ay, az, aw] = v1.value,\r\n            [bx, by, bz, bw] = v2.value;\r\n        this._out[0] = ax + t * (bx - ax);\r\n        this._out[1] = ay + t * (by - ay);\r\n        this._out[2] = az + t * (bz - az);\r\n        this._out[3] = aw + t * (bw - aw);\r\n        return this;\r\n    }\r\n    /**\r\n     * Transforms the vec4 with a mat4.\r\n     * @param {mat4} mat matrix to transform with\r\n     */\r\n    transformMat4(mat: Mat4): Vec4 {\r\n        let [x, y, z, w] = this._out;\r\n        this._out[0] = mat.value[0] * x + mat.value[4] * y + mat.value[8] * z + mat.value[12] * w;\r\n        this._out[1] = mat.value[1] * x + mat.value[5] * y + mat.value[9] * z + mat.value[13] * w;\r\n        this._out[2] = mat.value[2] * x + mat.value[6] * y + mat.value[10] * z + mat.value[14] * w;\r\n        this._out[3] = mat.value[3] * x + mat.value[7] * y + mat.value[11] * z + mat.value[15] * w;\r\n        return this;\r\n    }\r\n    /**\r\n     * Transforms the vec4 with a quat\r\n     * @param {quat} q quaternion to transform with\r\n     */\r\n    transformQuat(q: Quat): Vec4 {\r\n        let [x, y, z, w] = this._out,\r\n            [qx, qy, qz, qw] = q.value,\r\n            ix = qw * x + qy * z - qz * y,\r\n            iy = qw * y + qz * x - qx * z,\r\n            iz = qw * z + qx * y - qy * x,\r\n            iw = -qx * x - qy * y - qz * z;\r\n        // calculate result * inverse quat\r\n        this._out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        this._out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        this._out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n        this._out[3] = q.value[3];\r\n        return this;\r\n    }\r\n    /**\r\n     * Returns a string representation of a vector\r\n     */\r\n    toString(): string {\r\n        return 'vec4(' + this._out[0] + ', ' + this._out[1] + ', ' + this._out[2] + ', ' + this._out[3] + ')';\r\n    }\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same position.\r\n     * @param {Vec4} vec\r\n     */\r\n    equals(vec: Vec4): boolean {\r\n        const [a0, a1, a2, a3] = this._out,\r\n            [b0, b1, b2, b3] = vec._out;\r\n        return (Math.abs(a0 - b0) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n            Math.abs(a1 - b1) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n            Math.abs(a2 - b2) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n            Math.abs(a3 - b3) <= GLMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)));\r\n    }\r\n}\r\n","import { Mat4 } from \"kiwi.matrix\";\r\n\r\n/**\r\n * \r\n * @param x rad\r\n */\r\nconst sin = function (x: number): number {\r\n    return Math.sin(x) + 8 - 8;\r\n};\r\n\r\n/**\r\n * \r\n * @param x rad\r\n */\r\nconst cos = function (x: number): number {\r\n    return Math.cos(x) + 8 - 8;\r\n};\r\n\r\nconst log = function (x: number): number {\r\n    return Math.log(x) + 8 - 8;\r\n};\r\n\r\nconst atan = function (x: number): number {\r\n    return Math.atan(x) + 8 - 8;\r\n};\r\n\r\nconst tan = (x: number): number => {\r\n    return Math.tan(x) + 8 - 8;\r\n}\r\n\r\nconst exp = function (x: number): number {\r\n    return Math.exp(x) + 8 - 8;\r\n};\r\n\r\nexport {\r\n    sin,\r\n    cos,\r\n    log,\r\n    atan,\r\n    tan,\r\n    exp\r\n}","enum EARTH {\r\n    /**\r\n    * the radius in x axis of earth in meters\r\n    */\r\n    RADIUS_X = 6378137.0,\r\n\r\n    /**\r\n    * the radius in y axis of earth in meters\r\n    */\r\n    RADIUS_Y = 6378137.0,\r\n\r\n    /**\r\n    *  the radius in z axis of earth in meters\r\n    */\r\n    RADIUS_Z = 6356752.3142451793,\r\n}\r\n\r\nenum LUNAR {\r\n    /**\r\n     * the mean radius of moon in meters\r\n     */\r\n    LUNAR_RADIUS = 1737400.0,\r\n}\r\n\r\nenum SOLAR {\r\n    /**\r\n     * the radius of the sun in meters\r\n     */\r\n    SOLAR_RADIUS = 6.955e8,\r\n}\r\n\r\nexport {\r\n    LUNAR,\r\n    EARTH,\r\n    SOLAR\r\n}","\r\nenum EPSILON {\r\n    /**\r\n     * \r\n     */\r\n    EPSILON1 = 0.1,\r\n\r\n    /**\r\n     * \r\n     */\r\n    EPSILON7 = 0.0000001,\r\n\r\n    /**\r\n     * \r\n     */\r\n    EPSILON12 = 0.000000000001,\r\n\r\n    /**\r\n     * \r\n     */\r\n    EPSILON14 = 0.00000000000001\r\n}\r\n\r\nexport { EPSILON }","/**\r\n * represent position in geographic coordinate system\r\n * \r\n *          Z                                          \r\n *          |                                          \r\n *          |                                          \r\n *          |                                          \r\n *          |__ __ __ __ __ Y      \r\n *         / o                                        \r\n *        /                                          \r\n *       /                                         \r\n *      /                                          \r\n *      X                                         \r\n * \r\n * @class\r\n */\r\nclass GeodeticCoordinate {\r\n    /**\r\n     * represent in meters\r\n     */\r\n    private alt: number;\r\n\r\n    /**\r\n     * represent in degree\r\n     */\r\n    private lat: number;\r\n\r\n    /**\r\n     * represent in degree\r\n     */\r\n    private lng: number;\r\n\r\n    /**\r\n     * \r\n     * @param lng in degree\r\n     * @param lat in degree\r\n     * @param alt in meters\r\n     */\r\n    constructor(lng: number, lat: number, alt: number = 0.0) {\r\n        this.lng = lng;\r\n        this.lat = lat;\r\n        this.alt = alt;\r\n    }\r\n\r\n    /**\r\n     * 转换成大地坐标（地球表面）\r\n     * @returns \r\n     */\r\n    public toGeodetic = () => {\r\n        return new GeodeticCoordinate(this.lng, this.lat, 0);\r\n    }\r\n\r\n    /**\r\n     * 判断是否为大地坐标（不带高程）\r\n     * @returns \r\n     */\r\n    public isGeodetic = (): boolean => {\r\n        return this.alt === 0;\r\n    }\r\n\r\n    /**\r\n     * @type {Number} the latitide value in degree\r\n     */\r\n    get Latitude() {\r\n        return this.lat;\r\n    }\r\n\r\n    /**\r\n     * @type {Number} the longitude value in degree\r\n     */\r\n    get Longitude() {\r\n        return this.lng;\r\n    }\r\n\r\n    /**\r\n     * @type {Number} the height value \r\n     */\r\n    get Altitude() {\r\n        return this.alt;\r\n    }\r\n\r\n    /**\r\n     * 高程\r\n     */\r\n    set Altitude(v: number) {\r\n        this.alt = v;\r\n    }\r\n}\r\n\r\nexport { GeodeticCoordinate }","\r\nimport { GLMatrix, Vec3 } from 'kiwi.matrix';\r\n\r\nimport { EARTH } from '../util/physical';\r\nimport { EPSILON } from '../util/epsilon';\r\nimport { sin, cos } from '../util/fixed';\r\nimport { GeodeticCoordinate } from './GeodeticCoordinate';\r\n\r\n//最长半长轴\r\nconst semimajorAxis = Math.max(EARTH.RADIUS_X, EARTH.RADIUS_Y, EARTH.RADIUS_Z);\r\n\r\n/**\r\n * @description 椭球体\r\n * @class \r\n */\r\nclass Ellipsoid {\r\n\r\n    /**\r\n     * \r\n     */\r\n    public x: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    public y: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    public z: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private radii: Vec3;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private radiiSquared: Vec3;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private oneOverRadii: Vec3;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private oneOverRadiiSquared: Vec3;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private oneOverMaximumRadius: number;\r\n\r\n    /**\r\n     * \r\n     * @param {Number} x \r\n     * @param {Number} y \r\n     * @param {Number} z \r\n     */\r\n    constructor(x: number, y: number, z: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.z = z;\r\n        this.radii = new Vec3().set(x, y, z);\r\n        this.radiiSquared = new Vec3().set(x * x, y * y, z * z);\r\n        this.oneOverRadii = new Vec3().set(1 / x, 1 / y, 1 / z);\r\n        this.oneOverRadiiSquared = new Vec3().set(1 / (x * x), 1 / (y * y), 1 / (z * z));\r\n        this.oneOverMaximumRadius = 1 / this.MaximumRadius;\r\n    }\r\n\r\n    /**\r\n     * @type {Vec3}\r\n     */\r\n    get RadiiSquared() {\r\n        return this.radiiSquared;\r\n    }\r\n\r\n    /**\r\n     * @type {Vec3}\r\n     */\r\n    get Radii() {\r\n        return this.radii;\r\n    }\r\n\r\n    /**\r\n     * @type {Vec3}\r\n     */\r\n    get OneOverRadii() {\r\n        return this.oneOverRadii;\r\n    }\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    get MaximumRadius() {\r\n        return Math.max(this.x, this.y, this.z);\r\n    }\r\n\r\n    /**\r\n     * @type {Number}\r\n     */\r\n    get OneOverMaximumRadius() {\r\n        return this.oneOverMaximumRadius;\r\n    }\r\n\r\n    /**\r\n     * 地理坐标转化成空间向量，从(0,0,0)指向地球表明的方向向量\r\n     * @param cartographic \r\n     */\r\n    private _geodeticSurfaceNormalCartographic(cartographic: GeodeticCoordinate): Vec3 {\r\n        const longitude = GLMatrix.toRadian(cartographic.Longitude),\r\n            latitude = GLMatrix.toRadian(cartographic.Latitude),\r\n            cosLatitude = cos(latitude);\r\n        const x = cosLatitude * cos(longitude),\r\n            y = cosLatitude * sin(longitude),\r\n            z = sin(latitude);\r\n        return new Vec3().set(x, y, z);\r\n    }\r\n\r\n    /**\r\n     * 方向向量(x,y,z)转换到地球表明的空间坐标\r\n     * @param cartesian 笛卡尔坐标系下的空间坐标x,y,z\r\n     */\r\n    private _geodeticSurfaceNormal(cartesian: Vec3): Vec3 {\r\n        const oneOverRadiiSquared = this.oneOverRadiiSquared;\r\n        const result = cartesian.clone().multiply(oneOverRadiiSquared);\r\n        return result.normalize();\r\n    }\r\n\r\n    /**\r\n     * 将空间坐标按照比例缩放到椭球体上\r\n     * @type {Vec3} position\r\n     */\r\n    private scaleToGeodeticSurface(position: Vec3): Vec3 {\r\n        //\r\n        const positionX = position.x;\r\n        const positionY = position.y;\r\n        const positionZ = position.z;\r\n        //\r\n        const oneOverRadii = this.oneOverRadii;\r\n        const oneOverRadiiX = oneOverRadii.x;\r\n        const oneOverRadiiY = oneOverRadii.y;\r\n        const oneOverRadiiZ = oneOverRadii.z;\r\n        //\r\n        const x2 = positionX * positionX * oneOverRadiiX * oneOverRadiiX;\r\n        const y2 = positionY * positionY * oneOverRadiiY * oneOverRadiiY;\r\n        const z2 = positionZ * positionZ * oneOverRadiiZ * oneOverRadiiZ;\r\n        // Compute the squared ellipsoid norm.\r\n        const squaredNorm = x2 + y2 + z2;\r\n        const ratio = Math.sqrt(1.0 / squaredNorm);\r\n        // As an initial approximation, assume that the radial intersection is the projection point.\r\n        const intersection = position.clone().scale(ratio);\r\n        // If the position is near the center, the iteration will not converge.\r\n        if (squaredNorm < EPSILON.EPSILON1) {\r\n            return !isFinite(ratio) ? undefined : intersection.clone();\r\n        }\r\n        const oneOverRadiiSquared = this.oneOverRadiiSquared;\r\n        const oneOverRadiiSquaredX = oneOverRadiiSquared.x;\r\n        const oneOverRadiiSquaredY = oneOverRadiiSquared.y;\r\n        const oneOverRadiiSquaredZ = oneOverRadiiSquared.z;\r\n        // Use the gradient at the intersection point in place of the true unit normal.\r\n        // The difference in magnitude will be absorbed in the multiplier.\r\n        const gradient = new Vec3().set(\r\n            intersection.x * oneOverRadiiSquaredX * 2.0,\r\n            intersection.y * oneOverRadiiSquaredY * 2.0,\r\n            intersection.z * oneOverRadiiSquaredZ * 2.0\r\n        );\r\n        // Compute the initial guess at the normal vector multiplier, lambda.\r\n        let lambda = (1.0 - ratio) * position.len() / (0.5 * gradient.len());\r\n        let correction = 0.0;\r\n        let func;\r\n        let denominator;\r\n        let xMultiplier;\r\n        let yMultiplier;\r\n        let zMultiplier;\r\n        let xMultiplier2;\r\n        let yMultiplier2;\r\n        let zMultiplier2;\r\n        let xMultiplier3;\r\n        let yMultiplier3;\r\n        let zMultiplier3;\r\n        do {\r\n            lambda -= correction;\r\n            xMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredX);\r\n            yMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredY);\r\n            zMultiplier = 1.0 / (1.0 + lambda * oneOverRadiiSquaredZ);\r\n            xMultiplier2 = xMultiplier * xMultiplier;\r\n            yMultiplier2 = yMultiplier * yMultiplier;\r\n            zMultiplier2 = zMultiplier * zMultiplier;\r\n            xMultiplier3 = xMultiplier2 * xMultiplier;\r\n            yMultiplier3 = yMultiplier2 * yMultiplier;\r\n            zMultiplier3 = zMultiplier2 * zMultiplier;\r\n            func = x2 * xMultiplier2 + y2 * yMultiplier2 + z2 * zMultiplier2 - 1.0;\r\n            // \"denominator\" here refers to the use of this expression in the velocity and acceleration\r\n            // computations in the sections to follow.\r\n            denominator = x2 * xMultiplier3 * oneOverRadiiSquaredX + y2 * yMultiplier3 * oneOverRadiiSquaredY + z2 * zMultiplier3 * oneOverRadiiSquaredZ;\r\n            const derivative = -2.0 * denominator;\r\n            correction = func / derivative;\r\n        } while (Math.abs(func) > EPSILON.EPSILON12);\r\n        //\r\n        return new Vec3().set(positionX * xMultiplier, positionY * yMultiplier, positionZ * zMultiplier);\r\n    }\r\n\r\n    /**\r\n     * Scales the provided Cartesian position \r\n     * along the geodetic surface normal so \r\n     * that it is on the surface of this ellipsoid.  \r\n     * If the position is at the center of the \r\n     * ellipsoid, this function returns undefined.\r\n     * @description 将空间坐标转成大地坐标\r\n     * @example\r\n     * position = new Vec3().set(17832.12, 83234.52, 952313.73);\r\n     * cartographicPosition = WGS84.spaceToGeographic(position);\r\n     * \r\n     */\r\n    public spaceToGeographic(spaceCoord: Vec3): GeodeticCoordinate {\r\n        const p = this.scaleToGeodeticSurface(spaceCoord);\r\n        const n = this._geodeticSurfaceNormal(p);\r\n        const h = spaceCoord.clone().sub(p);\r\n        var longitude = Math.atan2(n.y, n.x);\r\n        var latitude = Math.asin(n.z);//resprent value in radian \r\n        var height = Math.sign(h.clone().dot(spaceCoord)) * h.len();\r\n        return new GeodeticCoordinate(GLMatrix.toDegree(longitude), GLMatrix.toDegree(latitude), height);\r\n    }\r\n\r\n    /**\r\n     * convert geographic coord to sapce coord (x, y, z)\r\n     * @description 地理坐标转成空间坐标\r\n     * @param {Geographic} geographic \r\n     */\r\n    public geographicToSpace(geographic: GeodeticCoordinate): Vec3 {\r\n        const radiiSquared = this.radiiSquared,\r\n            n = this._geodeticSurfaceNormalCartographic(geographic),\r\n            k = radiiSquared.clone().multiply(n);\r\n        const gamma = Math.sqrt(n.clone().dot(k));\r\n        k.scale(1 / gamma);\r\n        n.scale(geographic.Altitude);\r\n        return k.add(n);\r\n    }\r\n}\r\n\r\n//WGS84参考椭球\r\nconst WGS84 = new Ellipsoid(EARTH.RADIUS_X, EARTH.RADIUS_Y, EARTH.RADIUS_Z);\r\n\r\n//Web墨卡托的伪椭球（正圆）\r\nconst PSEUDOMERCATOR = new Ellipsoid(semimajorAxis, semimajorAxis, semimajorAxis);\r\n\r\nexport {\r\n    PSEUDOMERCATOR,\r\n    WGS84,\r\n    Ellipsoid\r\n}","import { Ellipsoid } from './Ellipsoid';\r\nimport { GLMatrix, Mat4, Vec3 } from 'kiwi.matrix';\r\nimport { sin, log, atan, exp } from '../util/fixed';\r\nimport { PSEUDOMERCATOR } from './Ellipsoid';\r\nimport { GeodeticCoordinate } from './GeodeticCoordinate';\r\n\r\n/**\r\n * 投影类\r\n * @class\r\n */\r\nabstract class Projection {\r\n    /**\r\n     * 参考椭球\r\n     */\r\n    protected ellipsoid: Ellipsoid;\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected semimajorAxis: number;\r\n    /**\r\n     * \r\n     */\r\n    protected oneOverSemimajorAxis: number;\r\n\r\n    /**\r\n     * \r\n     * @param options \r\n     */\r\n    constructor(ellipsoid: Ellipsoid) {\r\n        this.ellipsoid = ellipsoid;\r\n        this.semimajorAxis = this.ellipsoid.MaximumRadius;\r\n        this.oneOverSemimajorAxis = 1.0 / this.semimajorAxis;\r\n    }\r\n\r\n    /**\r\n     * @type {Ellipsoid}\r\n     */\r\n    get Ellipsoid() {\r\n        return this.ellipsoid;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param geographic geographic in radius\r\n     */\r\n    abstract project(geographic: GeodeticCoordinate): Vec3;\r\n\r\n    /**\r\n     * \r\n     * @param v3 \r\n     */\r\n    abstract unproject(v3: Vec3): GeodeticCoordinate;\r\n\r\n    abstract getResolution(zoomLevel: number): number;\r\n\r\n    abstract getMaxZoomResolution(): number;\r\n}\r\n\r\n/**\r\n * Web墨卡托投影\r\n * @author axmand\r\n */\r\nclass WebMercatorProjection extends Projection {\r\n    private maximumLatitude: number = 85.0511287798;\r\n\r\n    private maxZoom: number = 23;\r\n\r\n    protected resolutions: number[] = [];\r\n\r\n    private tilePixelSize: number = 256;\r\n\r\n    constructor() {\r\n        super(PSEUDOMERCATOR);\r\n        const resolutions: number[] = [];\r\n        const d = 2 * this.semimajorAxis * Math.PI;\r\n        for (let i = 0; i < this.maxZoom; i++)\r\n            resolutions[i] = d / (this.tilePixelSize * Math.pow(2, i));\r\n        this.resolutions = resolutions;\r\n    }\r\n\r\n    /**\r\n     * Converts a Mercator angle, in the range -PI to PI, to a geodetic latitude in the range -PI/2 to PI/2.\r\n     * @param mercatorAngle in radius\r\n     */\r\n    private mercatorAngleToGeodeticLatitude(mercatorAngle: number): number {\r\n        return Math.PI / 2 - (2.0 * atan(exp(-mercatorAngle)));\r\n    }\r\n\r\n    /**\r\n     * 地理坐标转球面墨卡托夹角\r\n     * @param latitude \r\n     */\r\n    private geodeticLatitudeToMercatorAngle(latitude: number): number {\r\n        const maximumLatitude = this.maximumLatitude;\r\n        if (latitude > maximumLatitude)\r\n            latitude = maximumLatitude;\r\n        else if (latitude < -maximumLatitude)\r\n            latitude = -maximumLatitude;\r\n        const sinLatitude = sin(latitude);\r\n        return 0.5 * log((1.0 + sinLatitude) / (1.0 - sinLatitude));\r\n    }\r\n\r\n    /**\r\n     * 大地坐标转投影坐标\r\n     * @param geographic \r\n     */\r\n    public project(geographic: GeodeticCoordinate): Vec3 {\r\n        const semimajorAxis = this.semimajorAxis;\r\n        const x = GLMatrix.toRadian(geographic.Longitude) * semimajorAxis,\r\n            y = this.geodeticLatitudeToMercatorAngle(GLMatrix.toRadian(geographic.Latitude)) * semimajorAxis,\r\n            z = geographic.Altitude;\r\n        return new Vec3().set(x, y, z);\r\n    }\r\n\r\n    /**\r\n     * 投影坐标转大地坐标\r\n     * @param v3 \r\n     */\r\n    public unproject(v3: Vec3): GeodeticCoordinate {\r\n        const oneOverEarthSemimajorAxis = this.oneOverSemimajorAxis,\r\n            longitude = v3.x * oneOverEarthSemimajorAxis,\r\n            latitude = this.mercatorAngleToGeodeticLatitude(v3.y * oneOverEarthSemimajorAxis),\r\n            height = v3.z;\r\n        return new GeodeticCoordinate(GLMatrix.toDegree(longitude), GLMatrix.toDegree(latitude), height);\r\n    }\r\n\r\n    /**\r\n     * 获取指定缩放层级地理分辨率\r\n     * @param zoomLevel \r\n     * @returns \r\n     */\r\n    public getResolution(zoomLevel: number): number {\r\n        return this.resolutions[zoomLevel];\r\n    }\r\n\r\n    /**\r\n     * 获取最大缩放层级对应的地理分辨率\r\n     * @returns \r\n     */\r\n    public getMaxZoomResolution(): number {\r\n        const maxZoom = this.maxZoom - 1;\r\n        return this.resolutions[maxZoom];\r\n    }\r\n}\r\n\r\nexport { Projection, WebMercatorProjection }","import { browser } from '../util/browser';\r\nimport { isString } from '../util/isString';\r\nimport { Ellipsoid } from '../core/Ellipsoid';\r\nimport { EventEmitter } from '../core/EventEmitter';\r\nimport { GeodeticCoordinate } from '../core/GeodeticCoordinate';\r\nimport { Projection, WebMercatorProjection } from '../core/Projection';\r\nimport { IRenderer } from '../render/IRenderer';\r\nimport { Sketchpad, TSketchpadDataSchema } from '../sketchpad/Sektchpad';\r\n\r\n/**\r\n * @class\r\n */\r\nclass Globe extends EventEmitter {\r\n    /**\r\n    * Global启动时执行的钩子\r\n    */\r\n    public static hooks: { func: Function, args: any[] }[] = [];\r\n\r\n    /**\r\n     * \r\n     * @param func \r\n     * @param args \r\n     */\r\n    static registerHook(func: Function, ...args: any[]) {\r\n        Globe.hooks.push({ func, args });\r\n    }\r\n\r\n    /**\r\n     * 初始化地图对象参数\r\n     */\r\n    protected origin: {\r\n        center: GeodeticCoordinate,\r\n        zoom: number,\r\n        zoomMin: number,\r\n        zoomMax: number\r\n    }\r\n\r\n    /**\r\n     * canvas\r\n     */\r\n    protected canvas: HTMLCanvasElement;\r\n\r\n    /**\r\n     * 设备ppi比率\r\n     */\r\n    protected devicePixelRatio: number;\r\n\r\n    /**\r\n     * 当前参考椭球\r\n     */\r\n    protected ellipsoid: Ellipsoid;\r\n\r\n    /**\r\n     * 当前地图投影\r\n     */\r\n    protected prjection: Projection;\r\n\r\n    /**\r\n     * 显示区域像素宽度\r\n     */\r\n    protected width: number;\r\n\r\n    /**\r\n     * 显示区域像素高度\r\n     */\r\n    protected height: number;\r\n\r\n    /**\r\n     * Globe总渲染器，调度入口\r\n     */\r\n    protected renderer: IRenderer;\r\n\r\n    /**\r\n     * 装载到场景的可渲染对象集合\r\n     */\r\n    private sketchpads: Sketchpad<TSketchpadDataSchema>[] = [];\r\n\r\n    /**\r\n     * 初始化地图信息快照\r\n     */\r\n    public get Origin() {\r\n        return this.origin;\r\n    }\r\n\r\n    /**\r\n     * dom元素\r\n     */\r\n    public get Canvas(): HTMLCanvasElement {\r\n        return this.canvas;\r\n    }\r\n\r\n    /**\r\n     * 获取投影的参考椭球\r\n     */\r\n    public get Ellipsoid(): Ellipsoid {\r\n        return this.ellipsoid;\r\n    }\r\n\r\n    /**\r\n     * 最长半径（椭球最长轴）\r\n     */\r\n    public get MaximumRadius(): number {\r\n        return this.ellipsoid.MaximumRadius;\r\n    }\r\n\r\n    /**\r\n     * 地图当前缩放层级\r\n     */\r\n    public get Zoom():number{\r\n        return this._state_quadtree_.level;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public get Width(): number {\r\n        return this.width;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public get Height(): number {\r\n        return this.height;\r\n    }\r\n\r\n    public get DevicePixelRatio(): number {\r\n        return this.devicePixelRatio;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public get Sketchpads(): Sketchpad<TSketchpadDataSchema>[] {\r\n        return this.sketchpads;\r\n    }\r\n\r\n    /**\r\n    * \r\n    * @param opts \r\n    */\r\n    constructor(\r\n        opts: {\r\n            width: number,\r\n            height: number,\r\n            coordinate: GeodeticCoordinate,\r\n            canvas: string | HTMLCanvasElement,\r\n            zoom: number,\r\n            zoomMax?: number,\r\n            zoomMin?: number,\r\n            zoomable?: boolean,\r\n            panable?: boolean,\r\n            devicePixelRatio?: number,\r\n        }\r\n    ) {\r\n        super();\r\n        this.canvas = (isString(opts.canvas) ? document.getElementById(opts.canvas as string) : opts.canvas) as HTMLCanvasElement;\r\n        this.devicePixelRatio = opts.devicePixelRatio || browser.devicePixelRatio || 1.0;\r\n        this.width = opts.width;\r\n        this.height = opts.height;\r\n        this.prjection = new WebMercatorProjection();\r\n        this.ellipsoid = this.prjection.Ellipsoid;\r\n        this.origin = {\r\n            center: opts.coordinate.toGeodetic(),\r\n            zoom: opts.zoom,\r\n            zoomMax: opts.zoomMax || 20,\r\n            zoomMin: opts.zoomMin || 0\r\n        };\r\n        this.initCavnasAndCamera();\r\n        this.initHooks();\r\n        //辅助功能，待设计开启关闭\r\n        this.initAuxTools();\r\n    }\r\n\r\n    private initCavnasAndCamera = (): void => {\r\n        const c = this.origin.center, r = this.devicePixelRatio;\r\n        const w = this.width, h = this.height, rw = r * w, rh = r * h;\r\n        this.canvas.width = rw;\r\n        this.canvas.height = rh;\r\n        this.canvas.style.width = `${w}px`;\r\n        this.canvas.style.height = `${h}px`;\r\n        //register camera\r\n        this.registerCamera(c);\r\n    }\r\n\r\n    private initHooks = (): void => {\r\n        Globe.hooks?.forEach(hook => {\r\n            const { func, args } = hook;\r\n            func.apply(this, args);\r\n        });\r\n    }\r\n\r\n    private initAuxTools = (): void => {\r\n        //this.EnableCursorAuxTool();\r\n    }\r\n\r\n    public add = <T extends TSketchpadDataSchema>(skpd: Sketchpad<T>) => {\r\n        this.sketchpads.push(skpd);\r\n        skpd.attach(this);\r\n        this.updateQuadtreeTileByDistanceError();\r\n    }\r\n}\r\n\r\nexport { Globe }","import { Vec3 } from \"kiwi.matrix\";\r\nimport { Ellipsoid } from \"./Ellipsoid\";\r\n\r\n/**\r\n * 有向向量\r\n */\r\nclass Ray {\r\n    /**\r\n     * \r\n     */\r\n    private startpoint: Vec3;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private endpoint: Vec3;\r\n\r\n    /**\r\n     * \r\n     * @param startpoint 向量起点\r\n     * @param endpoint 向量终点\r\n     */\r\n    constructor(startpoint: Vec3, endpoint: Vec3) {\r\n        this.startpoint = startpoint.clone();\r\n        this.endpoint = endpoint.clone();\r\n    }\r\n\r\n    /**\r\n     * 百分比打断向量，返回起点->终点的向量\r\n     * @param t \r\n     */\r\n    public at(t: number): Vec3 {\r\n        return this.endpoint.clone().scale(t).add(this.startpoint);\r\n    }\r\n\r\n    /**\r\n     * 计算射线与地球椭球体表面的相交位置\r\n     * @param {*} plane \r\n     */\r\n    public intersectSphere(sphere: Ellipsoid): Vec3 {\r\n        const v = new Vec3().set(0, 0, 0).sub(this.startpoint);\r\n        //if( x2 + y2 > r2, 则不在球面)\r\n        const tca = v.dot(this.endpoint);\r\n        const d2 = v.dot(v) - tca * tca;\r\n        const radius2 = sphere.MaximumRadius * sphere.MaximumRadius;\r\n        if (d2 > radius2) return null;\r\n        const thc = Math.sqrt(radius2 - d2);\r\n        //t0 = first intersect point - entrance on front of sphere\r\n        const t0 = tca - thc;\r\n        // t1 = second intersect point - exit point on back of sphere\r\n        const t1 = tca + thc;\r\n        // test to see if both t0 and t1 are behind the ray - if so, return null\r\n        if (t0 < 0 && t1 < 0) return null;\r\n        //if t0 is behind the ray:the ray is inside the sphere, so return the second exit point scaled by t1,\r\n        // in order to always return an intersect point that is in front of the ray.\r\n        if (t0 < 0) return this.at(t1);\r\n        // t0 is in front of the ray, so return the first collision point scaled by t0\r\n        return this.at(t0);\r\n    }\r\n}\r\n\r\nexport { Ray }","import { GLMatrix, Mat4, Vec3 } from \"kiwi.matrix\";\r\nimport { atan, tan } from \"../util/fixed\";\r\n\r\n/**\r\n * @description 视锥投影矩阵\r\n */\r\nclass PerspectiveCamera {\r\n\r\n    private width: number;\r\n\r\n    private height: number;\r\n\r\n    /**\r\n     * 视野夹角，弧度表示, 默认60°\r\n     */\r\n    private fov: number = Math.PI / 3;\r\n\r\n    /**\r\n     * 投影近平面距离\r\n     */\r\n    private near: number;\r\n\r\n    /**\r\n     * 投影远平面距离\r\n     */\r\n    private far: number;\r\n\r\n    /**\r\n     * 视郁纵横比\r\n     */\r\n    private aspect: number;\r\n\r\n    /**\r\n     * 摄像机位置（笛卡尔坐标系）\r\n     */\r\n    private position: Vec3 = new Vec3();\r\n\r\n    /**\r\n     * 世界原点\r\n     */\r\n    private target: Vec3 = new Vec3().set(0, 0, 0);\r\n\r\n    /**\r\n     * 笛卡尔坐标系，Z轴朝上\r\n     */\r\n    private up: Vec3 = new Vec3().set(0, 0, 1);\r\n\r\n    /**\r\n     * 单位矩阵（modelMatrix备用）\r\n     */\r\n    private identityMatrix: Mat4;\r\n\r\n    /**\r\n     * 投影矩阵，转换摄像头下物体坐标到屏幕NDC坐标\r\n     */\r\n    private projectionMatrix: Mat4;\r\n\r\n    /**\r\n     * 摄像机矩阵，基于摄像机位置观察世界物体的位置矩阵\r\n     */\r\n    private cameraMatrix: Mat4;\r\n\r\n    /**\r\n     * 视角矩阵，摄像机矩阵逆矩阵，相当于从世界角度观察摄像机物体位置\r\n     */\r\n    private viewMatrix: Mat4;\r\n\r\n    /**\r\n     * 投影矩阵x视角矩阵\r\n     */\r\n    private viewProjectionMatrix: Mat4;\r\n\r\n    /**\r\n     * 视锥体参数-top\r\n     */\r\n    private top: number;\r\n\r\n    /**\r\n     * 视锥体参数-bottom\r\n     */\r\n    private bottom: number;\r\n\r\n    /**\r\n     * 视锥体参数-right\r\n     */\r\n    private right: number;\r\n\r\n    /**\r\n     * 视锥体参数-left\r\n     */\r\n    private left: number;\r\n\r\n    /**\r\n     * 视锥体参数-sseDenominator\r\n     */\r\n    private sseDenominator: number;\r\n\r\n    /**\r\n     * @description 摄像机构造\r\n     * \r\n     * @example\r\n     * //构造摄像头\r\n     * const camera = new PerspectvieCamera(60, 800, 600, 1, 1000);\r\n     * \r\n     * @param fov 视锥角度，使用度（°）表示，例如60°\r\n     * @param width viewport像素宽度\r\n     * @param height viewport像素高度\r\n     * @param near 近平面距离\r\n     * @param far 远平面距离\r\n     */\r\n    constructor(fov: number, width: number, height: number, near: number, far: number) {\r\n        this.position.set(height, 0, 0);\r\n        this.width = width;\r\n        this.height = height;\r\n        this.aspect = width && height ? width / height : 1.0;\r\n        this.fov = GLMatrix.toRadian(fov);\r\n        this.near = near ? near : 0.1;\r\n        this.far = far ? far : 2000;\r\n        this.identityMatrix = new Mat4().identity();\r\n        this.projectionMatrix = Mat4.perspective(this.fov, this.aspect, this.near, this.far);\r\n        this.updateProjectionMatrix();\r\n        this.updateViewFrustrum();\r\n    }\r\n\r\n    /**\r\n     * 更新投影矩阵\r\n     */\r\n    private updateProjectionMatrix = (): void => {\r\n        const cameraMatrix = new Mat4().lookAt(this.position, this.target, this.up);\r\n        this.cameraMatrix = cameraMatrix.clone();\r\n        this.viewMatrix = cameraMatrix.invert();\r\n        this.viewProjectionMatrix = this.projectionMatrix.clone().multiply(this.viewMatrix)\r\n    }\r\n\r\n    /**\r\n     * 更新frustrum可视域体积计算\r\n     */\r\n    private updateViewFrustrum = (): void => {\r\n        //视锥体容积参数转换\r\n        const aspectRatio = this.aspect, fov = this.fov, fovy = aspectRatio <= 1.0 ? fov : atan((tan(fov * 0.5) / aspectRatio) * 2.0), near = this.near;\r\n        //容积计算\r\n        this.top = near * tan(0.5 * fovy);\r\n        this.bottom = -this.top;\r\n        this.right = aspectRatio * this.top;\r\n        this.left = -this.right;\r\n        //sseDenminator\r\n        this.sseDenominator = 2.0 * tan(0.5 * fovy);\r\n    }\r\n\r\n    /**\r\n     * 更新摄像头矩阵信息\r\n     * @param v \r\n     */\r\n    public lookAt = (v: Vec3): void => {\r\n        this.target.set(v.x, v.y, v.z);\r\n        this.updateProjectionMatrix();\r\n    }\r\n\r\n    /**\r\n     * 设置摄像机位置\r\n     */\r\n    public set Position(v: Vec3) {\r\n        this.position.set(v.x, v.y, v.z);\r\n        this.updateProjectionMatrix();\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public get Position(): Vec3 {\r\n        return this.position;\r\n    }\r\n\r\n    /**\r\n     * 摄像头矩阵（以摄像机为中兴观察世界物体坐标表示矩阵）\r\n     */\r\n    public get CameraMatrix(): Mat4 {\r\n        return this.cameraMatrix;\r\n    }\r\n\r\n    /**\r\n     * 视角矩阵\r\n     */\r\n    public get ViewMatrix(): Mat4 {\r\n        return this.viewMatrix;\r\n    }\r\n\r\n    /**\r\n     * 投影矩阵\r\n     */\r\n    public get ProjectionMatrix(): Mat4 {\r\n        return this.projectionMatrix;\r\n    }\r\n\r\n    /**\r\n     * 投影矩阵x视角矩阵\r\n     */\r\n    public get ViewProjectionMatrix(): Mat4 {\r\n        return this.viewProjectionMatrix;\r\n    }\r\n\r\n    /**\r\n     * 世界坐标元原点\r\n     */\r\n    public get Target(): Vec3 {\r\n        return this.target;\r\n    }\r\n\r\n    /**\r\n     * 摄像机正上方\r\n     */\r\n    public get Up(): Vec3 {\r\n        return this.up;\r\n    }\r\n\r\n    /**\r\n     * 单位矩阵\r\n     */\r\n    public get IdentityMatrix(): Mat4 {\r\n        return this.identityMatrix;\r\n    }\r\n\r\n    /**\r\n     * 视锥参数\r\n     */\r\n    public get SseDenominator(): number {\r\n        return this.sseDenominator;\r\n    }\r\n}\r\n\r\nexport { PerspectiveCamera }","import { Vec3 } from 'kiwi.matrix';\r\n\r\nimport { Globe } from './Globe';\r\n\r\nimport { Ray } from '../core/Ray';\r\nimport { PerspectiveCamera } from '../camera/PerspectiveCamera';\r\nimport { GeodeticCoordinate } from '../core/GeodeticCoordinate';\r\nimport { IClientPoint, IViewContainer } from '../core/Format';\r\n\r\n/**\r\n * View支持，在Camear下支持\r\n * -LOD\r\n * -坐标转换(ndc，大地坐标，空间坐标等)\r\n */\r\ndeclare module './Globe' {\r\n    interface Globe {\r\n        /**\r\n         * \r\n         * @param coord \r\n         */\r\n        registerCamera(coord: GeodeticCoordinate): void;\r\n\r\n        /**\r\n         * 获取屏幕坐标与空间坐标(0,0,0)连线，与参考椭球体表面相交点坐标\r\n         * @param point \r\n         */\r\n        rayTrackOnSphere(point: IClientPoint): Vec3;\r\n\r\n        /**\r\n         * 屏幕NDC坐标转换成大地坐标（默认在地球表面）\r\n         * @param point \r\n         */\r\n        normalizedDeviceCoordinate(point: IClientPoint): Vec3;\r\n\r\n        /**\r\n         * 地理坐标转换成空间坐标，支持地面高度转换\r\n         * @param coord \r\n         */\r\n        geographicToSpaceCoordinate(coord: GeodeticCoordinate): Vec3;\r\n\r\n        /**\r\n         * 屏幕DNC坐标转换成空间坐标\r\n         * @param pndc \r\n         */\r\n        normalizedDeviceCoordinateToSpaceCoordinate(pndc: Vec3): Vec3;\r\n\r\n        /**\r\n         * 空间坐标转屏幕NDC坐标\r\n         * @param spaceCoord \r\n         */\r\n        spaceCoordinateToNormaziledDeveiceCoordinate(spaceCoord: Vec3): Vec3;\r\n\r\n        /**\r\n         * 空间坐转换成地球大地坐标（投射到地球表面）\r\n         * @param spaceCoord \r\n         */\r\n        spaceCoordinateToGeographic(spaceCoord:Vec3):GeodeticCoordinate;\r\n\r\n        /**\r\n         * \r\n         */\r\n        _state_camera_: {\r\n            camera: PerspectiveCamera;\r\n            target: Vec3,                //摄像头关注的中心\r\n            viewCenter: IClientPoint;\r\n            viewContainer: IViewContainer;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 相机注册\r\n */\r\nGlobe.prototype.registerCamera = function (coord: GeodeticCoordinate): void {\r\n    const g = this as Globe;\r\n    //1. 获取element信息\r\n    const box = g.Canvas.getBoundingClientRect(), dom = g.Canvas.ownerDocument.documentElement;\r\n    //2. 获取view信息\r\n    const left = box.left + window.pageXOffset - dom.clientLeft,\r\n        top = box.top + window.pageYOffset - dom.clientTop,\r\n        width = box.width,\r\n        height = box.height;\r\n    //3. 计算\r\n    g._state_camera_ = {\r\n        camera: new PerspectiveCamera(60, width, height, 100, g.Ellipsoid.MaximumRadius * 10),\r\n        viewContainer: {\r\n            left,\r\n            top,\r\n            width,\r\n            height,\r\n        },\r\n        viewCenter: {\r\n            clientX: width / 2,\r\n            clientY: height / 2\r\n        },\r\n        target: new Vec3().set(0, 0, 0)\r\n    };\r\n    //4.更新初始化相机参数\r\n    const p0 = g.geographicToSpaceCoordinate(coord);\r\n    g._state_camera_.camera.Position = p0;\r\n    g._state_camera_.camera.lookAt(new Vec3().set(0, 0, 0));\r\n}\r\n\r\n/**\r\n * 获取屏幕坐标与空间坐标(0,0,0)连线，与参考椭球体表面相交点坐标\r\n */\r\nGlobe.prototype.rayTrackOnSphere = function (point: IClientPoint): Vec3 {\r\n    const g = this as Globe;\r\n    const pndc = g.normalizedDeviceCoordinate(point);\r\n    const space = g.normalizedDeviceCoordinateToSpaceCoordinate(pndc);\r\n    const d = space.sub(g._state_camera_.camera.Position.clone()).normalize();\r\n    const ray = new Ray(g._state_camera_.camera.Position.clone(), d);\r\n    return ray.intersectSphere(g.Ellipsoid);\r\n}\r\n\r\n/**\r\n * 通过ClientX,ClientY换算成设备的NDC坐标\r\n * 输入容器中client坐标\r\n */\r\nGlobe.prototype.normalizedDeviceCoordinate = function (point: IClientPoint): Vec3 {\r\n    const g = this as Globe;\r\n    const x = (point.clientX / g._state_camera_.viewContainer.width) * 2 - 1,\r\n        y = -(point.clientY / g._state_camera_.viewContainer.height) * 2 + 1;\r\n    return new Vec3().set(x, y, 1);\r\n}\r\n\r\n/**\r\n * ndc坐标换算成空间坐标\r\n */\r\nGlobe.prototype.normalizedDeviceCoordinateToSpaceCoordinate = function (pndc: Vec3): Vec3 {\r\n    const g = this as Globe;\r\n    const m4 = g._state_camera_.camera.CameraMatrix.clone().multiply(g._state_camera_.camera.ProjectionMatrix.clone().invert());\r\n    const space = pndc.clone().applyMatrix4(m4);\r\n    return space;\r\n}\r\n\r\n/**\r\n * space coordinate 转换成屏幕NDC坐标\r\n */\r\nGlobe.prototype.spaceCoordinateToNormaziledDeveiceCoordinate = function (space: Vec3): Vec3 {\r\n    const g = this as Globe;\r\n    const ndc = space.clone().applyMatrix4(g._state_camera_.camera.ViewProjectionMatrix);\r\n    return ndc;\r\n}\r\n\r\n/**\r\n * 大地坐标转换成空间坐标\r\n */\r\nGlobe.prototype.geographicToSpaceCoordinate = function (coord: GeodeticCoordinate): Vec3 {\r\n    const g = this as Globe;\r\n    const space = g.Ellipsoid.geographicToSpace(coord);\r\n    return space;\r\n}\r\n\r\n/**\r\n * 空间坐标转大地坐标（投影到地球表面）\r\n */\r\nGlobe.prototype.spaceCoordinateToGeographic = function(spaceCoord:Vec3):GeodeticCoordinate{\r\n    const g = this as Globe;\r\n    const geoCoord = g.Ellipsoid.spaceToGeographic(spaceCoord);\r\n    return geoCoord;\r\n}","/**\r\n * 去除字符空格\r\n */\r\nconst trim = function (input: string): string {\r\n    return ((input || '') + '').replace(/^\\s+|\\s+$/g, '');\r\n}\r\n\r\n/**\r\n * \r\n * @param input \r\n */\r\nconst split = function (input: string): string[] {\r\n    return trim(input).split(/\\s+/);\r\n}\r\n\r\nexport { split }","/**\r\n * https://github.com/maptalks/maptalks.js/blob/65ad8ee2e52fe8b04903b0d51b969fd87d04fb64/src/core/util/dom.js#L144\r\n * call 调用明确的参数\r\n * apply 调用...rest args\r\n */\r\n\r\nimport { split } from './split';\r\nimport { browser } from './browser';\r\nimport { IClientPoint } from '../core/Format';\r\n\r\nconst PREFIX = '_geosketchpad_';\r\n\r\nconst addDOMEvent = function (element: HTMLElement, eventName: string, handler: Function, context: Object): void {\r\n    const eventHandler = function (e: Event): void {\r\n        e = e || window.event;\r\n        handler.call(context || element, e);\r\n    }\r\n    split(eventName).forEach((type: string) => {\r\n        const key = `${PREFIX}_${type}`;\r\n        element[key] = element[key] || [];\r\n        const hit = listenDOMEvent(element, type, handler);\r\n        if (hit >= 0) removeDOMEvent(element, type, handler);\r\n        element[key].push(eventHandler);\r\n        //}{debug IE和非IE浏览器略有区别\r\n        if (browser.ie)\r\n            element.addEventListener(type, eventHandler, false);\r\n        else\r\n            element.addEventListener(type, eventHandler, { capture: false, passive: false });\r\n    });\r\n}\r\n\r\nconst listenDOMEvent = function (element: HTMLElement, type: string, handler: Function): number {\r\n    const Key = `${PREFIX}_${type}`;\r\n    if (!element || !element[Key] || !handler) return -1;\r\n    const handlers = element[Key];\r\n    for (let i = 0, len = handlers.length; i < len; i++)\r\n        if (handlers[i] === handler)\r\n            return i;\r\n    return -1;\r\n}\r\n\r\nconst removeDOMEvent = function (element: HTMLElement, eventName: string, handler: Function): void {\r\n    const remove = function (type: string, fn: EventListener) {\r\n        element.removeEventListener(type, fn, false);\r\n    }\r\n    const types = split(eventName);\r\n    types.forEach((type) => {\r\n        const key = `${PREFIX}_${type}`;\r\n        if (!handler && element[key]) {\r\n            const handlers = element[key];\r\n            handlers?.forEach((listener: EventListener) => {\r\n                remove(type, listener);\r\n            });\r\n            delete element[key];\r\n        }\r\n        //\r\n        const hit = listenDOMEvent(element, type, handler);\r\n        if (hit > 0) remove(type, element[key] as EventListener);\r\n        element[key].splice(hit, 1);\r\n    });\r\n}\r\n\r\nconst preventDefault = function (e: Event): void {\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    else\r\n        e.returnValue = false;\r\n}\r\n\r\nconst stopPropagation = function (e: Event): void {\r\n    if (e.stopPropagation)\r\n        e.stopPropagation();\r\n    else\r\n        e.cancelBubble = true;\r\n}\r\n\r\nconst getEventContainerPosition = (e: MouseEvent | TouchEvent, dom: HTMLCanvasElement | HTMLDivElement): IClientPoint => {\r\n    const evt = e instanceof MouseEvent ? e : e.touches[0];\r\n    const style = window.getComputedStyle(dom);\r\n    const padding = [parseInt(style['padding-left']), parseInt(style['padding-top'])];\r\n    const rect = dom.getBoundingClientRect();\r\n    const offsetWidth = dom.offsetWidth, offsetHeight = dom.offsetHeight;\r\n    const scaleX = offsetWidth ? rect.width / offsetWidth : 1;\r\n    const scaleY = offsetHeight ? rect.height / offsetHeight : 1;\r\n    const position = [rect.left + padding[0], rect.top + padding[1], scaleX, scaleY];\r\n    return {\r\n        clientX: (evt.clientX - position[0] - dom.clientLeft) / position[2],\r\n        clientY: (evt.clientY - position[1] - dom.clientTop) / position[3]\r\n    }\r\n}\r\n\r\nexport {\r\n    getEventContainerPosition,\r\n    addDOMEvent,\r\n    removeDOMEvent,\r\n    preventDefault,\r\n    stopPropagation\r\n}","/**\r\n * 返回UTC时间\r\n * @returns \r\n */\r\nconst now = (): number => {\r\n    return Date.now();\r\n}\r\n\r\nexport { now }","import { Globe } from './Globe';\r\n\r\nimport { addDOMEvent, preventDefault } from '../util/dom';\r\nimport { now } from '../util/now';\r\nimport { IDOMEventParam } from '../core/Format';\r\n\r\n/**\r\n * 浏览器控件支持的交互类型\r\n * 提供：\r\n * -浏览器支持的交互事件注册\r\n * -无效的事件响应\r\n * \r\n */\r\nconst DOM_EVENT_TYPES =\r\n    'wheel ' +\r\n    'mousedown ' +\r\n    'mouseup ' +\r\n    'mouseover ' +\r\n    'mouseout ' +\r\n    'mouseenter ' +\r\n    'mouseleave ' +\r\n    'mousemove ' +\r\n    'click ' +\r\n    'dblclick ' +\r\n    'contextmenu ' +\r\n    'keypress ' +\r\n    'touchstart ' +\r\n    'touchmove ' +\r\n    'touchend ';\r\n\r\n/**\r\n * 合并申明\r\n * reference:\r\n * https://www.tslang.cn/docs/handbook/declaration-merging.html\r\n * https://github.com/maptalks/maptalks.js/blob/master/src/map/Map.DomEvents.js\r\n */\r\ndeclare module './Globe' {\r\n    interface Globe {\r\n        /**\r\n         * \r\n         */\r\n        registerDOMEventsHook(): void;\r\n\r\n        /**\r\n         * \r\n         * @param obj \r\n         * @param eventName \r\n         * @param handler \r\n         * @param context \r\n         */\r\n        onDOMEvent(obj: HTMLElement, eventName: string, handler: Function, context: object): void;\r\n\r\n        /**\r\n         * \r\n         * @param e \r\n         */\r\n        handleDOMEvent(e: Event): void;\r\n\r\n        /**\r\n         * 转换事件对象\r\n         * @param e \r\n         * @param type \r\n         */\r\n        parseEvent(e: Event, type: string): void;\r\n\r\n        /**\r\n         * \r\n         * @param e \r\n         */\r\n        getActualEvent(e: Event): boolean;\r\n\r\n        /**\r\n         * \r\n         */\r\n        _state_handler_dom_: {\r\n            mouseDownTime: number;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * 统一注册DOM事件\r\n */\r\nGlobe.prototype.registerDOMEventsHook = function () {\r\n    const g = this as Globe;\r\n    g._state_handler_dom_ = {\r\n        mouseDownTime: 0\r\n    };\r\n    //注册DOM事件\r\n    g.onDOMEvent(g.Canvas, DOM_EVENT_TYPES, g.handleDOMEvent, g);\r\n}\r\n\r\n/**\r\n * 单个DOM事件过滤\r\n */\r\nGlobe.prototype.onDOMEvent = function (element: HTMLElement, eventName: string, handler: Function, context: object): void {\r\n    const g = this as Globe;\r\n    addDOMEvent(element, DOM_EVENT_TYPES, g.handleDOMEvent, g);\r\n}\r\n\r\n/**\r\n * 统一预处理DOM\r\n * 1. 处理输入延迟\r\n * 2. 模拟doble click\r\n * 3. 统一处理touch，clcik\r\n */\r\nGlobe.prototype.handleDOMEvent = function (e: Event): void {\r\n    const g = this as Globe;\r\n    let type = e.type;\r\n    //prevent default context menu\r\n    if (type === 'contextmenu')\r\n        preventDefault(e);\r\n    //ignore click lasted for more than 300ms\r\n    if (type === 'mousedown' || (type === 'touchstart' && (!e['touches'] || e['touches'].length === 1)))\r\n        g._state_handler_dom_.mouseDownTime = now();\r\n    else if (type === 'click' || type === 'touchend' || type === 'contextmenu') {\r\n        //mousedown | touchstart propogation is stopped\r\n        //ignore the click/touchend/contextmenu\r\n        if (!this._mouseDownTime)\r\n            return;\r\n        else {\r\n            const downTime = g._state_handler_dom_.mouseDownTime;\r\n            delete g._state_handler_dom_.mouseDownTime;\r\n            const time = now();\r\n            if ((time - downTime > 300) && (type === 'click' || type === 'contextmenu'))\r\n                return;\r\n            else if (type === 'touchend' || type === 'click')   //小于300ms认为是双击\r\n                type = 'dbclick';\r\n        }\r\n    } else if (type === 'wheel' || (e['touches'] && e['touches'].length === 2)) {\r\n        type = 'zoom';\r\n    }\r\n    //发送事件\r\n    g.emit(type, g.parseEvent(e, type));\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.parseEvent = function (e: TouchEvent | MouseEvent, type: string): IDOMEventParam {\r\n    if (!e) return;\r\n    const ctx = this as Globe;\r\n    const DOMEventParam: IDOMEventParam = {\r\n        domEvent: e\r\n    };\r\n    if (type !== 'keypress' && ctx.getActualEvent(e)) {\r\n        // const containerPoint = getEventContainerPoint(actual, this._containerDOM);\r\n        // DOMEventParam = extend(DOMEventParam, {\r\n        //     'coordinate': this.containerPointToCoord(containerPoint),\r\n        //     'containerPoint': containerPoint,\r\n        //     'viewPoint': this.containerPointToViewPoint(containerPoint),\r\n        //     'point2d': this._containerPointToPoint(containerPoint),\r\n        // });\r\n    }\r\n    return DOMEventParam;\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.getActualEvent = function (e: Event): boolean {\r\n    return e['touches'] && e['touches'].length > 0 ? e['touches'][0] : e['changedTouches'] && e['changedTouches'].length > 0 ? e['changedTouches'][0] : e;\r\n}\r\n\r\n//钩子，handler插件需要预执行的方法注册到钩子里\r\nGlobe.registerHook(Globe.prototype.registerDOMEventsHook);","import { QuadtreeTileSchema } from \"./QuadtreeTileSchema\";\r\nimport { Rectangle } from \"./Rectangle\";\r\n\r\n/**\r\n * 四叉树形式的Tile组织，用于快速检索瓦片信息\r\n * @class\r\n */\r\nclass QuadtreeTile {\r\n    /**\r\n     * \r\n     */\r\n    private parent: QuadtreeTile;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private level: number;\r\n    /**\r\n     * \r\n     */\r\n    private y: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private x: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private quadtreeTileSchema: QuadtreeTileSchema;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private southwestChild: QuadtreeTile;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private southeastChild: QuadtreeTile;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private northwestChild: QuadtreeTile;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private northeastChild: QuadtreeTile;\r\n\r\n    /**\r\n     * 该瓦片地理范围\r\n     */\r\n    private boundary: Rectangle;\r\n\r\n    /**\r\n     * \r\n     * @param quadtreeTileSchema 瓦片投影计算模式，一般采用Web墨卡托Schema\r\n     * @param x \r\n     * @param y \r\n     * @param level \r\n     * @param parent \r\n     */\r\n    constructor(quadtreeTileSchema: QuadtreeTileSchema, x: number, y: number, level: number, parent: QuadtreeTile) {\r\n        this.quadtreeTileSchema = quadtreeTileSchema;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.level = level;\r\n        this.parent = parent;\r\n        this.boundary = this.quadtreeTileSchema.tileXYToRectangle(x, y, level);\r\n    }\r\n\r\n    get X(): number {\r\n        return this.x;\r\n    }\r\n\r\n    get Y(): number {\r\n        return this.y;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Boundary(): Rectangle {\r\n        const tileSchema = this.quadtreeTileSchema,\r\n            x = this.x,\r\n            y = this.y,\r\n            l = this.level;\r\n        return tileSchema.tileXYToRectangle(x, y, l);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Level(): number {\r\n        return this.level;\r\n    }\r\n\r\n    /**\r\n     * foreach quard tree\r\n     */\r\n    get Children(): QuadtreeTile[] {\r\n        return [this.NorthwestChild, this.NortheastChild, this.SouthwestChild, this.SoutheastChild];\r\n    }\r\n\r\n    /**\r\n     * Gets the southwest child tile.\r\n     */\r\n    get SouthwestChild(): QuadtreeTile {\r\n        this.southwestChild = this.southwestChild || new QuadtreeTile(\r\n            this.quadtreeTileSchema,\r\n            this.x * 2,\r\n            this.y * 2 + 1,\r\n            this.level + 1,\r\n            this);\r\n        return this.southwestChild;\r\n    }\r\n\r\n    /**\r\n     * Gets the southeast child tile.\r\n     */\r\n    get SoutheastChild(): QuadtreeTile {\r\n        this.southeastChild = this.southeastChild || new QuadtreeTile(\r\n            this.quadtreeTileSchema,\r\n            this.x * 2 + 1,\r\n            this.y * 2 + 1,\r\n            this.level + 1,\r\n            this);\r\n        return this.southeastChild;\r\n    }\r\n\r\n    /**\r\n     * Gets the northwest child tile.\r\n     */\r\n    get NorthwestChild(): QuadtreeTile {\r\n        this.northwestChild = this.northwestChild || new QuadtreeTile(\r\n            this.quadtreeTileSchema,\r\n            this.x * 2,\r\n            this.y * 2,\r\n            this.level + 1,\r\n            this);\r\n        return this.northwestChild;\r\n    }\r\n\r\n    /**\r\n     * Gets the northeast child tile.\r\n     */\r\n    get NortheastChild(): QuadtreeTile {\r\n        this.northeastChild = this.northeastChild || new QuadtreeTile(\r\n            this.quadtreeTileSchema,\r\n            this.x * 2 + 1,\r\n            this.y * 2,\r\n            this.level + 1,\r\n            this);\r\n        return this.northeastChild;\r\n    }\r\n}\r\n\r\nexport { QuadtreeTile }","import { GLMatrix } from 'kiwi.matrix';\r\n\r\nimport { EPSILON } from '../util/epsilon';\r\nimport { GeodeticCoordinate } from './GeodeticCoordinate';\r\n\r\nconst TWO_PI = 2 * Math.PI;\r\n\r\n/**\r\n * 求公约数\r\n * @param m \r\n * @param n \r\n */\r\nconst modValue = function (m: number, n: number): number {\r\n    return ((m % n) + n) % n;\r\n};\r\n\r\n/**\r\n * \r\n * @param angle in radian\r\n */\r\nconst zeroToTwoPi = function (angle: number) {\r\n    const mod = modValue(angle, TWO_PI);\r\n    return Math.abs(mod) < EPSILON.EPSILON14 && Math.abs(angle) > EPSILON.EPSILON14 ? TWO_PI : mod;\r\n};\r\n\r\n/**\r\n * \r\n * @param angle in radian\r\n */\r\nconst negativePiToPi = function (angle: number): number {\r\n    return zeroToTwoPi(angle + Math.PI) - Math.PI;\r\n};\r\n\r\n/**\r\n * 基于大地坐标表示的地理范围\r\n * @class\r\n */\r\nclass Rectangle {\r\n\r\n    /**\r\n     * left side position in meters\r\n     */\r\n    private west: number;\r\n\r\n    /**\r\n     * bottom side position in meters\r\n     */\r\n    private south: number;\r\n\r\n    /**\r\n     * right side position in meters\r\n     */\r\n    private east: number;\r\n\r\n    /**\r\n     * top side position in meters\r\n     */\r\n    private north: number;\r\n\r\n    /**\r\n     * -支持使用经纬度表示的地理范围\r\n     * @param sw southwest 经纬度表示(degree)\r\n     * @param ne northeast 经纬度表示(degree)\r\n     */\r\n    constructor(sw: GeodeticCoordinate, ne: GeodeticCoordinate) {\r\n        this.south = sw.Latitude;\r\n        this.west = sw.Longitude;\r\n        this.north = ne.Latitude;\r\n        this.east = ne.Longitude;\r\n    }\r\n\r\n    /**\r\n     * 地理范围最大值\r\n     */\r\n    static MAX_VALUE = new Rectangle(new GeodeticCoordinate(-180, -90), new GeodeticCoordinate(180, 90));\r\n\r\n    /**\r\n     * range X\r\n     */\r\n    get Width(): number {\r\n        const east = this.east, west = this.west;\r\n        return east < west ? east + Math.PI * 2 - west : east - west;\r\n    }\r\n\r\n    /**\r\n     * range Y\r\n     */\r\n    get Height(): number {\r\n        const north = this.north, south = this.south;\r\n        return north - south;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Bounds(): Array<GeodeticCoordinate> {\r\n        return [this.Southwest, this.Northwest, this.Northeast, this.Southeast];\r\n    }\r\n\r\n    /**\r\n     * get southwets in radians\r\n     */\r\n    get Southwest(): GeodeticCoordinate {\r\n        return new GeodeticCoordinate(this.west, this.south, 0.0);\r\n    }\r\n\r\n    /**\r\n    * get north west in radians\r\n    */\r\n    get Northwest(): GeodeticCoordinate {\r\n        return new GeodeticCoordinate(this.west, this.north, 0.0);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Northeast(): GeodeticCoordinate {\r\n        return new GeodeticCoordinate(this.east, this.north, 0.0);\r\n    }\r\n\r\n    /**\r\n     * get sourheast in radians\r\n     */\r\n    get Southeast(): GeodeticCoordinate {\r\n        return new GeodeticCoordinate(this.east, this.south, 0.0);\r\n    }\r\n\r\n    /**\r\n     * get center of rectangle\r\n     */\r\n    get Center(): GeodeticCoordinate {\r\n        const west = GLMatrix.toRadian(this.west),\r\n            south = GLMatrix.toRadian(this.south),\r\n            north = GLMatrix.toRadian(this.north);\r\n        let east = GLMatrix.toRadian(this.east);\r\n        east = east < west ? east + TWO_PI : east;\r\n        const longitude = negativePiToPi((west + east) * 0.5);\r\n        const latitude = (south + north) * 0.5;\r\n        return new GeodeticCoordinate(GLMatrix.toDegree(longitude), GLMatrix.toDegree(latitude), 0.0);\r\n    }\r\n\r\n    /**\r\n     * 计算地理坐标是否在范围内\r\n     * @param geodeticCoordinate \r\n     */\r\n    public Contain(geodeticCoordinate: GeodeticCoordinate): boolean {\r\n        const lng = GLMatrix.toRadian(geodeticCoordinate.Longitude), lat = GLMatrix.toRadian(geodeticCoordinate.Latitude);\r\n        const west = GLMatrix.toRadian(this.west), south = GLMatrix.toRadian(this.south), north = GLMatrix.toRadian(this.north);\r\n        let east = GLMatrix.toRadian(this.east);\r\n        east = east < west ? east + TWO_PI : east;\r\n        return (lng > west || Math.abs(lng - west) <= EPSILON.EPSILON14) && (lng < east || Math.abs(lng - east) <= EPSILON.EPSILON14) && lat >= south && lat <= north;\r\n    }\r\n}\r\n\r\nexport { Rectangle }","import { Vec2, Vec4, Vec3 } from \"kiwi.matrix\";\r\nimport { Ellipsoid } from \"./Ellipsoid\";\r\nimport { Projection, WebMercatorProjection } from \"./Projection\";\r\nimport { Rectangle } from './Rectangle';\r\n\r\n/**\r\n * 瓦片组织规范\r\n * https://github.com/AnalyticalGraphicsInc/cesium/blob/f87fbadb79d8410deeb5c3f66228c235344a44f2/Source/Core/WebMercatorTilingScheme.js#L42\r\n */\r\nclass QuadtreeTileSchema {\r\n    /**\r\n     * \r\n     */\r\n    private numberOfLevelZeroTilesX: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private numberOfLevelZeroTilesY: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private projection: Projection;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private ellipsoid: Ellipsoid;\r\n\r\n    /**\r\n     * 半轴xPi\r\n     */\r\n    private semimajorAxisTimesPi: number;\r\n\r\n    /**\r\n     * 投影坐标表示的地理范围(西南)\r\n     */\r\n    private rectangleSouthwestInMeters: Vec2;\r\n\r\n    /**\r\n     * 投影坐标表示的地理范围(东北)\r\n     */\r\n    private rectangleNortheastInMeters: Vec2;\r\n\r\n    /**\r\n     * \r\n     * @param projection \r\n     * @param xNumber \r\n     * @param yNumber \r\n     */\r\n    constructor(projection: Projection, xNumber: number = 1, yNumber: number = 1) {\r\n        this.numberOfLevelZeroTilesX = xNumber | 1;\r\n        this.numberOfLevelZeroTilesY = yNumber | 1;\r\n        this.projection = projection;\r\n        this.ellipsoid = projection.Ellipsoid;\r\n        this.semimajorAxisTimesPi = projection.Ellipsoid.MaximumRadius * Math.PI;\r\n        this.rectangleSouthwestInMeters = new Vec2().set(-this.semimajorAxisTimesPi, -this.semimajorAxisTimesPi);\r\n        this.rectangleNortheastInMeters = new Vec2().set(this.semimajorAxisTimesPi, this.semimajorAxisTimesPi);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param level \r\n     */\r\n    public getNumberOfXTilesAtLevel(level: number): number {\r\n        return this.numberOfLevelZeroTilesX << level;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param level \r\n     */\r\n    public getNumberOfYTilesAtLevel(level: number): number {\r\n        return this.numberOfLevelZeroTilesY << level;\r\n    }\r\n\r\n    /**\r\n     * 将瓦片x,y,level编号计算成投影后的坐标范围\r\n     * @param x \r\n     * @param y \r\n     * @param level \r\n     */\r\n    public tileXYToNativeRectangle(x: number, y: number, level: number): Vec4 {\r\n        const xTiles = this.getNumberOfXTilesAtLevel(level),\r\n            yTiles = this.getNumberOfYTilesAtLevel(level),\r\n            xTileWidth = (this.rectangleNortheastInMeters.x - this.rectangleSouthwestInMeters.x) / xTiles;\r\n        const west = this.rectangleSouthwestInMeters.x + x * xTileWidth,\r\n            east = this.rectangleSouthwestInMeters.x + (x + 1) * xTileWidth,\r\n            yTileHeight = (this.rectangleNortheastInMeters.y - this.rectangleSouthwestInMeters.y) / yTiles;\r\n        const north = this.rectangleNortheastInMeters.y - y * yTileHeight,\r\n            south = this.rectangleNortheastInMeters.y - (y + 1) * yTileHeight;\r\n        return new Vec4().set(west, south, east, north);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param x \r\n     * @param y \r\n     * @param level \r\n     */\r\n    public tileXYToRectangle(x: number, y: number, level: number): Rectangle {\r\n        const [west, south, east, north] = this.tileXYToNativeRectangle(x, y, level).value;\r\n        const projection = this.projection;\r\n        const sw = projection.unproject(new Vec3().set(west, south, 0));\r\n        const ne = projection.unproject(new Vec3().set(east, north, 0));\r\n        return new Rectangle(sw, ne);\r\n    }\r\n}\r\n\r\n//Web墨卡托\r\nconst webMercatorTileSchema = new QuadtreeTileSchema(new WebMercatorProjection(), 1, 1);\r\n\r\nexport {\r\n    webMercatorTileSchema,\r\n    QuadtreeTileSchema\r\n}","import { Vec3 } from 'kiwi.matrix';\r\n\r\nimport { Globe } from './Globe';\r\n\r\nimport { QuadtreeTile } from './../core/QuadtreeTile';\r\nimport { QuadtreeTileSchema, webMercatorTileSchema } from './../core/QuadtreeTileSchema';\r\n\r\n//\r\nconst MAXIMUM_SCREEN_SPACEERROR = 3.0;\r\n\r\n/**\r\n * 瓦片四叉树结构\r\n * 配合PersepcetiveCamera构建\r\n */\r\ndeclare module './Globe' {\r\n    interface Globe {\r\n        /**\r\n         * 四叉树初始化（z序列索引）\r\n         * @param tileSchema \r\n         */\r\n        registerQuadtree(tileSchema: QuadtreeTileSchema): void;\r\n\r\n        /**\r\n         * 获取0级瓦片与给定向量（posiont->target）相交的瓦片\r\n         * @param position \r\n         */\r\n        pickZeroLevelQuadtreeTiles(position: Vec3): QuadtreeTile[];\r\n\r\n        /**\r\n         * 计算给定level最大几何误差\r\n         * @param level \r\n         */\r\n        computeMaximumGeometricError(level: number): number;\r\n\r\n        /**\r\n         * 获取第0层瓦片\r\n         */\r\n        computeZeroLevelTiles(): QuadtreeTile[];\r\n\r\n        /**\r\n         * 计算第level级瓦片\r\n         */\r\n        computeLevelTiles(level: number): QuadtreeTile[];\r\n\r\n        /**\r\n         * 计算空间误差（用于界定z序索引变换）\r\n         * @param quadtreeTile \r\n         */\r\n        computeSpaceError(quadtreeTile: QuadtreeTile): number;\r\n\r\n        /**\r\n         * 计算指定缩放层级最大摄像机高度\r\n         * @param level \r\n         */\r\n        getMaximumCameraHeightByLevel(level: number): number;\r\n\r\n        /**\r\n         * \r\n         */\r\n        updateQuadtreeTileByDistanceError(): void;\r\n\r\n        /**\r\n         * \r\n         */\r\n        _state_quadtree_: {\r\n            maximumScreenSpaceError: number,\r\n            level: number;                          //当前globe的缩放层级\r\n            geometricError: number[];               //不同层级几何误差\r\n            maximumCameraHeight: number[];          //相机在不同缩放层级的最大高度\r\n            zeroLevelTiles: QuadtreeTile[];         //初始化层Tileinfo\r\n            visualRevealTiles: QuadtreeTile[];       //视椎区全部瓦片\r\n            quadtreeTileSchema: QuadtreeTileSchema; //瓦片索引规则\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.registerQuadtree = function (tileSchema: QuadtreeTileSchema): void {\r\n    const g = this as Globe, c = g.Origin.center, z = g.Origin.zoom;\r\n    //初始参数构造\r\n    g._state_quadtree_ = {\r\n        maximumScreenSpaceError: MAXIMUM_SCREEN_SPACEERROR,\r\n        level: 0,\r\n        quadtreeTileSchema: tileSchema,\r\n        geometricError: [],\r\n        maximumCameraHeight: [],\r\n        zeroLevelTiles: [],\r\n        visualRevealTiles: []\r\n    }\r\n    //视锥参数\r\n    const sseDenominator = g._state_camera_.camera.SseDenominator, height = g._state_camera_.viewContainer.height;\r\n    for (let i = 0; i < 22; i++) {\r\n        const geometricError = g.computeMaximumGeometricError(i);\r\n        //计算geometric error\r\n        g._state_quadtree_.geometricError[i] = geometricError;\r\n        //计算每个缩放层级摄像头最大高度\r\n        g._state_quadtree_.maximumCameraHeight[i] = geometricError * height / (sseDenominator * MAXIMUM_SCREEN_SPACEERROR);\r\n    }\r\n    //\r\n    g._state_quadtree_.zeroLevelTiles = g.computeZeroLevelTiles();\r\n    //根据缩放层级重新计算camera位置\r\n    c.Altitude = g.getMaximumCameraHeightByLevel(z);\r\n    g._state_camera_.camera.Position = g.geographicToSpaceCoordinate(c);\r\n    //瓦片集更新\r\n    g.updateQuadtreeTileByDistanceError();\r\n}\r\n\r\n/**\r\n * 简化：计算0级瓦片集\r\n */\r\nGlobe.prototype.computeZeroLevelTiles = function (): QuadtreeTile[] {\r\n    const g = this as Globe;\r\n    return g.computeLevelTiles(0);\r\n}\r\n\r\n/**\r\n * 计算指定缩放层级的全部瓦片\r\n */\r\nGlobe.prototype.computeLevelTiles = function (level:number): QuadtreeTile[] {\r\n    const g = this as Globe;\r\n    const quadtreeTileSchema = g._state_quadtree_.quadtreeTileSchema,\r\n        numberOfLevelZeroTilesX = quadtreeTileSchema.getNumberOfXTilesAtLevel(level),\r\n        numberOfLevelZeroTilesY = quadtreeTileSchema.getNumberOfYTilesAtLevel(level),\r\n        zeroLevelTiles = [];\r\n    let seed = 0;\r\n    for (let y = 0; y < numberOfLevelZeroTilesY; ++y)\r\n        for (let x = 0; x < numberOfLevelZeroTilesX; ++x)\r\n            zeroLevelTiles[seed++] = new QuadtreeTile(quadtreeTileSchema, x, y, 0, null);\r\n    return zeroLevelTiles;\r\n}\r\n\r\n/**\r\n * 地球赤道周长/像素\r\n * 周长：2*PI*r\r\n * 像素：256 * num\r\n */\r\nGlobe.prototype.computeMaximumGeometricError = function (level: number): number {\r\n    const g = this as Globe;\r\n    const CRITICAL_VALUE = 128;\r\n    const maximumGeometricError = g.Ellipsoid.MaximumRadius * Math.PI / (CRITICAL_VALUE * g._state_quadtree_.quadtreeTileSchema.getNumberOfXTilesAtLevel(level));\r\n    return maximumGeometricError;\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.pickZeroLevelQuadtreeTiles = function (position: Vec3): Array<QuadtreeTile> {\r\n    const g = this as Globe;\r\n    //修复issue2 问题\r\n    if(g._state_quadtree_.quadtreeTileSchema === webMercatorTileSchema) \r\n        return g._state_quadtree_.zeroLevelTiles;\r\n    //计算0层tile\r\n    const zeroLevelQuadtreeTiles = g._state_quadtree_.zeroLevelTiles;\r\n    const pickedZeroLevelQuadtreeTiles:QuadtreeTile[] = [];\r\n    //1.转换camera位置与原点连线到地球表明\r\n    const geodeticCoordinate = g.Ellipsoid.spaceToGeographic(position);\r\n    //2.计算tile rangele与geocoord相交\r\n    zeroLevelQuadtreeTiles.forEach((quadtreeTile) => {\r\n        quadtreeTile.Boundary.Contain(geodeticCoordinate) ? pickedZeroLevelQuadtreeTiles.push(quadtreeTile) : null;\r\n    });\r\n    return pickedZeroLevelQuadtreeTiles;\r\n}\r\n\r\n/**\r\n * 根据摄像机的位置计算地球上的瓦片对应的spaceError\r\n */\r\nGlobe.prototype.computeSpaceError = function (quadtreeTile: QuadtreeTile): number {\r\n    const g = this as Globe;\r\n    //摄像机位置与瓦片中心的距离,距离由两部分构成\r\n    //1.相机在椭球体上的投影点\r\n    const level = quadtreeTile.Level,\r\n        maxGeometricError = g._state_quadtree_.geometricError[level],\r\n        sseDenominator = g._state_camera_.camera.SseDenominator,\r\n        height = g._state_camera_.viewContainer.height,\r\n        cameraSpacePosition = g._state_camera_.camera.Position.clone(),\r\n        bounds = quadtreeTile.Boundary.Bounds,\r\n        center = quadtreeTile.Boundary.Center;\r\n    //2.投影点与目标tile的球面距离+相机距离球面距离 bug\r\n    //2019/2/10 修正，改为与四角的距离取最大error\r\n    // let err = 0;\r\n    // for (let i = 0, len = bounds.length; i < len; i++) {\r\n    //     const spacePostion = g.Ellipsoid.geographicToSpace(bounds[i]);\r\n    //     const distance = cameraSpacePosition.clone().sub(spacePostion).len();\r\n    //     const error = (maxGeometricError * height) / (distance * sseDenominator);\r\n    //     err = error > err ? error : err;\r\n    // }\r\n    // return err;\r\n    const spacePosition = g.Ellipsoid.geographicToSpace(center);\r\n    const distance = cameraSpacePosition.clone().sub(spacePosition).len();\r\n    //3.计算error\r\n    const err = (maxGeometricError * height)/(distance*sseDenominator);\r\n    return err;\r\n}\r\n\r\n/**\r\n * 对应缩放层级支持的摄像机最大高程\r\n */\r\nGlobe.prototype.getMaximumCameraHeightByLevel = function(level:number):number {\r\n    const g = this as Globe;\r\n    return g._state_quadtree_.maximumCameraHeight[level];\r\n}\r\n\r\nGlobe.prototype.updateQuadtreeTileByDistanceError = function (): void {\r\n    const g = this as Globe;\r\n    const position = g._state_camera_.camera.Position.clone();\r\n    let level = 0;\r\n    const rootTiles = g.pickZeroLevelQuadtreeTiles(position);\r\n    //wait rendering\r\n    const rawQuadtreeTiles:QuadtreeTile[] = [];\r\n    const renderingQuadtreeTiles:QuadtreeTile[] = [];\r\n    //liter func, to calcute new tile in distance error\r\n    const liter = (quadtreeTile: QuadtreeTile) => {\r\n        const error = g.computeSpaceError(quadtreeTile);\r\n        if (error > MAXIMUM_SCREEN_SPACEERROR)\r\n            for (let i = 0; i < 4; i++)\r\n                liter(quadtreeTile.Children[i]);\r\n        else {\r\n            const litLevel = quadtreeTile.Level;\r\n            level = litLevel > level ? litLevel : level;\r\n            rawQuadtreeTiles.push(quadtreeTile);\r\n        }\r\n    };\r\n    //calcute from root tile\r\n    for (let i = 0, len = rootTiles.length; i < len; i++) {\r\n        const tile = rootTiles[i];\r\n        liter(tile);\r\n    }\r\n    //filter level of tile\r\n    for (let i = 0, len = rawQuadtreeTiles.length; i < len; i++) {\r\n        const quadtreeTile = rawQuadtreeTiles[i];\r\n        if(quadtreeTile.Level === level)\r\n            renderingQuadtreeTiles.push(quadtreeTile)\r\n    }\r\n    //set current level\r\n    g._state_quadtree_.level = level;\r\n    g._state_quadtree_.visualRevealTiles = renderingQuadtreeTiles;\r\n    //\r\n    g.emit('tileupdated', g._state_quadtree_.visualRevealTiles);\r\n}\r\n\r\n//注册web墨卡托瓦片规则\r\nGlobe.registerHook(Globe.prototype.registerQuadtree, webMercatorTileSchema);","import { SComponent } from '../core/Support';\r\nimport { TypedArrayFormat } from '../core/Format';\r\n\r\n/**\r\n * @param v search 16 pow of 2\r\n * @returns \r\n */\r\nconst nextPow16 = (v: number) => {\r\n    for (let i: number = 16, max: number = (1 << 28); i <= max; i *= 16)\r\n        if (v <= i)\r\n            return i;\r\n    return 0;\r\n}\r\n\r\n/**\r\n * \r\n * @param v \r\n * @returns \r\n */\r\nconst nextLog2 = (v: number): number => {\r\n    let shift: number = 0;\r\n    let r: number = +(v > 0xFFFF) << 4;\r\n    v >>>= r;\r\n    shift = +(v > 0xFF) << 3;\r\n    v >>>= shift;\r\n    r |= shift;\r\n    shift = +(v > 0xF) << 2;\r\n    v >>>= shift;\r\n    r |= shift;\r\n    shift = +(v > 0x3) << 1;\r\n    v >>>= shift;\r\n    r |= shift;\r\n    return r | (v >> 1);\r\n}\r\n\r\n/**\r\n * \r\n * @param n construct new N loop, fill array with empty []\r\n * @returns \r\n */\r\nconst interLoop = (n: number): ArrayBuffer[][] => {\r\n    const r: ArrayBuffer[][] = [];\r\n    for (let i: number = 0; i < n; i++)\r\n        r[i] = [];\r\n    return r;\r\n}\r\n\r\n/**\r\n * @class BufferPool\r\n * @description alloc buffer\r\n */\r\nclass BufferPool {\r\n    /**\r\n     * \r\n     */\r\n    private bufferPool: ArrayBuffer[][] = interLoop(8);\r\n\r\n    /**\r\n     * @param size alloc new memory for arraybuffer\r\n     * @returns \r\n     */\r\n    public alloc = (size: number): ArrayBuffer => {\r\n        const bufferPool = this.bufferPool,\r\n            actualSize = nextPow16(size),\r\n            bin = bufferPool[nextLog2(actualSize) >> 2];\r\n        return bin.length > 0 ? bin.pop() : new ArrayBuffer(actualSize);\r\n    }\r\n\r\n    /**\r\n     * @param scomponent allocation typed array\r\n     * @param size \r\n     * @returns \r\n     */\r\n    public allocType = (scomponent: SComponent, size: number): TypedArrayFormat => {\r\n        const alloc = this.alloc;\r\n        let arr: TypedArrayFormat = null;\r\n        switch (scomponent) {\r\n            case 'BYTE':\r\n                arr = new Int8Array(alloc(size), 0, size);\r\n                break;\r\n            case 'UNSIGNED_BYTE':\r\n                arr = new Uint8Array(alloc(size), 0, size);\r\n                break;\r\n            case 'SHORT':\r\n                arr = new Int16Array(alloc(2 * size), 0, size);\r\n                break;\r\n            case 'UNSIGNED_SHORT':\r\n                arr = new Uint16Array(alloc(2 * size), 0, size);\r\n                break;\r\n            case 'INT':\r\n                arr = new Int32Array(alloc(4 * size), 0, size);\r\n                break;\r\n            case 'UNSIGNED_INT':\r\n                arr = new Uint32Array(alloc(4 * size), 0, size);\r\n                break;\r\n            case 'FLOAT':\r\n                arr = new Float32Array(alloc(4 * size), 0, size);\r\n                break;\r\n        }\r\n        if (arr.length !== size) arr = arr.subarray(0, size);\r\n        return arr;\r\n    }\r\n\r\n    /**\r\n     * @description free arraybuffer\r\n     * @param buffer \r\n     * @returns \r\n     */\r\n    public free = (buffer: ArrayBuffer): void => {\r\n        if (!buffer) return;\r\n        const bufferPool = this.bufferPool;\r\n        bufferPool[nextLog2(buffer.byteLength) >> 2].push(buffer);\r\n    }\r\n\r\n    /**\r\n     * @description free typed arraybuffer\r\n     * @param typedArraybuffer \r\n     */\r\n    public freeType = (typedArraybuffer: TypedArrayFormat): void => {\r\n        this.free(typedArraybuffer.buffer);\r\n    }\r\n}\r\n\r\n/**\r\n * global variable\r\n */\r\nconst bufferPool0 = new BufferPool();\r\n\r\nexport { bufferPool0 }","\r\n/**\r\n * reference:\r\n * https://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/blendEquation\r\n */\r\nconst CBlendFunc = {\r\n    /**\r\n     * des = source + target\r\n     */\r\n    FUNC_ADD: 0x8006,\r\n\r\n    /**\r\n     * des = source - target\r\n     */\r\n    FUNC_SUBTRACT: 0x800A,\r\n\r\n    /**\r\n     * des = target - source\r\n     */\r\n    FUNC_REVERSE_SUBTRACT: 0x800B,\r\n\r\n    /**\r\n     * EXT_blend_minmax, min(v0, v1)\r\n     */\r\n    MIN_EXT: 0x8007,\r\n\r\n    /**\r\n     * EXT_blend_minmax, max(v1, v1)\r\n     */\r\n    MAX_EXT: 0x8008\r\n}\r\n\r\n/**\r\n * component data type gl enum\r\n */\r\nconst CComponent = {\r\n    /**\r\n     * 5120\r\n     */\r\n    BYTE: 0x1400,\r\n\r\n    /**\r\n     * 5121\r\n     */\r\n    UNSIGNED_BYTE: 0x1401,\r\n\r\n    /**\r\n     * 5122\r\n     */\r\n    SHORT: 0x1402,\r\n\r\n    /**\r\n     * 5123\r\n     */\r\n    UNSIGNED_SHORT: 0x1403,\r\n\r\n    /**\r\n     * 5124\r\n     */\r\n    INT: 0x1404,\r\n\r\n    /**\r\n     * 5125\r\n     */\r\n    UNSIGNED_INT: 0x1405,\r\n\r\n    /**\r\n     * 5126\r\n     */\r\n    FLOAT: 0x1406,\r\n}\r\n\r\n/**\r\n * supported render type\r\n */\r\nconst CPrimitive = {\r\n    /**\r\n     * draw points\r\n     */\r\n    POINTS: 0,\r\n\r\n    /**\r\n     * draw line\r\n     */\r\n    LINES: 1,\r\n\r\n    /**\r\n     * close line\r\n     */\r\n    LINE_LOOP: 2,\r\n\r\n    /**\r\n     * draw end to end n lines using n+1 points\r\n     */\r\n    LINE_STRIP: 3,\r\n\r\n    /**\r\n     * draw triangle, most common\r\n     */\r\n    TRIANGLES: 4,\r\n\r\n    /**\r\n     * draw triangles\r\n     */\r\n    TRIANGLE_STRIP: 5,\r\n\r\n    /**\r\n     * draw triangle with the first point as the center and the other points around it\r\n     */\r\n    TRIANGLE_FAN: 6,\r\n}\r\n\r\n/**\r\n * Texture enum, TextureCube:\r\n * \r\n *          |----| \r\n *          | -y |\r\n * ----|----|----|----|\r\n *  -z | -x | +z | +x |\r\n * ----|----|----|----|\r\n *          | +y |\r\n *          |----|\r\n * \r\n */\r\nconst CTextureMapTarget = {\r\n    /**\r\n     * \r\n     */\r\n    TEXTURE_2D: 0x0DE1,\r\n\r\n    /**\r\n     * cube map texture\r\n     */\r\n    TEXTURE_CUBE_MAP: 0x8513,\r\n\r\n    /**\r\n     * +x face\r\n     */\r\n    TEXTURE_CUBE_MAP_POSITIVE_X: 0x8515,\r\n\r\n    /**\r\n     * -x face\r\n     */\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X: 0x8516,\r\n\r\n    /**\r\n     * \r\n     */\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y: 0x8517,\r\n\r\n    /**\r\n     * \r\n     */\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y: 0x8518,\r\n\r\n    /**\r\n     * \r\n     */\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z: 0x8519,\r\n\r\n    /**\r\n     * \r\n     */\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z: 0x851A,\r\n}\r\n\r\n/**\r\n * shader type\r\n */\r\nconst CShaderTarget = {\r\n    /**\r\n     * fragment shader\r\n     */\r\n    FRAGMENT_SHADER: 0x8B30,\r\n\r\n    /**\r\n     * vertex shader\r\n     */\r\n    VERTEX_SHADER: 0x8B31,\r\n}\r\n\r\n/**\r\n * arraybuffer obejct\r\n */\r\nconst CArraybufferTarget = {\r\n    /**\r\n     * \r\n     */\r\n    ARRAY_BUFFER: 0x8892,\r\n\r\n    /**\r\n     * \r\n     */\r\n    ELEMENT_ARRAY_BUFFER: 0x8893,\r\n}\r\n\r\n/**\r\n * draw type, the different areas of memory alloc data\r\n */\r\nconst CUsage = {\r\n    /**\r\n     * common use, don't often change\r\n     */\r\n    STATIC_DRAW: 0x88E4,\r\n\r\n    /**\r\n     * don't often change\r\n     */\r\n    STREAM_DRAW: 0x88E0,\r\n\r\n    /**\r\n     * common use, often changed\r\n     */\r\n    DYNAMIC_DRAW: 0x88E8,\r\n}\r\n\r\n/**\r\n * element buffer data dimension\r\n */\r\nconst CDimension = {\r\n    /**\r\n     * \r\n     */\r\n    POINTS: 1,\r\n\r\n    /**\r\n     * \r\n     */\r\n    LINES: 2,\r\n\r\n    /**\r\n     * \r\n     */\r\n    TRIANGLES: 3\r\n}\r\n\r\n/**\r\n * active type\r\n */\r\nconst CActiveTarget = {\r\n    /**\r\n     * actived attribute in linked program\r\n     */\r\n    ACTIVE_ATTRIBUTES: 0x8B89,\r\n\r\n    /**\r\n     * actived uniforms in linked program\r\n     */\r\n    ACTIVE_UNIFORMS: 0x8B86,\r\n}\r\n\r\n/**\r\n * vector type (size)\r\n */\r\nconst CVector = {\r\n    /**\r\n     * point\r\n     */\r\n    SCALAR: 1,\r\n\r\n    /**\r\n     * line\r\n     */\r\n    VEC2: 2,\r\n\r\n    /**\r\n     * line in 3d\r\n     */\r\n    VEC3: 3,\r\n\r\n    /**\r\n     * homogeneous vector\r\n     */\r\n    VEC4: 4,\r\n\r\n    /**\r\n     * 2x2 matrix\r\n     */\r\n    MAT2: 4,\r\n\r\n    /**\r\n     * 3x2 matrix\r\n     */\r\n    MAT3: 9,\r\n\r\n    /**\r\n     * 3x3 matrix\r\n     */\r\n    MAT4: 16,\r\n}\r\n\r\n/**\r\n * framebuffer attachment target\r\n */\r\nconst CAttachmentTarget = {\r\n    /**\r\n     * color/depth/stencil\r\n     */\r\n    TEXTURE_2D: 0x0DE1,\r\n\r\n    /**\r\n     * render buffer object\r\n     */\r\n    RENDERBUFFER: 0x8D41,\r\n}\r\n\r\n/**\r\n * fill texture mode\r\n */\r\nconst CTextureFillTarget = {\r\n    /**\r\n     * repeat\r\n     */\r\n    REPEAT: 0x2901,\r\n\r\n    /**\r\n     * clamp mode, extend to edge\r\n     */\r\n    CLAMP_TO_EDGE: 0x812F,\r\n\r\n    /**\r\n     * mirror repreat\r\n     */\r\n    MIRRORED_REPEAT: 0x8370,\r\n}\r\n\r\n/**\r\n * interpretation mode\r\n */\r\nconst CMipmapHint = {\r\n    /**\r\n     * there is on preference for this behavior\r\n     */\r\n    DONT_CARE: 0x1100,\r\n\r\n    /**\r\n     * the most efficient behavior should be used\r\n     */\r\n    FASTEST: 0x1101,\r\n\r\n    /**\r\n     * the most correct or the highest quality option should be used\r\n     */\r\n    NICEST: 0x1102\r\n}\r\n\r\n/**\r\n *    wrap_T\r\n *    |\r\n *    |\r\n *    |_ _ _ _  warp_S\r\n *  (0,0)\r\n * \r\n */\r\nconst CTextureWrapTarget = {\r\n    /**\r\n     * horizon\r\n     */\r\n    TEXTURE_WRAP_S: 0x2802,\r\n\r\n    /**\r\n     * vertical\r\n     */\r\n    TEXTURE_WRAP_T: 0x2803,\r\n}\r\n\r\n/**\r\n * MAG filter\r\n */\r\nconst CTextureMAGFilter = {\r\n    /**\r\n     * \r\n     */\r\n    NEAREST: 0x2600,\r\n\r\n    /**\r\n     * \r\n     */\r\n    LINEAR: 0x2601,\r\n}\r\n\r\n/**\r\n * min filter\r\n */\r\nconst CTextureMINFilter = {\r\n    /**\r\n     * \r\n     */\r\n    NEAREST: 0x2600,\r\n\r\n    /**\r\n     * \r\n     */\r\n    LINEAR: 0x2601,\r\n\r\n    /**\r\n     * \r\n     */\r\n    NEAREST_MIPMAP_NEAREST: 0x2700,\r\n\r\n    /**\r\n     * \r\n     */\r\n    LINEAR_MIPMAP_NEAREST: 0x2701,\r\n\r\n    /**\r\n     * \r\n     */\r\n    NEAREST_MIPMAP_LINEAR: 0x2702,\r\n\r\n    /**\r\n     * \r\n     */\r\n    LINEAR_MIPMAP_LINEAR: 0x2703,\r\n}\r\n\r\n/**\r\n * color space\r\n */\r\nconst CColorSpace = {\r\n    /**\r\n     * \r\n     */\r\n    NONE: 0,\r\n\r\n    /**\r\n     * \r\n     */\r\n    BROWSER_DEFAULT_WEBGL: 0x9244,\r\n}\r\n\r\nconst CTextureComponent = {\r\n    /**\r\n     * 0-255\r\n     */\r\n    BYTE: 0x1400,\r\n\r\n    /**\r\n     * 0-127\r\n     */\r\n    UNSIGNED_BYTE: 0x1401,\r\n\r\n    /**\r\n     * Int16Array, no support Texture\r\n     */\r\n    SHORT: 0x1402,\r\n\r\n    /**\r\n     * uint 16\r\n     */\r\n    UNSIGNED_SHORT: 0x1403,\r\n\r\n    /**\r\n     * int32 array, not support texture\r\n     */\r\n    INT: 0x1404,\r\n\r\n    /**\r\n     * uint 32\r\n     */\r\n    UNSIGNED_INT: 0x1405,\r\n\r\n    /**\r\n     * float\r\n     */\r\n    FLOAT: 0x1406,\r\n\r\n    /**\r\n     * \r\n     */\r\n    UNSIGNED_SHORT_4_4_4_4: 0x8033,\r\n\r\n    /**\r\n     * \r\n     */\r\n    UNSIGNED_SHORT_5_5_5_1: 0x8034,\r\n\r\n    /**\r\n     * \r\n     */\r\n    UNSIGNED_SHORT_5_6_5: 0x8363,\r\n\r\n    /**\r\n     * float 16\r\n     */\r\n    HALF_FLOAT_OES: 0x8D61,\r\n\r\n    /**\r\n     * depth stencil default\r\n     */\r\n    UNSIGNED_INT_24_8_WEBGL: 0x84FA,\r\n}\r\n\r\n/**\r\n * indicate texture channels\r\n */\r\nconst CTextureColor = {\r\n    /**\r\n     * \r\n     */\r\n    ALPHA: 0x1906,\r\n\r\n    /**\r\n     * \r\n     */\r\n    RGB: 0x1907,\r\n\r\n    /**\r\n     * \r\n     */\r\n    RGBA: 0x1908,\r\n\r\n    /**\r\n     * \r\n     */\r\n    RGBA4: 0x8056,\r\n\r\n    /**\r\n     * \r\n     */\r\n    RGB5_A1: 0x8057,\r\n\r\n    /**\r\n     * \r\n     */\r\n    RGB565: 0x8D62,\r\n\r\n    /**\r\n     * \r\n     */\r\n    LUMINANCE: 0x1909,\r\n\r\n    /**\r\n     * \r\n     */\r\n    LUMINANCE_ALPHA: 0x190A,\r\n\r\n    /**\r\n     * unsized sRGB format that leaves the precision up to the driver\r\n     */\r\n    SRGB_EXT: 0x8c40,\r\n\r\n    /**\r\n     * unsized sRGB format with unsized alpha component\r\n     */\r\n    SRGB_ALPHA_EXT: 0x8c42,\r\n\r\n    /**\r\n     * pixel formats, support depth component\r\n     */\r\n    DEPTH_COMPONENT: 0x1902,\r\n\r\n    /**\r\n     *  common used in bufferStorage, support depth/rbo\r\n     */\r\n    DEPTH_STENCIL: 0x84F9,\r\n}\r\n\r\n/**\r\n * convert texture type to component type\r\n */\r\nconst CTextureColor2Component = {\r\n    /**\r\n     * ox8033\r\n     */\r\n    RGBA4: 'UNSIGNED_SHORT_4_4_4_4',\r\n\r\n    /**\r\n     * 0x8034\r\n     */\r\n    RGB5_A1: 'UNSIGNED_SHORT_5_5_5_1'\r\n}\r\n\r\n/**\r\n * compress algorithm \r\n */\r\nconst CTextureCompressed = {\r\n    /**\r\n     * rgb s3tc dxt1\r\n     */\r\n    COMPRESSED_RGB_S3TC_DXT1_EXT: 0x83F0,\r\n\r\n    /**\r\n     * rbga s3tc dxt1\r\n     */\r\n    COMPRESSED_RGBA_S3TC_DXT1_EXT: 0x83F1,\r\n\r\n    /**\r\n     * rgba s3tc dxt3\r\n     */\r\n    COMPRESSED_RGBA_S3TC_DXT3_EXT: 0x83F2,\r\n\r\n    /**\r\n     * rgba s3tc dxt5\r\n     */\r\n    COMPRESSED_RGBA_S3TC_DXT5_EXT: 0x83F3,\r\n}\r\n\r\n/**\r\n * texture component to size\r\n */\r\nconst CTextureComponentSize = {\r\n    /**\r\n     * byte, 5120\r\n     */\r\n    0x1400: 1,\r\n\r\n    /**\r\n     * unsigned_byte, 5121\r\n     */\r\n    0x1401: 1,\r\n\r\n    /**\r\n     * short, 5122\r\n     */\r\n    0x1402: 2,\r\n\r\n    /**\r\n     * unsigned_short, 5123\r\n     */\r\n    0x1403: 2,\r\n\r\n    /**\r\n     * int, 5124\r\n     */\r\n    0x1404: 4,\r\n\r\n    /**\r\n     * unsigned_int, 5125\r\n     */\r\n    0x1405: 4,\r\n\r\n    /**\r\n     * float, 5126\r\n     */\r\n    0x1406: 4,\r\n\r\n    /**\r\n     * half float (EXT)\r\n     */\r\n    0x8D61: 2,\r\n\r\n    /**\r\n     * UNSIGNED_SHORT_5_6_5\r\n     */\r\n    0x8363: 2,\r\n\r\n    /**\r\n     * UNSIGNED_SHORT_4_4_4_4\r\n     */\r\n    0x8033: 2,\r\n\r\n    /**\r\n     * UNSIGNED_SHORT_5_5_5_1\r\n     */\r\n    0x8034: 2,\r\n\r\n    /**\r\n     * UNSIGNED_INT_24_8_WEBGL\r\n     */\r\n    0x84FA: 4,\r\n}\r\n\r\n/**\r\n * combine texture channel count\r\n */\r\nconst CTextureChannelCount = {\r\n    /**\r\n     * lumiance\r\n     */\r\n    0x1909: 1,\r\n\r\n    /**\r\n     * alpha\r\n     */\r\n    0x1906: 1,\r\n\r\n    /**\r\n     * depth\r\n     */\r\n    0x1902: 1,\r\n\r\n    /**\r\n     * depth stencil, common used in bufferStorage, support depth/stencil buffer\r\n     */\r\n    0x84F9: 2,\r\n\r\n    /**\r\n     * luminance_alpha\r\n     */\r\n    0x190A: 2,\r\n\r\n    /**\r\n     * rbg\r\n     */\r\n    0x1907: 3,\r\n\r\n    /**\r\n     * SRGB_EXT, unsized sRGB format that leaves the precision up to the driver\r\n     */\r\n    0x8c40: 3,\r\n\r\n    /**\r\n     * RGBA\r\n     */\r\n    0x1908: 4,\r\n\r\n    /**\r\n     * SRGB_ALPHA_EXT, unsized sRGB format with unsized alpha compinent\r\n     */\r\n    0x8c42: 4,\r\n}\r\n\r\n/**\r\n * renderbuffer support color type\r\n */\r\nconst CRenderbufferColor = {\r\n    /**\r\n     * rgba4\r\n     */\r\n    RGBA4: 0x8056,\r\n\r\n    /**\r\n     * rgb565\r\n     */\r\n    RGB565: 0x8D62,\r\n\r\n    /**\r\n     * rgb5 a1\r\n     */\r\n    RGB5_A1: 0x8057,\r\n\r\n    /**\r\n     * depth\r\n     */\r\n    DEPTH_COMPONENT16: 0x81A5,\r\n\r\n    /**\r\n     * stencil\r\n     */\r\n    STENCIL_INDEX8: 0x8D48,\r\n\r\n    /**\r\n     * depth stencil, common used in bufferStorage, support depth/stencil rbo\r\n     */\r\n    DEPTH_STENCIL: 0x84F9,\r\n\r\n    /**\r\n     * srgba\r\n     */\r\n    SRGB8_ALPHA8_EXT: 0x8c43,\r\n\r\n    /**\r\n     * rgb16\r\n     */\r\n    RGB16F_EXT: 0x881B,\r\n\r\n    /**\r\n     * rgba16f\r\n     */\r\n    RGBA16F_EXT: 0x881A,\r\n\r\n    /**\r\n     * rgba32f\r\n     */\r\n    RGBA32F_EXT: 0x8814,\r\n}\r\n\r\n/**\r\n * \r\n */\r\nconst CWebGLStatusTYPE = {\r\n    /**\r\n     * webgl status flag \r\n     * gl.enable, gl.disable\r\n     */\r\n    FLAG: 1,\r\n\r\n    /**\r\n     * \r\n     */\r\n    BOOLEAN: 2,\r\n\r\n    /**\r\n     * \r\n     */\r\n    ARRAY: 3,\r\n\r\n    /**\r\n     * deconsturcted array\r\n     */\r\n    DECARRAY: 4,\r\n\r\n    /**\r\n     * \r\n     */\r\n    NUMBER: 5,\r\n}\r\n\r\n/**\r\n * \r\n */\r\nconst CWebGLStatusFLAG = {\r\n    /**\r\n     * \r\n     */\r\n    DITHER: CWebGLStatusTYPE.FLAG,\r\n\r\n    /**\r\n     * \r\n     */\r\n    BLEND: CWebGLStatusTYPE.FLAG,\r\n\r\n    /**\r\n     * \r\n     */\r\n    DEPTH_TEST: CWebGLStatusTYPE.FLAG,\r\n\r\n    /**\r\n     * \r\n     */\r\n    CULL_FACE: CWebGLStatusTYPE.FLAG,\r\n\r\n    /**\r\n     * \r\n     */\r\n    POLYGON_OFFSET_FILL: CWebGLStatusTYPE.FLAG,\r\n\r\n    /**\r\n     * \r\n     */\r\n    SAMPLE_ALPHA_TO_COVERAGE: CWebGLStatusTYPE.FLAG,\r\n\r\n    /**\r\n     * \r\n     */\r\n    SAMPLE_COVERAGE: CWebGLStatusTYPE.FLAG,\r\n\r\n    /**\r\n     * \r\n     */\r\n    STENCIL_TEST: CWebGLStatusTYPE.FLAG,\r\n\r\n    /**\r\n     * lock pixel\r\n     */\r\n    SCISSOR_TEST: CWebGLStatusTYPE.FLAG,\r\n}\r\n\r\n/**\r\n * \r\n */\r\nconst CWebGLStatusVariable = {\r\n    /**\r\n     * \r\n     */\r\n    blendColor: CWebGLStatusTYPE.ARRAY,\r\n\r\n    /**\r\n     * \r\n     */\r\n    scissor: CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * \r\n     */\r\n    blendEquationSeparate: CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * \r\n     */\r\n    blendFuncSeparate: CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * blend func\r\n     */\r\n    blendFunc:CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * \r\n     */\r\n    depthFunc: CWebGLStatusTYPE.NUMBER,\r\n\r\n    /**\r\n     * \r\n     */\r\n    depthRange: CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * \r\n     */\r\n    depthMask: CWebGLStatusTYPE.BOOLEAN,\r\n\r\n    /**\r\n     * \r\n     */\r\n    colorMask: CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * \r\n     */\r\n    cullFace: CWebGLStatusTYPE.NUMBER,\r\n\r\n    /**\r\n     * \r\n     */\r\n    frontFace: CWebGLStatusTYPE.NUMBER,\r\n\r\n    /**\r\n     * \r\n     */\r\n    lineWidth: CWebGLStatusTYPE.NUMBER,\r\n\r\n    /**\r\n     * \r\n     */\r\n    polygonOffset: CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * \r\n     */\r\n    sampleCoverage:CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * \r\n     */\r\n    stencilMask: CWebGLStatusTYPE.NUMBER,\r\n\r\n    /**\r\n     * \r\n     */\r\n    stencilFunc: CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * \r\n     */\r\n    stencilOpSeparate: CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * 模板缓冲后的操作方式\r\n     */\r\n    stencilOp:CWebGLStatusTYPE.DECARRAY,\r\n\r\n    /**\r\n     * \r\n     */\r\n    viewport: CWebGLStatusTYPE.DECARRAY,\r\n}\r\n\r\n/**\r\n * active attribute info type size\r\n */\r\nconst CAttributeTS={\r\n    /**\r\n     * FLOAT\r\n     */\r\n    5126:1,     //float\r\n\r\n    /**\r\n     * FLOAT_VEC2\r\n     */\r\n    35664:2,\r\n\r\n    /**\r\n     * FLOAT_VEC3\r\n     */\r\n    35665:3,  \r\n\r\n    /**\r\n     * FLOAT_VEC4\r\n     */\r\n    35666:4,\r\n\r\n    /**\r\n     * INT_VEC2\r\n     */\r\n    35667:2,    \r\n\r\n    /**\r\n     * INT_VEC3\r\n     */\r\n    35668:3,    \r\n\r\n    /**\r\n     * INT_VEC4\r\n     */\r\n    35669:4,\r\n\r\n    /**\r\n     * BOOL_VEC2\r\n     */\r\n    35671:2,   \r\n\r\n    /**\r\n     * BOOL_VEC3\r\n     */\r\n    35672:3,   \r\n\r\n    /**\r\n     * BOOL_VEC4\r\n     */\r\n    35673:4,\r\n}\r\n\r\nexport {\r\n    CWebGLStatusTYPE,\r\n    CWebGLStatusFLAG,\r\n    CWebGLStatusVariable,\r\n\r\n    CColorSpace,\r\n    CTextureColor,\r\n    CRenderbufferColor,\r\n    CTextureColor2Component,\r\n    CTextureCompressed,\r\n    CTextureComponentSize,\r\n    CTextureMAGFilter,\r\n    CTextureComponent,\r\n    CTextureMINFilter,\r\n    CTextureChannelCount,\r\n    CTextureWrapTarget,\r\n\r\n    CDimension,\r\n    CComponent,\r\n    CPrimitive,\r\n    CUsage,\r\n    CVector,\r\n\r\n    CBlendFunc,\r\n    CMipmapHint,\r\n\r\n    CShaderTarget,\r\n    CArraybufferTarget,\r\n    CActiveTarget,\r\n    CAttachmentTarget,\r\n    CTextureFillTarget,\r\n    CTextureMapTarget,\r\n\r\n    CAttributeTS,\r\n}","import { Extension } from \"./Extension\";\r\nimport { bufferPool0 } from './../pool/BufferPool';\r\nimport { CComponent, CTextureMapTarget } from './Constant';\r\n\r\n/**\r\n * 各项异性过滤插件\r\n */\r\nconst MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FF;\r\n\r\n/**\r\n * 多目标渲染\r\n */\r\nconst MAX_DRAW_BUFFERS_WEBGL = 0x8824;\r\n\r\n/**\r\n * 延迟着色配套\r\n */\r\nconst MAX_COLOR_ATTACHMENTS_WEBGL = 0x8CDF;\r\n\r\n/**\r\n  * 版本信息汇总\r\n  */\r\ninterface Info {\r\n    /**\r\n     * glsl language version\r\n     */\r\n    glsl?: number;\r\n\r\n    /**\r\n     * renderer version\r\n     */\r\n    renderer?: number;\r\n\r\n    /**\r\n     * 不同浏览器对插值有牵制prefix，vendor为插值前置变量\r\n     */\r\n    vendor?: string;\r\n\r\n    /**\r\n     * webgl 版本\r\n     */\r\n    version?: string;\r\n}\r\n\r\n/**\r\n * https://developer.mozila.org/zh-CN/docs/Web/API/WebGL_API/Constants\r\n * @author axmand\r\n * @description 读取设备限制信息\r\n */\r\nclass Limit {\r\n    /**\r\n     * 各项异性过滤，基于mipmap得扩展，用于优化在非正交视角下材质显示模糊得问题\r\n     * 例如：通过三线性过滤，gl.LINEAR_MIPMAP_LINEAR 离相机越远得部分便来越来越模糊\r\n     * 但是使用了各项异性过滤后，这些特殊场景下mipmap采样使图像更清晰\r\n     */\r\n    public maxAnisotropic: number = 1;\r\n\r\n    /**\r\n     * 多实例绘制\r\n     */\r\n    public maxDrawbuffers: number = 1;\r\n\r\n    /**\r\n     * 多实例绘制，支持的最大着色片段数量支持\r\n     */\r\n    public maxColorAttachments: number = 1;\r\n\r\n    /**\r\n     * 支持浮点型纹理（需要插件）\r\n     */\r\n    public readFloat: boolean = false;\r\n\r\n    /**\r\n     * 支持非2次幂分辨率纹理\r\n     */\r\n    public npotTextureCube: boolean = true;\r\n\r\n    /**\r\n     * draw buffer颜色深度，\r\n     * 排序为：[red, green, bule, alpha]\r\n     */\r\n    public colorBits: number[] = new Array(4);\r\n\r\n    /**\r\n     * 深度纹理位\r\n     */\r\n    public depthBits: number;\r\n\r\n    /**\r\n     * 模板缓冲深度\r\n     */\r\n    public stencilBits: number;\r\n\r\n    /**\r\n     * debug}{ 还不清楚干啥用\r\n     */\r\n    public subpixelBits: number;\r\n\r\n    /**\r\n     * 点大小范围设置\r\n     */\r\n    public pointSizeDims: Float32Array;\r\n\r\n    /**\r\n     * 线宽设置范围\r\n     */\r\n    public lineWidthDims: Float32Array;\r\n\r\n    /**\r\n     * 视域取值范围\r\n     */\r\n    public maxViewportDims: Int32Array;\r\n\r\n    /**\r\n     * 设备支持的纹理分辨率上限\r\n     */\r\n    public maxTextureSize: number;\r\n\r\n    /**\r\n     * 可用纹理单元上限\r\n     */\r\n    public maxTextureUnits: number;\r\n\r\n    /**\r\n     * vertex shader中能使用的纹理单元上限\r\n     */\r\n    public maxVertexTextureUnits: number;\r\n\r\n    /**\r\n     * 可用纹理单元上限（vertex和fragment shader中可用纹理单元上限)\r\n     */\r\n    public maxCombineTextureUnits: number;\r\n\r\n    /**\r\n     * CUBE_MAP_TEXTURE_SIZE\r\n     * 立方体纹理贴图分辨率支持上限\r\n     */\r\n    public maxCubeMapSize: number;\r\n\r\n    /**\r\n     * 支持的rbo最大分辨率\r\n     */\r\n    public maxRenderbufferSize: number;\r\n\r\n    /**\r\n     * 支持的顶点属性上限(attributes上限)\r\n     * the maximum number of vertex attributes depends on the graphics card, and you can call\r\n     * gl.getParameter(gl.MAX_VERTEX_ATTRIBS) to get this value\r\n     * on high-end graphics cards, the maximum is 16, on lower-end graphics cards, the value will be lower.\r\n     */\r\n    public maxAttributes: number;\r\n\r\n    /**\r\n     * uniforms被空间顶点着色其和片段着色器分享，被分享在硬件存储常量值的空间中\r\n     * 因此uniform的数量是受限的\r\n     * 指示顶点着色其程序中的uniform数量上限\r\n     */\r\n    public maxVertexUniforms: number;\r\n\r\n    /**\r\n     * 片元着色器中Uniform可用数量上限\r\n     */\r\n    public maxFragmentUniforms: number;\r\n\r\n    /**\r\n     * 顶点着色器中varying变量数量上限\r\n     */\r\n    public maxVaryingVectors: number;\r\n\r\n    /**\r\n     * 支支持的texture compress压缩格式\r\n     */\r\n    public textureFormats: string[];\r\n\r\n    /**\r\n     * webgl 版本信息\r\n     */\r\n    public info: Info = {};\r\n\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        extLib: Extension\r\n    ) {\r\n        /**\r\n         * 发掘显卡支持的各项异性过滤能力\r\n         * }{debug 开启后有性能损失\r\n         */\r\n        if (extLib.get('EXT_texture_filter_anisotropic'))\r\n            this.maxAnisotropic = gl.getParameter(MAX_TEXTURE_MAX_ANISOTROPY_EXT);\r\n\r\n        /**\r\n         * 延迟着色, deferred shading\r\n         * 支持多目标draw buffers, 例如\r\n         * gl.drawBuffers([gl.COLOR_ATTACHMENT0, gl.COLOR_ATTACHMENT1]);\r\n         */\r\n        if (extLib.get('WEBGL_draw_buffers')) {\r\n            this.maxDrawbuffers = gl.getParameter(MAX_DRAW_BUFFERS_WEBGL);\r\n            this.maxColorAttachments = gl.getParameter(MAX_COLOR_ATTACHMENTS_WEBGL);\r\n        }\r\n\r\n        /**\r\n         * 浮点纹理测试\r\n         */\r\n        if (extLib.get('OES_texture_float')) {\r\n            this.readFloat = true;\r\n            const readFloatTexture = gl.createTexture();\r\n            gl.bindTexture(CTextureMapTarget.TEXTURE_2D, readFloatTexture);\r\n            gl.texImage2D(CTextureMapTarget.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, CComponent.FLOAT, null);\r\n            const fbo = gl.createFramebuffer();\r\n            gl.bindFramebuffer(gl.FRAMEBUFFER, fbo);\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, CTextureMapTarget.TEXTURE_2D, readFloatTexture, 0);\r\n            gl.bindTexture(CTextureMapTarget.TEXTURE_2D, null);\r\n            if (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE)\r\n                this.readFloat = false;\r\n            else {\r\n                gl.viewport(0, 0, 1, 1);\r\n                gl.clearColor(1.0, 0.0, 0.0, 1.0);\r\n                gl.clear(gl.COLOR_BUFFER_BIT);\r\n                const pixels = bufferPool0.allocType('FLOAT', 4);\r\n                gl.readPixels(0, 0, 1, 1, gl.RGBA, CComponent.FLOAT, pixels);\r\n                if (gl.getError())\r\n                    this.readFloat = false;\r\n                else {\r\n                    gl.deleteFramebuffer(fbo);\r\n                    gl.deleteTexture(readFloatTexture);\r\n                    this.readFloat = pixels[0] === 1.0;\r\n                }\r\n                bufferPool0.freeType(pixels);\r\n            }\r\n        }\r\n\r\n        /**\r\n         * detect non power of two cube textures support (IE doesn't support)\r\n         */\r\n        const cubeTexture = gl.createTexture();\r\n        const data = bufferPool0.allocType('UNSIGNED_BYTE', 36);\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(CTextureMapTarget.TEXTURE_CUBE_MAP, cubeTexture);\r\n        gl.texImage2D(CTextureMapTarget.TEXTURE_CUBE_MAP_NEGATIVE_X, 0, gl.RGBA, 3, 3, 0, gl.RGBA, CComponent.UNSIGNED_BYTE, data);\r\n        bufferPool0.freeType(data);\r\n        gl.bindTexture(CTextureMapTarget.TEXTURE_CUBE_MAP, null);\r\n        gl.deleteTexture(cubeTexture);\r\n        this.npotTextureCube = !gl.getError();\r\n\r\n        /**\r\n         * color bits\r\n         */\r\n        this.colorBits.push(...[gl.getParameter(gl.RED_BITS), gl.getParameter(gl.GREEN_BITS), gl.getParameter(gl.BLUE_BITS), gl.getParameter(gl.ALPHA_BITS)]);\r\n\r\n        /**\r\n         * 深度缓冲\r\n         */\r\n        this.depthBits = gl.getParameter(gl.DEPTH_BITS);\r\n\r\n        /**\r\n         * 模板缓冲\r\n         */\r\n        this.stencilBits = gl.getParameter(gl.STENCIL_BITS);\r\n\r\n        /**\r\n         * point size 取值范围\r\n         */\r\n        this.pointSizeDims = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE);\r\n\r\n        /**\r\n         * line width 取值范围\r\n         */\r\n        this.lineWidthDims = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE);\r\n\r\n        /**\r\n         * 视域取值范围\r\n         */\r\n        this.maxViewportDims = gl.getParameter(gl.MAX_VIEWPORT_DIMS);\r\n\r\n        /**\r\n         * 可纹理单元上限\r\n         */\r\n        this.maxCombineTextureUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\r\n\r\n        /**\r\n         * 立方体纹理贴图分辨率上限\r\n         */\r\n        this.maxCubeMapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\r\n\r\n        /**\r\n         * RBO分辨率上限\r\n         */\r\n        this.maxRenderbufferSize = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE);\r\n\r\n        /**\r\n         * 纹理单元上限\r\n         */\r\n        this.maxTextureUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n\r\n        /**\r\n         * 设备支持的最大纹理分辨率\r\n         */\r\n        this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\r\n\r\n        /**\r\n         * 与显卡强相关，一般是16\r\n         */\r\n        this.maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\r\n\r\n        /**\r\n         * 指示顶点着色程序中可支持的uniform上限\r\n         */\r\n        this.maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\r\n\r\n        /**\r\n         * 指示片元着色程序中可支持的uniform上限\r\n         */\r\n        this.maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\r\n\r\n        /**\r\n         * 顶点着色器中支持的纹理单元上限\r\n         */\r\n        this.maxVertexTextureUnits = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\r\n\r\n        /**\r\n         * 支持的varying矢量上限\r\n         */\r\n        this.maxVaryingVectors = gl.getParameter(gl.MAX_VARYING_VECTORS);\r\n\r\n        /**\r\n         * glsl 版本\r\n         */\r\n        this.info.glsl = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\r\n\r\n        /**\r\n         * 浏览器prefix\r\n         */\r\n        this.info.vendor = gl.getParameter(gl.VENDOR);\r\n\r\n        /**\r\n         * webgl版本信息\r\n         */\r\n        this.info.version = gl.getParameter(gl.VERSION);\r\n\r\n        /**\r\n         * 渲染版本信息\r\n         */\r\n        this.info.renderer = gl.getParameter(gl.RENDERER);\r\n    }\r\n}\r\n\r\nexport { Limit }","/**\r\n * @author axmmand\r\n * @description check pred, throw erro if !pred is true\r\n * @param pred condition\r\n * @param message error message\r\n */\r\nconst check = (pred: any, message: string) => {\r\n    if (!pred)\r\n        throw new Error(`pipegl:${message}`);\r\n}\r\n\r\nexport { check }","/**\r\n * \r\n */\r\nlet id: number = 0;\r\n\r\n/**\r\n * @author axmand \r\n * @description get auto-increase id (number)\r\n * @example\r\n * const id = getIdx(); // \"1\"\r\n * @returns {number}\r\n */\r\nconst getIdx = (): number => {\r\n    return id++;\r\n}\r\n\r\nexport { getIdx }","import { getIdx } from \"../util/getIdx\";\r\n\r\n/**\r\n * @date 2021/8/16\r\n * @author axmand\r\n * @description basic disposable object class\r\n * @example\r\n * \r\n * class Buffer extends Dispose{\r\n *      dispose():void=>{\r\n *      }\r\n * }\r\n * \r\n */\r\nabstract class Dispose {\r\n    /**\r\n     * @description ID\r\n     */\r\n    protected id: number = getIdx();\r\n\r\n    /**\r\n    * @description get disposable object ID\r\n    */\r\n    get ID(): number {\r\n        return this.id;\r\n    }\r\n\r\n    /**\r\n     * @description reference count\r\n     */\r\n    protected refCount: number = 0;\r\n\r\n    /**\r\n     * @description dispose resource\r\n     */\r\n    abstract dispose(): void;\r\n    \r\n    /**\r\n     * 降低引用\r\n     */\r\n    abstract decRef():void;\r\n}\r\n\r\nexport { Dispose }","import { check } from '../util/check';\r\nimport { Limit } from '../core/Limit';\r\nimport { IStats } from '../util/createStats';\r\nimport { Dispose } from '../core/Dispose';\r\nimport { IMipmap } from '../pool/MipmapPool';\r\nimport { ITexFlag } from '../util/createTexFlag';\r\nimport { CTextureMapTarget } from '../core/Constant';\r\nimport { STextureFillTarget, STextureMAGFilter, STextureMapTarget, STextureMINFilter } from \"../core/Support\";\r\n\r\n/**\r\n * @description \r\n * texture paramater 记录，应用在输入传入时对GPU如何插值补全\r\n */\r\ninterface ITexInfo {\r\n    /**\r\n     * \r\n     */\r\n    wrapS?: STextureFillTarget;\r\n\r\n    /**\r\n     * \r\n     */\r\n    wrapT?: STextureFillTarget;\r\n\r\n    /**\r\n     * \r\n     */\r\n    magFilter?: STextureMAGFilter;\r\n\r\n    /**\r\n     * \r\n     */\r\n    minFilter?: STextureMINFilter;\r\n\r\n    /**\r\n     * 各向异性过滤\r\n     * 处理视角变化导致3D物体表面倾斜时为u能力错误\r\n     * 原理：记录相邻像素及彼此相对关系，在视角改变时读取绘制\r\n     * 三线性过滤采集范围更大，计算更准确（更耗性能）\r\n     */\r\n    anisotropic?: 1 | 2 | 3;\r\n\r\n    /**\r\n     * 加速贴图渲染和减少图形抗拒着\r\n     * 贴图被处理成由一系列被预先计算和优化过的图片组成的文件\r\n     * mip，希腊语，multum in parv，意思是“放置很多小东西的空间”\r\n     * mipmap遵循小波压缩规则，每一层按照四分之一大小等比例压缩，例如\r\n     *      0           1          2\r\n     *   256x256     128x128     64x64\r\n     */\r\n    genMipmaps?: boolean;\r\n\r\n    /**\r\n     * \r\n     */\r\n    mimmapHint?: number;\r\n}\r\n\r\n/**\r\n * 纹理资源映射\r\n */\r\nconst TEXTURE_SET: Map<number, GTexture> = new Map();\r\n\r\n/**\r\n * 当前设备维护的总纹理资源\r\n */\r\nconst TEXTURE_UNIT_ARR: GTexture[] = [];\r\n\r\n/**\r\n * 临时用来active绑定纹理的纹理单元  \r\n */\r\nconst TEXTURE0$1: number = 0x84C0;\r\n\r\n/**\r\n * 临时用来active绑定纹理的纹理单元（tmp)\r\n */\r\nconst TEXTURE2D$1: number = 0x0DE1;\r\n\r\n/**\r\n * \r\n */\r\nclass GTexture extends Dispose {\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    decRef(): void {\r\n        if (--this.refCount <= 0)\r\n            this.dispose();\r\n    }\r\n\r\n    /**\r\n     * WebGL绘制上下文\r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * tex info\r\n     */\r\n    private texInfo: ITexInfo;\r\n\r\n    /**\r\n     * 如果纹理包含mipmap. 则设置成mipmap/mask一致\r\n     */\r\n    private mipmap: IMipmap;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private texFlag: ITexFlag;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private limLib: Limit;\r\n\r\n    /**\r\n     * actual webgl texture object\r\n     */\r\n    private texture: WebGLTexture;\r\n\r\n    /**\r\n     * 纹理类型，包含texture2d, textureCube等\r\n     */\r\n    private target: number;\r\n\r\n    /**\r\n     * 纹理内部格式，如 RGB/RGBA\r\n     */\r\n    private textureColor: number;\r\n\r\n    /**\r\n     * 当前使用纹理单元号\r\n     */\r\n    private unit: number;\r\n\r\n    /**\r\n     * texture 绑定次数（计数）\r\n     */\r\n    private bindCount: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     */\r\n    set TexInfo(v: ITexInfo) {\r\n        this.texInfo = v;\r\n    }\r\n\r\n    /**\r\n     * 纹理信息\r\n     */\r\n    get TexInfo(): ITexInfo {\r\n        return this.texInfo;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set TexFlag(v: ITexFlag) {\r\n        this.texFlag = v;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get TexFlag(): ITexFlag {\r\n        return this.texFlag;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set Mipmap(v: IMipmap) {\r\n        this.mipmap = v;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Mipmap(): IMipmap {\r\n        return this.mipmap;\r\n    }\r\n\r\n    /**\r\n     * 像素宽度\r\n     */\r\n    get Width(): number {\r\n        return this.mipmap.width;\r\n    }\r\n\r\n    /**\r\n     * 像素高度\r\n     */\r\n    get Height(): number {\r\n        return this.mipmap.height;\r\n    }\r\n\r\n    /**\r\n     * 通道\r\n     */\r\n    get Channels(): number {\r\n        return this.mipmap.channels;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Texutre(): WebGLTexture {\r\n        return this.texture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param limLib \r\n     * @param target \r\n     * @param stats \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        limLib: Limit,\r\n        target: STextureMapTarget,\r\n        stats: IStats\r\n    ) {\r\n        super();\r\n        this.gl = gl;\r\n        this.target = CTextureMapTarget[target || 'TEXTURE_2D'];\r\n        this.bindCount = 0;\r\n        this.unit = -1;\r\n        this.limLib = limLib;\r\n        this.refCount = 1;\r\n        this.texture = gl.createTexture();\r\n        this.stats = stats;\r\n        if (this.target === CTextureMapTarget.TEXTURE_2D)\r\n            this.stats.textureCount++;\r\n        else if (this.target === CTextureMapTarget.TEXTURE_CUBE_MAP)\r\n            this.stats.cubeCount++;\r\n        TEXTURE_SET.set(this.ID, this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    public bind = (): number => {\r\n        const gl = this.gl, target = this.target;\r\n        const numTexUnits = this.limLib.maxTextureUnits;\r\n        this.bindCount++;\r\n        if (this.unit < 0) {\r\n            for (let i = 0; i < numTexUnits; ++i) {\r\n                const other = TEXTURE_UNIT_ARR[i];\r\n                if (other) {\r\n                    if (other.bindCount > 0) continue;\r\n                    other.unit = -1;\r\n                }\r\n                TEXTURE_UNIT_ARR[i] = this;\r\n                this.unit = i;\r\n                break;\r\n            }\r\n            check(this.unit < numTexUnits, `REGLTexture错误：使用纹理超过设备支持上限${this.limLib.maxTextureUnits}`);\r\n            gl.activeTexture(gl.TEXTURE0 + this.unit);\r\n            gl.bindTexture(target, this.texture);\r\n        }\r\n        return this.unit;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    public unbind = (): number => {\r\n        return this.bindCount--;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    tempBind = (): void => {\r\n        const gl = this.gl, target = this.target;\r\n        gl.activeTexture(TEXTURE0$1);\r\n        gl.bindTexture(target, this.texture);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    tempRestore = (): void => {\r\n        const gl = this.gl, prev = TEXTURE_UNIT_ARR[0];\r\n        if (prev) {\r\n            const target = prev.target;\r\n            gl.bindTexture(target, prev.texture);\r\n        }\r\n        else\r\n            gl.bindTexture(TEXTURE2D$1, null);\r\n    }\r\n}\r\n\r\nexport {\r\n    TEXTURE_UNIT_ARR,\r\n    TEXTURE_SET,\r\n    ITexInfo,\r\n    GTexture\r\n}","import { SComponent } from \"../core/Support\";\r\nimport { bufferPool0 } from \"../pool/BufferPool\";\r\nimport { ShapedArrayFormat, TypedArrayFormat } from \"../core/Format\";\r\n\r\n/**\r\n * @description get shape of array\r\n * @param array \r\n * @returns \r\n */\r\nconst getArrayShape = (array: ShapedArrayFormat): number[] => {\r\n    const shape = [];\r\n    let arr: any = array;\r\n    while (arr.length > 0) {\r\n        shape.push(arr.length);\r\n        arr = arr[0];\r\n    }\r\n    return shape;\r\n}\r\n\r\n/**\r\n * @description get array shape dimension\r\n * @param shape \r\n * @returns \r\n */\r\nconst getDimension = (shape: number[]): number => {\r\n    return shape.reduce((pre: number, cur: number) => {\r\n        return cur * pre;\r\n    }) || 0;\r\n}\r\n\r\n/**\r\n * @description copy 1d array directly, copy to 'out'\r\n * @param arr \r\n * @param len0 \r\n * @param out \r\n */\r\nconst flatten1D = (arr: number[] | TypedArrayFormat, len0: number, out: TypedArrayFormat): void => {\r\n    for (let i = 0; i < len0; ++i)\r\n        out[i] = arr[i]\r\n}\r\n\r\n/**\r\n * @description convert 2d array to 1d array, copy to 'out'\r\n * @param arr \r\n * @param len0 \r\n * @param len1 \r\n * @param out \r\n */\r\nconst flatten2D = (arr: number[][], len0: number, len1: number, out: TypedArrayFormat): void => {\r\n    let ptr = 0;\r\n    for (let i = 0; i < len0; ++i) {\r\n        const row = arr[i];\r\n        for (let j = 0; j < len1; ++j)\r\n            out[ptr++] = row[j];\r\n    }\r\n}\r\n\r\n/**\r\n * @description convert 3d array to 1d array, copy to 'out'\r\n * @param arr \r\n * @param len0 \r\n * @param len1 \r\n * @param len2 \r\n * @param out \r\n * @param ptr_ \r\n */\r\nconst flatten3D = (arr: number[][][], len0: number, len1: number, len2: number, out: TypedArrayFormat, ptr_: number = 0): void => {\r\n    let ptr = ptr_;\r\n    for (let i = 0; i < len0; ++i) {\r\n        let row = arr[i];\r\n        for (let j = 0; j < len1; ++j) {\r\n            let col = row[j];\r\n            for (let k = 0; k < len2; ++k)\r\n                out[ptr++] = col[k];\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @description flatteran array\r\n * @param array \r\n * @param shape \r\n * @param scomponent \r\n * @param out_ \r\n * @returns \r\n */\r\nconst flattenArrayWithShape = (array: ShapedArrayFormat, shape: number[], scomponent: SComponent, out_: TypedArrayFormat = null): TypedArrayFormat => {\r\n    const size = getDimension(shape);\r\n    const out = out_ || bufferPool0.allocType(scomponent, size);\r\n    switch (shape.length) {\r\n        case 0:\r\n            break;\r\n        case 1:\r\n            flatten1D(array as number[] | TypedArrayFormat, shape[0], out);\r\n            break;\r\n        case 2:\r\n            flatten2D(array as number[][], shape[0], shape[1], out);\r\n            break;\r\n        case 3:\r\n            flatten3D(array as number[][][], shape[0], shape[1], shape[2], out, 0);\r\n            break;\r\n        default:\r\n            throw new Error(`pipegl: flatten did't support ${shape.length} D array`)\r\n    }\r\n    return out;\r\n}\r\n\r\n/**\r\n * @description auto get shape, flatten array to 1d array\r\n * @param array \r\n * @param scomponent \r\n * @param out_ \r\n * @returns \r\n */\r\nconst flattenArray = (array: ShapedArrayFormat, scomponent: SComponent, out_: TypedArrayFormat = null): TypedArrayFormat => {\r\n    const shape = getArrayShape(array);\r\n    return flattenArrayWithShape(array, shape, scomponent, out_);\r\n}\r\n\r\nexport {\r\n    getDimension,\r\n    getArrayShape,\r\n    flattenArrayWithShape,\r\n    flattenArray\r\n}","import { getArrayShape } from './getFlatten';\r\nimport { ShapedArrayFormat } from '../core/Format';\r\n\r\n/**\r\n * 判断是否是多维数组\r\n * @param v \r\n * @returns \r\n */\r\nconst isNDArray = (v: any): boolean => {\r\n    if (Array.isArray(v)) {\r\n        const shape = getArrayShape(v as ShapedArrayFormat);\r\n        if (shape.length > 0 && shape.length < 3) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport { isNDArray }","import { Limit } from \"../core/Limit\";\r\nimport { check } from \"../util/check\";\r\nimport { IStats } from \"../util/createStats\";\r\nimport { Dispose } from \"../core/Dispose\";\r\nimport { GAttachment } from \"./GAttachment\";\r\n\r\n/**\r\n * \r\n */\r\nconst COLOR_ATTACHMENT0_WEBGL = 0x8CE0;\r\n\r\n/**\r\n * 全局FBO资源统计\r\n */\r\nconst FRAMEBUFFER_SET: Map<number, GFramebuffer> = new Map();\r\n\r\n/**\r\n * @author axmand\r\n * @description\r\n * - Framebuffer对象实际上不是缓冲区，而是包含一个或多个附件的WebGL对象，\r\n * 而这些附件是实际的缓冲区，可用把Framebuffer理解为C语言的结构体，其中\r\n * 每个成员都是指向缓冲区的指针\r\n * \r\n * -Framebuffer对象占用空间非常小，链接到Framebuffer的每个缓冲区可以是RBO\r\n * 或texture\r\n * \r\n * -Renderbuffer是实际缓冲区（可存储字节数组、整数、像素）。RBO以原生格式\r\n * 存储像素值，因此针对屏幕外渲染进行了优化。也就是说绘制到RBO比绘制到纹理\r\n * 快得多。缺点是像素使用原生格式依赖于实现的格式，因此RBO的去读比纹理要困难\r\n * \r\n * -一旦绘制了RBO，就可以使用像素传输操作将其内容直接复制到屏幕，即基于RBO的\r\n * 双缓冲技术\r\n * \r\n * -RBO是一个相对较新的概念，在此值钱FBO用于渲染到texture，由于纹理使用标准\r\n * 因此写入可能较慢，当然依然可以使用FBO渲染到纹理，当需要在像素上执行多次传递以\r\n * 构建场景，或在一个场景的表面上绘制场景时，是十分有用的\r\n */\r\nclass GFramebuffer extends Dispose {\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        const gl = this.gl;\r\n        check(this.framebuffer, `REGLFramebuffer 错误: 请不要重复清理FBO`);\r\n        gl.deleteFramebuffer(this.framebuffer);\r\n        this.framebuffer = null;\r\n        this.stats.framebufferCount--;\r\n        FRAMEBUFFER_SET.delete(this.ID);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    decRef(): void {\r\n        this.colorAttachments?.forEach((attachment) => {\r\n            attachment.decRef();\r\n        });\r\n        this.depthAttachment.decRef();\r\n        this.stencilAttachment.decRef();\r\n        this.depthStencilAttachment.decRef();\r\n        if (--this.refCount <= 0) this.dispose();\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private framebuffer: WebGLFramebuffer;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private width: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private height: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private colorAttachments: GAttachment[] = [];\r\n\r\n\r\n    /**\r\n     * \r\n     */\r\n    private colorDrawbuffers: number[];\r\n\r\n    /**\r\n     * \r\n     */\r\n    private depthAttachment: GAttachment = null;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stencilAttachment: GAttachment = null;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private depthStencilAttachment: GAttachment = null;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private limLib: Limit;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     */\r\n    get ColorAttachments(): GAttachment[] {\r\n        return this.colorAttachments;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get ColorDrawbuffers(): number[] {\r\n        return this.colorDrawbuffers;\r\n    }\r\n\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        limLib: Limit,\r\n        stats: IStats\r\n    ) {\r\n        super();\r\n        this.gl = gl;\r\n        this.framebuffer = gl.createFramebuffer();\r\n        this.width = 0;\r\n        this.height = 0;\r\n        this.limLib = limLib;\r\n        this.stats = stats;\r\n        //全局统计fbo计数\r\n        this.stats.framebufferCount++;\r\n        FRAMEBUFFER_SET.set(this.ID, this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     */\r\n    public refreshAttachment = (\r\n        opts: {\r\n            colorAttachments?: GAttachment[],\r\n            depthAttachment?: GAttachment,\r\n            stencilAttachment?: GAttachment,\r\n            depthStencilAttachment?: GAttachment\r\n        }\r\n    ) => {\r\n        this.colorDrawbuffers = [];\r\n        this.colorAttachments = opts.colorAttachments;\r\n        this.depthAttachment = opts.depthAttachment;\r\n        this.stencilAttachment = opts.stencilAttachment;\r\n        this.depthStencilAttachment = opts.depthStencilAttachment;\r\n        this.colorAttachments.forEach((attachment, index) => this.colorDrawbuffers.push(COLOR_ATTACHMENT0_WEBGL + index));\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public bind = (): void => {\r\n        this.refCount++;\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, this.framebuffer);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public unbind = (): void => {\r\n        this.gl.bindFramebuffer(this.gl.FRAMEBUFFER, null);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public updateFramebuffer = (): void => {\r\n        const gl = this.gl;\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\r\n        //color attchment\r\n        this.colorAttachments?.forEach((colorAttachment: GAttachment, i: number) => {\r\n            colorAttachment.attach(gl.COLOR_ATTACHMENT0 + i);\r\n        })\r\n        for (let i = this.colorAttachments.length; i < this.limLib.maxColorAttachments; ++i) {\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i, gl.TEXTURE_2D, null, 0);\r\n        }\r\n        //depth attachment\r\n        if (this.depthAttachment) {\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.TEXTURE_2D, null, 0);\r\n            this.depthAttachment.attach(gl.DEPTH_ATTACHMENT);\r\n        }\r\n        //stencil attachment\r\n        if (this.stencilAttachment) {\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.STENCIL_ATTACHMENT, gl.TEXTURE_2D, null, 0);\r\n            this.depthAttachment.attach(gl.STENCIL_ATTACHMENT);\r\n        }\r\n        //depth stencil attachment\r\n        if (this.depthStencilAttachment) {\r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.DEPTH_STENCIL_ATTACHMENT, gl.TEXTURE_2D, null, 0);\r\n            this.depthAttachment.attach(gl.DEPTH_STENCIL_ATTACHMENT);\r\n        }\r\n        //check fbo status\r\n        const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n        check(!gl.isContextLost() && status === gl.FRAMEBUFFER_COMPLETE, `GFramebuffer 错误: 错误码${status}`);\r\n        //不再需要fbo更新\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        //get error为0表示无错误\r\n        const ERROR = gl.getError();\r\n        check(ERROR === gl.NO_ERROR, `GFramebuffer 错误: gl上下文错误, 错误码 ${ERROR}`);\r\n        check(ERROR !== gl.INVALID_ENUM, `GFramebuffer 错误: 请检查是否使用了多个颜色附件，多颜色附件必须开启插件WEBGL_draw_buffers`);\r\n    }\r\n}\r\n\r\nexport {\r\n    FRAMEBUFFER_SET,\r\n    GFramebuffer\r\n}","const slice = (x: any[]) => {\r\n    return Array.prototype.slice.call(x);\r\n}\r\n\r\nexport { slice }","import { slice } from \"./slice\"\r\n\r\nconst join = (x: any[]): string => {\r\n    return slice(x).join('');\r\n}\r\n\r\nexport { join }","let id = 1;\r\n\r\nconst getId = () => {\r\n    return id++;\r\n}\r\n\r\nexport { getId }","import { getId } from '../util/getId';\r\n\r\n/**\r\n * @date 2021/8/15\r\n * @description complie code\r\n * @author axmand\r\n * @example\r\n * //inherit \r\n * class BlockClass extends Compilable{ }\r\n */\r\nclass Compilable {\r\n\r\n    private id: string = `compilable-${getId()}`;\r\n\r\n    get ID() {\r\n        return this.id;\r\n    }\r\n\r\n    protected regularize = (raw: string): string => {\r\n        return raw.replace(/\\n/g, '').replace(/;/g, ';\\n').replace(/}/g, '}\\n').replace(/{/g, '{\\n');\r\n    }\r\n\r\n    protected compile = (): string => {\r\n        throw new Error(`${this.ID} unimplemented method`);\r\n    }\r\n\r\n}\r\n\r\nexport { Compilable }","import { Block } from \"./Block\";\r\nimport { Compilable } from \"../core/Compilable\";\r\n\r\n/**\r\n * @description \r\n * codeblock seems like:\r\n * //entry\r\n * const a = '112233'\r\n * ...\r\n * ...\r\n * //exit, always in tail \r\n * const b = a;\r\n */\r\nclass Scope extends Compilable {\r\n\r\n    /**\r\n     * entry block\r\n     */\r\n    private entrytBlock: Block = new Block();\r\n\r\n    /**\r\n     * tail block\r\n     */\r\n    private exitBlock: Block = new Block();\r\n\r\n    get Entry(): Block {\r\n        return this.entrytBlock;\r\n    }\r\n\r\n    get Exit(): Block {\r\n        return this.exitBlock;\r\n    }\r\n\r\n    compile = (): string => {\r\n        return this.regularize(`${this.Entry.compile()}${this.Exit.compile()}`);\r\n    }\r\n    \r\n}\r\n\r\nexport { Scope }","import { join } from './../util/join';\r\nimport { Block } from \"./Block\";\r\nimport { Compilable } from \"../core/Compilable\";\r\n\r\n/**\r\n * @description \r\n * code block seems like:\r\n * if(cond){\r\n *  //then block\r\n * }\r\n * else{\r\n *  //else block\r\n * }\r\n */\r\nclass ConditionTE extends Compilable {\r\n\r\n    /**\r\n     * cond \r\n     */\r\n    private predSource: string;\r\n\r\n    /**\r\n     * then block body\r\n     */\r\n    private thenBlock: Block = new Block();\r\n\r\n    /**\r\n     * else block body\r\n     */\r\n    private elseBlock: Block = new Block();\r\n\r\n    constructor(...args: any[]) {\r\n        super();\r\n        this.predSource = join(args);\r\n    }\r\n\r\n    /**\r\n     * @description then block codelines\r\n     * @example\r\n     * cond.Then.push(`console(true)`);\r\n     */\r\n    get Then(): Block {\r\n        return this.thenBlock;\r\n    }\r\n\r\n    /**\r\n     * @description else block codelines\r\n     * @example\r\n     * cond.Else.push(`alert(0)`);\r\n     */\r\n    get Else(): Block {\r\n        return this.elseBlock;\r\n    }\r\n\r\n    compile = (): string => {\r\n        return this.regularize(`if(${this.predSource}){${this.Then.compile()}}else{${this.Else.compile()}}`);\r\n    }\r\n}\r\n\r\n/**\r\n * @description\r\n * code block seems like\r\n * if(cond){\r\n *  //then block\r\n * }\r\n */\r\nclass ConditionT extends Compilable {\r\n\r\n    /**\r\n     * cond \r\n     */\r\n    private predSource: string;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private thenBlock: Block = new Block();\r\n\r\n    constructor(...args: any[]) {\r\n        super();\r\n        this.predSource = join(args);\r\n    }\r\n\r\n    get Then(): Block {\r\n        return this.thenBlock;\r\n    }\r\n\r\n    compile = (): string => {\r\n        return this.regularize(`if(${this.predSource}){${this.Then.compile()}}`);\r\n    }\r\n\r\n}\r\n\r\nexport {\r\n    ConditionT,\r\n    ConditionTE\r\n}","/**\r\n * @description check error by cond 'pred'\r\n * @param pred \r\n * @param message \r\n */\r\nconst codegenError = (pred: any, message: string) => {\r\n    if (!pred) {\r\n        const error = new Error(`error-${message}`);\r\n        throw error;\r\n    }\r\n}\r\n\r\n/**\r\n * @description check o is null or undefined or empty\r\n * @param o \r\n * @param message \r\n */\r\nconst codegenValueError = (o: any, message: string) => {\r\n    let cond: boolean = true;\r\n    if (Array.isArray(o))\r\n        cond = false;\r\n    else if (Number(o) !== NaN)\r\n        cond = false;\r\n    else if (o !== null || o !== undefined)\r\n        cond = false;\r\n    codegenError(!cond, message);\r\n}\r\n\r\nexport {\r\n    codegenError,\r\n    codegenValueError\r\n}","import { Scope } from \"./Scope\";\r\nimport { Compilable } from \"../core/Compilable\";\r\nimport { ConditionT, ConditionTE } from \"./Condition\";\r\nimport { slice } from \"../util/slice\";\r\nimport { codegenError, codegenValueError } from './../util/check';\r\nimport { getId } from \"../util/getId\";\r\nimport { join } from \"../util/join\";\r\n\r\nclass Block extends Compilable {\r\n\r\n    /**\r\n     * codeline count\r\n     */\r\n    private lc: number = 0;\r\n\r\n    /**\r\n     * variable declare array\r\n     */\r\n    private VARIABLE_NAME_ARR: string[] = [];\r\n\r\n    private CODELINE_SET: Map<number, any[] | Block | ConditionT | ConditionTE | Scope> = new Map();\r\n\r\n    private MERGE_BLOCKS_ARR: Block[] = [];\r\n\r\n    /**\r\n     * @description add new codeline\r\n     * @param args \r\n     * @example\r\n     * //add new codelines\r\n     * block.push(`ccc=`, [2124,3], `;`);\r\n     * //add new codeline\r\n     * block.push(`ccc=0`);\r\n     * @returns \r\n     */\r\n    push(...args: any[]): Block {\r\n        const lines: any[] = [], CODELINE_ARR = this.CODELINE_SET;\r\n        args.forEach((v: any) => {\r\n            Array.isArray(v) ? lines.push(`[${slice(v)}]`) : lines.push(v);\r\n        });\r\n        if (lines.length > 0\r\n            && `${lines[lines.length - 1]}`.lastIndexOf('{') !== lines[lines.length - 1].length - 1\r\n            && `${lines[lines.length - 1]}`.lastIndexOf('}') !== lines[lines.length - 1].length - 1\r\n            && `${lines[lines.length - 1]}`.lastIndexOf(';') !== lines[lines.length - 1].length - 1\r\n        ) lines.push(';');\r\n        CODELINE_ARR.set(this.lc++, lines);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * @description declare varaible, assign with default value 'v'\r\n     * @example\r\n     * const name = block.def([1,2]); //var g0 = [1,2];\r\n     * @param v \r\n     */\r\n    def = (v: string | number | boolean | number[] | string[]): string => {\r\n        codegenValueError(v, `v does not support null/undefined`);\r\n        const NAME = `b${getId()}`,\r\n            CODELINE_ARR = this.CODELINE_SET,\r\n            VARIABLE_NAME_ARR = this.VARIABLE_NAME_ARR;\r\n        VARIABLE_NAME_ARR.push(NAME);\r\n        const lines = [];\r\n        lines.push(NAME, `=`);\r\n        Array.isArray(v) ? lines.push(`[${slice(v)}]`) : lines.push(v);\r\n        lines.push(`;`);\r\n        CODELINE_ARR.set(this.lc++, lines);\r\n        return NAME;\r\n    }\r\n\r\n    /**\r\n     * @description combine block/scope/condition after this codeline\r\n     * @param v \r\n     */\r\n    private combine = (v: Block | ConditionT | ConditionTE | Scope): void => {\r\n        this.CODELINE_SET.set(this.lc++, v)\r\n    }\r\n\r\n    /**\r\n     * @description append exist block in tail\r\n     * @param block \r\n     */\r\n    appendBlock = (block: Block): void => {\r\n        codegenError(!this.MERGE_BLOCKS_ARR.find((b: Block) => b.ID === block.ID), `Duplicate block merges are not allowed`);\r\n        this.MERGE_BLOCKS_ARR.push(block);\r\n    }\r\n\r\n    /**\r\n     * @description create new Block from this line\r\n     * @returns \r\n     */\r\n    createBlock = (): Block => {\r\n        const block = new Block();\r\n        this.CODELINE_SET.set(this.lc++, block);\r\n        return block;\r\n    }\r\n\r\n    /**\r\n     * @description create Scope and combie in this codeline\r\n     * @returns \r\n     */\r\n    createScope = (): Scope => {\r\n        const scope = new Scope();\r\n        this.CODELINE_SET.set(this.lc++, scope);\r\n        return scope;\r\n    }\r\n\r\n    /**\r\n     * @description create ConditionT\r\n     * @param args \r\n     * @returns \r\n     */\r\n    createConditionT = (...args: any[]): ConditionT => {\r\n        const cond = new ConditionT(...args);\r\n        this.combine(cond);\r\n        return cond;\r\n    }\r\n\r\n    /**\r\n     * @description create ConditionTE\r\n     * @param args \r\n     * @returns \r\n     */\r\n    createConditionTE = (...args: any[]): ConditionTE => {\r\n        const cond = new ConditionTE(...args);\r\n        this.combine(cond);\r\n        return cond;\r\n    }\r\n\r\n    /**\r\n     * @description compile block\r\n     * @returns \r\n     */\r\n    compile = (): string => {\r\n        const CODELINE_SET = this.CODELINE_SET, MERGE_BLOCKS_ARR = this.MERGE_BLOCKS_ARR, VARIABLE_NAME_ARR = this.VARIABLE_NAME_ARR;\r\n        const declareSource: string = VARIABLE_NAME_ARR.length > 0 ? `var ${VARIABLE_NAME_ARR.join(',')};` : ``;\r\n        let bodySource: string = ``;\r\n        CODELINE_SET.forEach(\r\n            (line: any[] | Block | ConditionT | ConditionTE | Scope) => {\r\n                bodySource += (\r\n                    line instanceof Block ||\r\n                    line instanceof ConditionTE ||\r\n                    line instanceof ConditionT ||\r\n                    line instanceof Scope\r\n                ) ? line.compile() : join(line);\r\n            }\r\n        );\r\n        const mergeSource: string = MERGE_BLOCKS_ARR.reduce<string>((pre: string, cur: Block) => pre + cur.compile(), ``);\r\n        return this.regularize(`${declareSource}${bodySource}${mergeSource}`);\r\n    }\r\n\r\n}\r\n\r\nexport { Block }","import { Block } from \"./Block\";\r\nimport { Scope } from \"./Scope\";\r\nimport { Compilable } from \"../core/Compilable\";\r\n\r\n/**\r\n * @description \r\n * codeline seems like:\r\n * add:funciton(p0){\r\n *  //do something\r\n * }\r\n */\r\nclass Procedure extends Compilable {\r\n\r\n    /**\r\n     * \r\n     */\r\n    private name: string;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private inputArguments: string[] = [];\r\n\r\n    /**\r\n     * \r\n     */\r\n    private parameterCount: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private bodyScope: Scope = new Scope();\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Name(): string {\r\n        return this.name;\r\n    }\r\n\r\n    get Entry(): Block {\r\n        return this.bodyScope.Entry;\r\n    }\r\n\r\n    get Exit(): Block {\r\n        return this.bodyScope.Exit;\r\n    }\r\n\r\n    get Scope(): Scope {\r\n        return this.bodyScope;\r\n    }\r\n\r\n    constructor(fnName: string, parameterCount: number = 0) {\r\n        super();\r\n        this.name = fnName;\r\n        this.parameterCount = parameterCount;\r\n        for (let i = 0; i < this.parameterCount; i++) this.registArgs();\r\n    }\r\n\r\n    private registArgs = (): string => {\r\n        const ne = `p${this.inputArguments.length}`;\r\n        this.inputArguments.push(ne);\r\n        return ne;\r\n    }\r\n\r\n    compile = () => {\r\n        const inputArgumentsSource: string = this.inputArguments.join();\r\n        return this.regularize(`function(${inputArgumentsSource}){${this.bodyScope.compile()}}`);\r\n    }\r\n    \r\n}\r\n\r\n\r\n\r\nexport { Procedure }","import { join } from \"./util/join\";\r\nimport { getId } from \"./util/getId\";\r\nimport { Block } from \"./code/Block\";\r\nimport { Scope } from \"./code/Scope\";\r\nimport { Procedure } from \"./code/Procedure\";\r\nimport { Compilable } from \"./core/Compilable\";\r\nimport { ConditionT, ConditionTE } from \"./code/Condition\";\r\n\r\n/**\r\n * @author axmand\r\n * @description\r\n */\r\nclass Template extends Compilable {\r\n\r\n    /**\r\n     * func name - func\r\n     */\r\n    private PROCEDURE_SET: Map<string, Procedure> = new Map();\r\n\r\n    private GLOBAL_NAME_ARR: string[] = [];\r\n\r\n    private GLOBAL_VALUE_ARR: any[] = [];\r\n\r\n    private bathcId: string = `0`;\r\n\r\n    private globalBlock: Block = new Block();\r\n\r\n    get BatchID(): string {\r\n        return this.bathcId;\r\n    }\r\n\r\n    /**\r\n     * @description link global object\r\n     * @example\r\n     * const g = template.link({});\r\n     * @param v \r\n     * @returns \r\n     */\r\n    link = (v: any): string => {\r\n        const GLOBAL_VALUE_ARR = this.GLOBAL_VALUE_ARR, GLOBAL_NAME_ARR = this.GLOBAL_NAME_ARR;\r\n        for (let i = 0, len = GLOBAL_VALUE_ARR.length; i < len; i++)\r\n            if (GLOBAL_VALUE_ARR[i] === v)\r\n                return GLOBAL_NAME_ARR[i];\r\n        const gln = `g${getId()}`;\r\n        GLOBAL_NAME_ARR.push(gln);\r\n        GLOBAL_VALUE_ARR.push(v);\r\n        return gln;\r\n    }\r\n\r\n    /**\r\n     * @de define o\r\n     * @param o \r\n     * @returns \r\n     */\r\n    def = (o: string | number | boolean | number[] | string[]): string => {\r\n        return this.globalBlock.def(o);\r\n    }\r\n\r\n    /**\r\n     * @description create return function 'procedure'\r\n     * @param name \r\n     * @param parameterCount \r\n     * @returns \r\n     */\r\n    procedure = (name: string, parameterCount: number = 0): Procedure => {\r\n        const procedure = new Procedure(name, parameterCount);\r\n        this.PROCEDURE_SET.set(procedure.Name, procedure);\r\n        return procedure;\r\n    }\r\n\r\n    /**\r\n     * @description\r\n     * compile block\r\n     * seems like:\r\n     * (function anonymous(linkNames){\r\n     *  //main\r\n     *  return{\r\n     *      fnName:function(p0){\r\n     *      },\r\n     *      //....\r\n     *  }\r\n     * })\r\n     */\r\n    compile = () => {\r\n        const proces: string[] = [];\r\n        this.PROCEDURE_SET.forEach((v: Procedure, k: string) => {\r\n            proces.push(`\"${k}\":${v.compile()},`);\r\n        });\r\n        const source = this.regularize(`\"use strict\";${this.globalBlock.compile()}return{${join(proces)}}`);\r\n        /**\r\n         * link name as inputs\r\n         * such as:\r\n         * [gl].concat(str);\r\n         * excuted as:\r\n         * function(gl){//str};\r\n         */\r\n        const proc = Function.apply(null, this.GLOBAL_NAME_ARR.concat(source));\r\n        /**\r\n         * reference:\r\n         * https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply\r\n         * executed in strict, apply(null)\r\n         */\r\n        return proc.apply(null, this.GLOBAL_VALUE_ARR);\r\n    }\r\n}\r\n\r\nexport {\r\n    Block,\r\n    Scope,\r\n    Template,\r\n    Procedure,\r\n    ConditionT,\r\n    ConditionTE\r\n}","import { Limit } from \"./Limit\";\r\nimport { Status } from './Status';\r\nimport { GBuffer } from \"../res/GBuffer\";\r\nimport { GShader } from \"../res/GShader\";\r\nimport { GTexture } from \"../res/GTexture\";\r\nimport { Extension } from \"./Extension\";\r\nimport { isNDArray } from \"../util/isNDArray\";\r\nimport { ShaderState } from \"../state/ShaderState\";\r\nimport { StringState } from \"../state/StringState\";\r\nimport { BufferState } from \"../state/BufferState\";\r\nimport { ProgramState } from \"../state/ProgramState\";\r\nimport { TextureState } from \"../state/TextureState\";\r\nimport { ElementsState } from \"../state/ElementState\";\r\nimport { GFramebuffer } from \"../res/GFramebuffer\";\r\nimport { IPerformance } from './../util/createPerformance';\r\nimport { IUniformRecord } from \"../compiler/parseUniform\";\r\nimport { AttributeState } from \"../state/AttributeState\";\r\nimport { GElementsbuffer } from '../res/GElementsbuffer';\r\nimport { FramebufferState } from \"../state/FramebufferState\";\r\nimport { RenderbufferState } from \"../state/RenderbufferState\";\r\nimport { Procedure, Template } from 'kiwi.codegen';\r\nimport { IActiveInfo, GProgram } from '../res/GProgram';\r\nimport { IAttributeRecord, GVertexArrayObject } from \"../res/GVertexArrayObject\";\r\nimport { IFramebufferSetting, IFramebufferInfo as IFramebufferInfo } from \"../compiler/parseFramebuffer\";\r\n\r\n/**\r\n * 全局静态值，包含属性/对象/函数\r\n */\r\nconst PipelineConstant = {\r\n    /**\r\n     * \r\n     */\r\n    isNDArray: isNDArray,\r\n\r\n    /**\r\n     * \r\n     * @param v \r\n     * @returns \r\n     */\r\n    isNumber: (v: any) => !isNaN(parseFloat(v)) && isFinite(v),\r\n\r\n    /**\r\n     * \r\n     * @param v \r\n     * @returns \r\n     */\r\n    isTexture: (v: any) => v instanceof GTexture,\r\n\r\n    /**\r\n     * \r\n     * @param v \r\n     * @returns \r\n     */\r\n    isFramebuffer: (v: any) => v instanceof GFramebuffer,\r\n};\r\n\r\n/**\r\n * 指示资源会被link到pipeline，需要保存资源id\r\n */\r\ninterface IPipelineLink {\r\n    /**\r\n     * 记录进pipeline中的link变量名\r\n     * link name\r\n     */\r\n    ln?: string;\r\n\r\n    /**\r\n     * 记录pipeline中def数值变量名\r\n     * define name\r\n     * dynamic name\r\n     */\r\n    dn?: string;\r\n\r\n    /**\r\n     * 为dynamic uniform保存函数输入属性预留用\r\n     * -funciton计算得到的uniform值\r\n     * -prop计算得到的uniform值\r\n     */\r\n    dyn?: string;\r\n}\r\n\r\n/**\r\n * 管道资源\r\n * - parese处理后生成的资源缓存进pipeline后备用\r\n */\r\ninterface IPipelineData {\r\n    /**\r\n     * \r\n     */\r\n    attributeRecordSet: Map<string, IAttributeRecord>;\r\n\r\n    /**\r\n     * \r\n     */\r\n    uniformRecordSet: Map<string, IUniformRecord>;\r\n\r\n    /**\r\n     * \r\n     */\r\n    program: GProgram;\r\n\r\n    /**\r\n     * \r\n     */\r\n    fragId: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    vertId: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    status: Status;\r\n\r\n    /**\r\n     * \r\n     */\r\n    fragShader: GShader;\r\n\r\n    /**\r\n     * \r\n     */\r\n    vertShader: GShader;\r\n\r\n    /**\r\n     * \r\n     */\r\n    performance: IPerformance;\r\n\r\n    /**\r\n     * \r\n     */\r\n    vao?: GVertexArrayObject;\r\n\r\n    /**\r\n     * \r\n     */\r\n    element?: GElementsbuffer;\r\n\r\n    /**\r\n     * \r\n     */\r\n    framebuffer?: IFramebufferInfo;\r\n}\r\n\r\n/**\r\n * 构造pipeline时必须的资源准备\r\n */\r\ninterface IPipelineSchema {\r\n    /**\r\n     * \r\n     */\r\n    gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    extLib: Extension;\r\n\r\n    /**\r\n     * \r\n     */\r\n    limLib: Limit;\r\n\r\n    /**\r\n     * \r\n     */\r\n    attributeState: AttributeState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    bufferState: BufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    elementState: ElementsState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    programState: ProgramState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    shaderState: ShaderState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    stringState: StringState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    textureState: TextureState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    renderbufferState: RenderbufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    framebufferState: FramebufferState;\r\n\r\n    /**\r\n     * 性能统计\r\n     */\r\n    performance: IPerformance;\r\n    \r\n    /**\r\n     * \r\n     */\r\n    primitive: number;\r\n\r\n    /**\r\n     * draw Count\r\n     */\r\n    count: number;\r\n\r\n    /**\r\n     * draw Offset\r\n     */\r\n    offset: number;\r\n\r\n    /**\r\n     * 实例绘制次数\r\n     */\r\n    instances?: number;\r\n}\r\n\r\n/**\r\n * 存储的全局变量对应的codegen生成的变量名\r\n */\r\ntype SVariable =\r\n    | keyof {\r\n        [key in keyof typeof PipelineConstant]: string\r\n    }\r\n    | keyof {\r\n        [key in keyof IPipelineSchema]: string\r\n    }\r\n    | keyof {\r\n        [key in keyof IPipelineData]: string\r\n    }\r\n    | keyof {\r\n        /**\r\n         * 常量\r\n         */\r\n        pipeConstant?: string;\r\n\r\n        /**\r\n         * 数据集合\r\n         */\r\n        pipeData?: string;\r\n\r\n        /**\r\n         * 各种管理类型state的数据集合\r\n         */\r\n        pipeState?: string\r\n    };\r\n\r\n/**\r\n * @@author axmand\r\n * Pipeline设计思想：\r\n * -隔离webgl上下文\r\n * -记录draw状态\r\n * -共享context\r\n * \r\n * 通过codegen->compiler->function从形态上和逻辑上保持各个绘制流程(draw pipeline)的隔离\r\n */\r\nclass Pipeline {\r\n    /**\r\n     * \r\n     */\r\n    private template: Template;\r\n\r\n    /**\r\n     * 记录管道数据\r\n     */\r\n    private pipelineSchema: IPipelineSchema;\r\n\r\n    /**\r\n     * 缓存变量对应的pipeline/link等\r\n     */\r\n    private variableNameSet: Map<SVariable | string, string> = new Map();\r\n\r\n    /**\r\n     * \r\n     */\r\n    private batchId: number;\r\n\r\n    /**\r\n     * 绘制批次id，在一阵内返回\r\n     */\r\n    get BatchID(): number {\r\n        return this.batchId;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param v \r\n     * @returns \r\n     */\r\n    public getVariable = (v: SVariable): string => {\r\n        return this.variableNameSet.get(v);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param pipelineSchema \r\n     */\r\n    constructor(pipelineSchema: IPipelineSchema) {\r\n        this.template = new Template();\r\n        this.pipelineSchema = pipelineSchema;\r\n        this.batchId = 0;\r\n        //处理state数据\r\n        this.append(pipelineSchema);\r\n        //处理constant数据\r\n        this.link(PipelineConstant, 'pipeConstant');\r\n        Object.keys(PipelineConstant)?.forEach((key: string) => {\r\n            this.variableNameSet.set(key, this.template.def(`${this.getVariable('pipeConstant')}.${key}`));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param v \r\n     * @param linkName \r\n     */\r\n    private appendData = (v: IPipelineSchema | IPipelineData, linkName: SVariable): void => {\r\n        this.link(v, linkName);\r\n        Object.keys(v)?.forEach((key: string) => {\r\n            this.variableNameSet.set(key, this.template.def(`${this.getVariable(linkName)}.${key}`));\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param v \r\n     */\r\n    public append = (v: IPipelineSchema | IPipelineData): void => {\r\n        const ne: SVariable = ((v as IPipelineSchema).attributeState !== undefined) && ((v as IPipelineSchema).bufferState !== undefined) ? 'pipeState' : 'pipeData';\r\n        this.appendData(v, ne);\r\n    }\r\n\r\n    /**\r\n     * carete closure function\r\n     * @param name \r\n     * @param parameterCount \r\n     * @returns \r\n     */\r\n    public proc = (name: string, parameterCount: number): Procedure => {\r\n        return this.template.procedure(name, parameterCount);\r\n    }\r\n\r\n    /**\r\n     * define value\r\n     * @param v \r\n     * @returns \r\n     */\r\n    public def = (v: string | number | boolean | number[] | string[]): string => {\r\n        return this.template.def(v);\r\n    }\r\n\r\n    /**\r\n     * link as function input variables\r\n     * @param v \r\n     */\r\n    public link(v: { (performance: IPerformance, batchId: number): number } | { (performance: IPerformance, batchId: number): number[] } | { (performance: IPerformance, batchId: number): GTexture } | { (performance: IPerformance, batchId: number): GFramebuffer }): string\r\n    public link(v: number[] | IActiveInfo | GBuffer | GElementsbuffer | GTexture | GFramebuffer | Status): string\r\n    public link(v: Object, name: SVariable): string\r\n    public link(v?: any, name?: any): string {\r\n        const v0 = this.template.link(v);\r\n        if (name) this.variableNameSet.set(name, v0);\r\n        else this.variableNameSet.set(v0, v0);\r\n        return v0;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns soruce code\r\n     */\r\n    public compile = (): string => {\r\n        return this.template.compile();\r\n    }\r\n}\r\n\r\nexport {\r\n    IPipelineLink,\r\n    IPipelineData,\r\n    IPipelineSchema,\r\n    Pipeline,\r\n}","import { Block } from \"kiwi.codegen\";\r\n\r\nimport { Pipeline } from \"../core/Pipeline\";\r\nimport { Extension } from \"../core/Extension\";\r\nimport { IActiveInfo } from \"../res/GProgram\";\r\nimport { CArraybufferTarget, CAttributeTS } from \"../core/Constant\";\r\nimport { IAttributeRecord, GVertexArrayObject } from \"../res/GVertexArrayObject\";\r\n\r\n/**\r\n * \r\n * @param pipeline \r\n * @param iBlock \r\n * @param attribute \r\n * @param record \r\n * @param extLib \r\n */\r\nconst emitBuffer = (\r\n    pipeline: Pipeline,\r\n    iBlock: Block,\r\n    attribute: IActiveInfo,\r\n    record: IAttributeRecord,\r\n    extLib: Extension,\r\n    input0: string\r\n) => {\r\n    const GL_NAME = pipeline.getVariable('gl'),\r\n        ATTRIBUTE_NAME = pipeline.link(attribute),\r\n        BUFFER_NAME = record.ln,\r\n        LOCATION_NAME = iBlock.def(`${ATTRIBUTE_NAME}.location`),\r\n        SIZE_NAME = iBlock.def(`${record.size || CAttributeTS[attribute.info.type]}`),\r\n        BINDING_NAME = iBlock.def(`${pipeline.getVariable('attributeState')}.getAttribute(${attribute.location})`);\r\n    //判断0，如果全局支持的attribute已有buffer,直接绑定并开始绘制\r\n    //判断1，写入buffer\r\n    //写入buffer信息，如果buffer没生成，则binding buffer\r\n    const cond1 = iBlock.createConditionT(`!${BINDING_NAME}.buffer`);\r\n    cond1.Then.push(`${GL_NAME}.enableVertexAttribArray(${LOCATION_NAME})`);\r\n    // iBlock.push(`${GL_NAME}.enableVertexAttribArray(${LOCATION_NAME})`);\r\n    //判断2，如果buffer是prop记录，则实时生成\r\n    if (record.p) {\r\n        const BUFFERSTATE_NAME = pipeline.getVariable('bufferState');\r\n        const ISNDARRAY_NAME = pipeline.getVariable('isNDArray');\r\n        record.dyn = iBlock.def(`${input0}${record.p.KEY}`);\r\n        //2.1 buffer不存在\r\n        const cond3 = iBlock.createConditionTE(`!${BINDING_NAME}.buffer`);\r\n        //2.1-1, dyn是数组, 基于该数组创建buffer\r\n        const cond3_0 = cond3.Then.createConditionTE(`${ISNDARRAY_NAME}(${record.dyn})`);\r\n        cond3_0.Then.push(`${BINDING_NAME}.buffer=${BUFFERSTATE_NAME}.createBuffer({data:${record.dyn},target: 'ARRAY_BUFFER'})`);\r\n        //2.1-1，dyn是reglbuffer\r\n        cond3_0.Else.push(`${BINDING_NAME}.buffer=${record.dyn}`);\r\n        //2.1余下逻辑：正常设置buffer属性\r\n        cond3.Then.push(`${BINDING_NAME}.component=${BINDING_NAME}.buffer.component`);\r\n        cond3.Then.push(`${BINDING_NAME}.size=${SIZE_NAME}`);\r\n        cond3.Then.push(`${BINDING_NAME}.normalized=${record.normalized || false}`);\r\n        cond3.Then.push(`${BINDING_NAME}.offset=${record.offset || 0}`);\r\n        cond3.Then.push(`${BINDING_NAME}.stride=${record.stride || 0}`);\r\n        cond3.Then.push(`${BINDING_NAME}.divisor=${record.divisor || 0}`);\r\n        cond3.Then.push(`${BINDING_NAME}.buffer.bind()`);\r\n        cond3.Then.push(`${GL_NAME}.vertexAttribPointer(${LOCATION_NAME},${BINDING_NAME}.size,${BINDING_NAME}.component, ${BINDING_NAME}.normalized, ${BINDING_NAME}.offset, ${BINDING_NAME}.stride)`);\r\n        //2.2 buffer存在，\r\n        //2.2-1 reocord.p是数组，替换buffer数据\r\n        const cond3_1 = cond3.Else.createConditionTE(`${ISNDARRAY_NAME}(${record.dyn})`);\r\n        cond3_1.Then.push(`${BINDING_NAME}.buffer.subData(${record.dyn})`);\r\n        cond3_1.Else.push(`${BINDING_NAME}.buffer=${record.dyn}`);\r\n        cond3_1.Else.push(`${BINDING_NAME}.buffer.bind()`);\r\n        cond3_1.Else.push(`${GL_NAME}.vertexAttribPointer(${LOCATION_NAME},${BINDING_NAME}.size,${BINDING_NAME}.component, ${BINDING_NAME}.normalized, ${BINDING_NAME}.offset, ${BINDING_NAME}.stride)`);\r\n        // cond3_1.Else.push(`${GL_NAME}.enableVertexAttribArray(${LOCATION_NAME})`);\r\n    } \r\n    //buffer是存在的，只需要应用并赋值\r\n    else {\r\n        //判断2，可行条件下执行buffer赋值操作\r\n        const cond2 = iBlock.createConditionT(`${BINDING_NAME}.component!==${BUFFER_NAME}.component||${BINDING_NAME}.size!==${SIZE_NAME}||${BINDING_NAME}.buffer!==${BUFFER_NAME}||${BINDING_NAME}.normalized!==${record.normalized || false}||${BINDING_NAME}.offset!==${record.offset || 0}||${BINDING_NAME}.stride!==${record.stride || 0}`);\r\n        cond2.Then.push(`${BINDING_NAME}.component=${BUFFER_NAME}.component`);\r\n        cond2.Then.push(`${BINDING_NAME}.size=${SIZE_NAME}`);\r\n        cond2.Then.push(`${BINDING_NAME}.buffer=${BUFFER_NAME}`);\r\n        cond2.Then.push(`${BINDING_NAME}.normalized=${record.normalized || false}`);\r\n        cond2.Then.push(`${BINDING_NAME}.offset=${record.offset || 0}`);\r\n        cond2.Then.push(`${BINDING_NAME}.stride=${record.stride || 0}`);\r\n        cond2.Then.push(`${GL_NAME}.bindBuffer(${CArraybufferTarget['ARRAY_BUFFER']},${BUFFER_NAME}.buffer)`);\r\n        cond2.Then.push(`${GL_NAME}.vertexAttribPointer(${LOCATION_NAME},${BINDING_NAME}.size,${BINDING_NAME}.component, ${BINDING_NAME}.normalized, ${BINDING_NAME}.offset, ${BINDING_NAME}.stride)`);\r\n    }\r\n    //判断3.是否需要实例化绘制（增加angle标记）\r\n    if (extLib.get('ANGLE_instanced_arrays')) {\r\n        const DIVISOR = record.divisor || 0;\r\n        const cond4 = iBlock.createConditionT(`${BINDING_NAME}.divisor!==${DIVISOR}`);\r\n        cond4.Then.push(`${pipeline.getVariable('extLib')}.get('ANGLE_instanced_arrays').vertexAttribDivisorANGLE(${LOCATION_NAME}, ${DIVISOR})`);\r\n        cond4.Then.push(`${BINDING_NAME}.divisor=${DIVISOR}`);\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param pipeline \r\n * @param iBlock \r\n * @param extLib \r\n * @param vao \r\n * @param attributes \r\n * @param attributeRecordSet \r\n */\r\nconst emitAttribute = (\r\n    pipeline: Pipeline,\r\n    iBlock: Block,\r\n    extLib: Extension,\r\n    vao: GVertexArrayObject,\r\n    attributes: IActiveInfo[],\r\n    attributeRecordSet: Map<string, IAttributeRecord>,\r\n    input0: string\r\n): void => {\r\n    //1.判断是否使用VAO\r\n    const cond0 = iBlock.createConditionTE(`${pipeline.getVariable('vao')}`);\r\n    //如果使用则使用VAO，绑定\r\n    cond0.Then.push(`${pipeline.getVariable('attributeState')}.setVAO(${pipeline.getVariable('vao')})`);\r\n    cond0.Then.push(`${pipeline.getVariable('vao')}.bindAttrs()`);\r\n    //如果未使用，则绑定att属性\r\n    cond0.Else.push(`${pipeline.getVariable('attributeState')}.setVAO(null)`);\r\n    //如果不存在VAO绑定，则显式绑定属性\r\n    if (!vao) {\r\n        attributes.forEach((att: IActiveInfo) => {\r\n            const name = att.name;\r\n            const record = attributeRecordSet.get(name);\r\n            emitBuffer(pipeline, iBlock, att, record, extLib, input0);\r\n        })\r\n    }\r\n}\r\n\r\nexport { emitAttribute }","import { Block } from \"kiwi.codegen\";\r\nimport { CComponent } from \"../core/Constant\";\r\nimport { Extension } from \"../core/Extension\";\r\nimport { Pipeline } from \"../core/Pipeline\";\r\nimport { GElementsbuffer } from \"../res/GElementsbuffer\";\r\nimport { GVertexArrayObject } from \"../res/GVertexArrayObject\";\r\n\r\n/**\r\n * \r\n * @param pipeline \r\n * @param extLib \r\n * @param vao \r\n * @param iBlock \r\n * @param element \r\n * @param instances \r\n */\r\nconst emitElement = (\r\n    pipeline: Pipeline,\r\n    extLib: Extension,\r\n    vao: GVertexArrayObject,\r\n    iBlock: Block,\r\n    element: GElementsbuffer,\r\n    instances: number\r\n): void => {\r\n    //1.根据vao是否存在判断直接只用值或使用变量\r\n    const GL_NAME = pipeline.getVariable('gl');\r\n    const COUNT_NAME = !vao ? pipeline.getVariable('count') : vao.Count;\r\n    const PRIMITIVE_NAME = !vao ? pipeline.getVariable('primitive') : vao.Primitive;\r\n    const OFFSET_NAME = !vao ? pipeline.getVariable('offset') : vao.Offset;\r\n    const INSTANCES_NAME = !vao ? pipeline.getVariable('instances') : vao.Instances;\r\n    //2.使用实例化绘制\r\n    if (extLib.get('ANGLE_instanced_arrays') && instances > 0) {\r\n        if (element) {\r\n            const ELEMENT_NAME = iBlock.def(`${pipeline.getVariable('elementState')}.getElementsbuffer(${element.ID})`);\r\n            iBlock.push(`${ELEMENT_NAME}.bind()`);\r\n            iBlock.push(`${pipeline.getVariable('extLib')}.get('ANGLE_instanced_arrays').drawElementsInstancedANGLE(${ELEMENT_NAME}.Primitive, ${ELEMENT_NAME}.VertCount,${ELEMENT_NAME}.Component, ${OFFSET_NAME}<<(${ELEMENT_NAME}.Component - ${CComponent.UNSIGNED_BYTE})>>1, ${INSTANCES_NAME})`);\r\n        }\r\n        else iBlock.push(`${pipeline.getVariable('extLib')}.get('ANGLE_instanced_arrays').drawArraysInstancedANGLE(${PRIMITIVE_NAME}, ${OFFSET_NAME},${COUNT_NAME}, ${INSTANCES_NAME})`);\r\n    }\r\n    //3.drawElement绘制\r\n    else if (element) {\r\n        const ELEMENT_NAME = iBlock.def(`${pipeline.getVariable('elementState')}.getElementsbuffer(${element.ID})`);\r\n        iBlock.push(`${ELEMENT_NAME}.bind()`);\r\n        //字节单位，指定元素数组缓冲区中的偏移量。必须是给定类型大小的有效倍数\r\n        iBlock.push(`${GL_NAME}.drawElements(${ELEMENT_NAME}.Primitive, ${ELEMENT_NAME}.VertCount,${ELEMENT_NAME}.Component, ${OFFSET_NAME}<<(${ELEMENT_NAME}.Component - ${CComponent.UNSIGNED_BYTE})>>1)`);\r\n    }\r\n    //4.直接drawArrays\r\n    else {\r\n        iBlock.push(`${GL_NAME}.drawArrays(${PRIMITIVE_NAME}, ${OFFSET_NAME}, ${COUNT_NAME})`);\r\n    }\r\n    //5.如果绑定过vao，需要在最后取消绑定\r\n    if (vao) iBlock.push(`${pipeline.getVariable('attributeState')}.setVAO(null)`);\r\n    //6.性能计数器更新\r\n    const PERFORMANCE_NAME = pipeline.getVariable('performance');\r\n    iBlock.push(`${PERFORMANCE_NAME}.count++`);\r\n}\r\n\r\nexport { emitElement }","import { Block } from \"kiwi.codegen\";\r\nimport { Pipeline } from \"../core/Pipeline\";\r\nimport { IActiveInfo } from \"../res/GProgram\";\r\nimport { GTexture } from \"../res/GTexture\";\r\nimport { check } from \"../util/check\";\r\nimport { isNDArray } from \"../util/isNDArray\";\r\nimport { IUniformRecord } from \"./parseUniform\";\r\n\r\ninterface IUC {\r\n    prefix: string,\r\n    isMatrix: boolean\r\n}\r\n\r\nconst UComponent = (component: number): IUC => {\r\n    const UTYPE: IUC = {\r\n        prefix: '',\r\n        isMatrix: false\r\n    };\r\n    switch (component) {\r\n        case 5126://float\r\n            UTYPE.prefix = '1f';\r\n            break;\r\n        case 35664://float_vec2\r\n            UTYPE.prefix = '2f';\r\n            break;\r\n        case 35665://float_vec3\r\n            UTYPE.prefix = '3f';\r\n            break;\r\n        case 35666://float_vec4\r\n            UTYPE.prefix = '4f';\r\n            break;\r\n        case 35674://float_mat2\r\n            UTYPE.prefix = 'Matrix2f';\r\n            UTYPE.isMatrix = true;\r\n            break;\r\n        case 35675://float_mat3\r\n            UTYPE.prefix = 'Matrix3f';\r\n            UTYPE.isMatrix = true;\r\n            break;\r\n        case 35676://float_mat4\r\n            UTYPE.prefix = 'Matrix4f';\r\n            UTYPE.isMatrix = true;\r\n            break;\r\n        case 35670://bool\r\n        case 5124://int\r\n            UTYPE.prefix = '1i';\r\n            break;\r\n        case 35671://bool_vec2\r\n        case 35667://int_vec2\r\n            UTYPE.prefix = '2i';\r\n            break;\r\n        case 35672://bool_vec3\r\n        case 35668://int_vec3\r\n            UTYPE.prefix = '3i';\r\n            break;\r\n        case 35673://bool_vec4\r\n        case 35669://int_vec4\r\n            UTYPE.prefix = '4i';\r\n            break;\r\n        case 35678://texture_sample_2d\r\n        case 35680://0x8B60\r\n            UTYPE.prefix = '1i';\r\n            break;\r\n        default:\r\n            check(false, `emitUniforms error:不支持的uniform类型${component}`);\r\n    }\r\n    return UTYPE;\r\n}\r\n\r\n/**\r\n * \r\n * @param pipeline \r\n * @param iBlock \r\n * @param oBlock \r\n * @param uniforms \r\n * @param uniformRecordSet \r\n * @param input0 \r\n */\r\nconst emitUniform = (\r\n    pipeline: Pipeline,\r\n    iBlock: Block,\r\n    oBlock: Block,\r\n    uniforms: IActiveInfo[],\r\n    uniformRecordSet: Map<string, IUniformRecord>,\r\n    input0: string\r\n): void => {\r\n    const GL_NAME = pipeline.getVariable('gl');\r\n    const PERFORMANCE_NAME = pipeline.getVariable('performance');\r\n    const ISNDARRAY_NAME = pipeline.getVariable('isNDArray');\r\n    const ISNUMBER_NAME = pipeline.getVariable('isNumber');\r\n    const ISTEXTURE_NAME = pipeline.getVariable('isTexture');\r\n    uniforms?.forEach((u: IActiveInfo) => {\r\n        const name = u.name;\r\n        const component = u.info.type;\r\n        const size = u.info.size;\r\n        const record = uniformRecordSet.get(name);\r\n        check(record, `emitUniform error:应用unifrom错误，${name}和TAttribute定义不一致，请检查`);\r\n        //当uniform是数组时，例如uniform[0]\r\n        if (size > 1) {\r\n            //debug 待处理\r\n        }\r\n        //加入link大军\r\n        record.ln = pipeline.link(u);\r\n        const { prefix, isMatrix } = UComponent(component);\r\n        //获取后缀，处理静态值\r\n        if (record.v) {\r\n            if (record.v instanceof GTexture) {\r\n                //bind regltexture\r\n                record.dn = pipeline.link(record.v);\r\n                iBlock.push(`${GL_NAME}.uniform${prefix}(${record.ln}.location, ${record.dn}.bind())`);\r\n                //末尾销毁\r\n                oBlock.push(`${record.dn}.unbind()`);\r\n            }\r\n            else {\r\n                const sufix = isNDArray(record.v) ? `${prefix}v` : prefix;\r\n                record.dn = iBlock.def(record.v);\r\n                iBlock.push(`${GL_NAME}.uniform${sufix}(${record.ln}.location, ${isMatrix ? 'false,' : ''}${record.dn})`);\r\n            }\r\n        }\r\n        //获取后缀，动态处理FN\r\n        else if (record.f) {\r\n            record.dn = pipeline.link(record.f);\r\n            //获取处理器时间\r\n            record.dyn = iBlock.def(`${record.dn}.call(this, ${PERFORMANCE_NAME},${pipeline.BatchID})`);\r\n            //根据函数返回值累心动态构造uniform方法\r\n            //情况1，传递静态数组如[9,1,2,3], 使用uniformXXXv\r\n            const cond0 = iBlock.createConditionT(`${ISNDARRAY_NAME}(${record.dyn})`);\r\n            cond0.Then.push(`${GL_NAME}.uniform${prefix}v(${record.ln}.location, ${isMatrix ? 'false,' : ''}${record.dyn})`);\r\n            //情况2，传递标量，使用uniformXXX\r\n            const cond1 = iBlock.createConditionT(`${ISNUMBER_NAME}(${record.dyn})`);\r\n            cond1.Then.push(`${GL_NAME}.uniform${prefix}(${record.ln}.location, ${isMatrix ? 'false,' : ''}${record.dyn})`);\r\n            //情况3，传递texture （sampler2d)\r\n            const cond2 = iBlock.createConditionT(`${ISTEXTURE_NAME}(${record.dyn})`);\r\n            cond2.Then.push(`${GL_NAME}.uniform${prefix}(${record.ln}.location, ${record.dyn}.bind())`);\r\n            //末尾取消绑定\r\n            const cond2_0 = oBlock.createConditionT(`${ISTEXTURE_NAME}(${record.dyn})`);\r\n            cond2_0.Then.push(`${record.dyn}.unbind()`);\r\n        }\r\n        //处理property\r\n        else if (record.p) {\r\n            //指定使用入参p0作为读取Prop.KEY的内容\r\n            record.dyn = iBlock.def(`${input0}${record.p.KEY}`);\r\n            //1.如果是纹理\r\n            const cond1 = iBlock.createConditionTE(`${ISTEXTURE_NAME}(${record.dyn})`);\r\n            cond1.Then.push(`${GL_NAME}.uniform${prefix}(${record.ln}.location, ${record.dyn}.bind())`);\r\n            //末尾销毁\r\n            const cond11 = oBlock.createConditionT(`${ISTEXTURE_NAME}(${record.dyn})`);\r\n            cond11.Then.push(`${record.dyn}.unbind()`);\r\n            //2.不是纹理，则应该是数字或者其他\r\n            const cond12 = cond1.Else.createConditionTE(`${ISNDARRAY_NAME}(${record.dyn})`);\r\n            cond12.Then.push(`${GL_NAME}.uniform${prefix}v(${record.ln}.location, ${isMatrix ? 'false,' : ''}${record.dyn})`);\r\n            cond12.Else.push(`${GL_NAME}.uniform${prefix}(${record.ln}.location, ${isMatrix ? 'false,' : ''}${record.dyn})`);\r\n        }\r\n    });\r\n}\r\n\r\nexport { emitUniform }","import { Block } from \"kiwi.codegen\";\r\nimport { Extension } from \"../core/Extension\";\r\nimport { IPipelineData, Pipeline } from \"../core/Pipeline\";\r\nimport { emitAttribute } from \"./emitAttribute\";\r\nimport { emitElement } from \"./emitElement\";\r\nimport { emitFramebuffer } from \"./emitFramebuffer\";\r\nimport { emitUniform } from \"./emitUniform\";\r\n\r\n/**\r\n * \r\n * @param pipeline \r\n * @param batchBlock \r\n * @param pipelineData \r\n * @param extLib \r\n * @param instances \r\n */\r\nconst emitBatch = (\r\n    pipeline: Pipeline,\r\n    batchBlock: Block,\r\n    pipelineData: IPipelineData,\r\n    extLib: Extension,\r\n    instances: number\r\n) => {\r\n    const LOOP_NAME = batchBlock.def(0);\r\n    const P0_NAME = `p0[${LOOP_NAME}]`;\r\n    //创建for循环体\r\n    batchBlock.push(`for(${LOOP_NAME};${LOOP_NAME}<p0.length;++${LOOP_NAME}){`);\r\n    const scope0 = batchBlock.createScope(), iBlock = scope0.Entry, oBlock = scope0.Exit;\r\n    //2.处理attribute\r\n    emitAttribute(pipeline, iBlock, extLib, pipelineData.vao, pipelineData.program.Attributes, pipelineData.attributeRecordSet,P0_NAME);\r\n    //2.处理uniform\r\n    emitUniform(pipeline, iBlock, oBlock, pipelineData.program.Uniforms, pipelineData.uniformRecordSet, P0_NAME);\r\n    //3.batch draw\r\n    emitElement(pipeline, extLib, pipelineData.vao, iBlock, pipelineData.element, instances);\r\n    //4.循环体结束\r\n    batchBlock.push(`}`);\r\n}\r\n\r\nexport { emitBatch }","import { Block } from \"kiwi.codegen\";\r\nimport { Extension } from \"../core/Extension\";\r\nimport { Pipeline } from \"../core/Pipeline\";\r\nimport { GFramebuffer } from \"../res/GFramebuffer\";\r\nimport { IPerformance } from \"../util/createPerformance\";\r\nimport { IFramebufferInfo, IFramebufferSetting } from \"./parseFramebuffer\";\r\n\r\n/**\r\n * \r\n * @param pipeline \r\n * @param iBlock \r\n * @param oBlock \r\n * @param framebuffer \r\n * @param extLib \r\n */\r\nconst emitFramebuffer = (\r\n    pipeline: Pipeline,\r\n    iBlock: Block,\r\n    oBlock: Block,\r\n    framebuffer: IFramebufferInfo,\r\n    extLib: Extension\r\n): void => {\r\n    const GL_NAME = pipeline.getVariable('gl'),\r\n        FRAMEBUFFERSTATE_NAME = pipeline.getVariable('framebufferState'),\r\n        EXT_DRAWBUFFERS_NAME = extLib.get('WEBGL_draw_buffers') ? pipeline.def(`${pipeline.getVariable('extLib')}.get('WEBGL_draw_buffers')`) : null,\r\n        NEXT_NAME = `${FRAMEBUFFERSTATE_NAME}.Next`,\r\n        CURRENT_NAME = `${FRAMEBUFFERSTATE_NAME}.Current`;\r\n    //如果fbo存在，则使用fbo\r\n    if (framebuffer && framebuffer.framebuffer instanceof GFramebuffer) {\r\n        const FRAMEBUFFER_NAME = pipeline.link(framebuffer.framebuffer);\r\n        const NEXT_FRAMEBUFFER_CACHED_NAME = iBlock.def(`${NEXT_NAME}`);\r\n        iBlock.push(`${NEXT_NAME}=${FRAMEBUFFER_NAME}`);\r\n        oBlock.push(`${NEXT_NAME}=${NEXT_FRAMEBUFFER_CACHED_NAME}`);\r\n        //判断当前framebuffer是否和framebufferState.Current一样\r\n        const cond0 = iBlock.createConditionT(`${FRAMEBUFFER_NAME}!==${CURRENT_NAME}`);\r\n        const cond0_1 = cond0.Then.createConditionTE(`${FRAMEBUFFER_NAME}`);\r\n        cond0_1.Then.push(`${FRAMEBUFFER_NAME}.bind()`);\r\n\r\n        if (EXT_DRAWBUFFERS_NAME) cond0_1.Then.push(`${EXT_DRAWBUFFERS_NAME}.drawBuffersWEBGL(${FRAMEBUFFER_NAME}.ColorDrawbuffers)`);\r\n        cond0_1.Else.push(`${GL_NAME}.bindFramebuffer(${GL_NAME}.FRAMEBUFFER, null)`);\r\n\r\n        iBlock.push(`${FRAMEBUFFERSTATE_NAME}.Current=${NEXT_NAME}`);\r\n    }\r\n    //动态framebuffer\r\n    else if (framebuffer && framebuffer.framebuffer) {\r\n        const FN_NAME = pipeline.link(framebuffer.framebuffer as { (performance: IPerformance, batchId: number): GFramebuffer });\r\n        const FRAMEBUFFER_NAME = iBlock.def(`${FN_NAME}.call(this, ${pipeline.getVariable('performance')}, ${pipeline.BatchID})`);\r\n        //缓冲当前next fbo, 执行尾部填回\r\n        const NEXT_FRAMEBUFFER_CACHED_NAME = iBlock.def(`${FRAMEBUFFERSTATE_NAME}.Next`);\r\n        oBlock.push(`${FRAMEBUFFERSTATE_NAME}.Next=${NEXT_FRAMEBUFFER_CACHED_NAME}`);\r\n        //\r\n        iBlock.push(`${FRAMEBUFFERSTATE_NAME}.Next=${NEXT_FRAMEBUFFER_CACHED_NAME}`);\r\n        const cond0 = iBlock.createConditionT(`${FRAMEBUFFER_NAME}&&${NEXT_NAME}!==${FRAMEBUFFERSTATE_NAME}.Current`);\r\n        const cond0_1 = cond0.Then.createConditionTE(`${FRAMEBUFFER_NAME}`);\r\n        cond0_1.Then.push(`${FRAMEBUFFER_NAME}.bind()`);\r\n        //\r\n        if (EXT_DRAWBUFFERS_NAME) cond0_1.Then.push(`${EXT_DRAWBUFFERS_NAME}.drawBuffersWEBGL(${FRAMEBUFFER_NAME}.ColorDrawbuffers)`);\r\n        cond0_1.Else.push(`${GL_NAME}.bindFramebuffer(${GL_NAME}.FRAMEBUFFER, null)`);\r\n        //\r\n        iBlock.push(`${FRAMEBUFFERSTATE_NAME}.Current=${NEXT_NAME}`);\r\n    }\r\n    //framebuffer不存在， 但是current包含值，需要清理framebuffer\r\n    else {\r\n        const cond0 = iBlock.createConditionT(`${CURRENT_NAME}!==null`);\r\n        cond0.Then.push(`${GL_NAME}.bindFramebuffer(${GL_NAME}.FRAMEBUFFER, null)`);\r\n        cond0.Then.push(`${CURRENT_NAME}=null`);\r\n    }\r\n    //framebuffer into 其他设置\r\n    if (framebuffer && framebuffer.color)\r\n        iBlock.push(`${GL_NAME}.clearColor(${framebuffer.color})`);\r\n    if (framebuffer && framebuffer.clearBit)\r\n        iBlock.push(`${GL_NAME}.clear(${framebuffer.clearBit})`);\r\n}\r\n\r\nexport { emitFramebuffer }","import { Block } from \"kiwi.codegen\";\r\nimport { IPipelineData, Pipeline } from \"../core/Pipeline\";\r\n\r\n/**\r\n * 通过pipeline注入program/current切换program\r\n * @param pipeline \r\n * @param iBlock \r\n * @param pipelineData \r\n */\r\nconst emitProgram = (\r\n    pipeline: Pipeline,\r\n    iBlock: Block,\r\n    pipelineData: IPipelineData\r\n) => {\r\n    const PROGRAMSTATE_NAME = pipeline.getVariable('programState');\r\n    //判断program是否需要切换\r\n    //优化点：program切换是比较耗性能的操作\r\n    const cond = iBlock.createConditionT(`!${PROGRAMSTATE_NAME}.Current||${PROGRAMSTATE_NAME}.Current.ID!==${pipelineData.program.ID}`);\r\n    cond.Then.push(`${PROGRAMSTATE_NAME}.useProgram(${pipelineData.program.ID})`);\r\n}\r\n\r\nexport { emitProgram }","import { Block } from \"kiwi.codegen\";\r\nimport { Pipeline } from \"../core/Pipeline\";\r\nimport { Status } from \"../core/Status\";\r\nimport { SWebGLStatusFLAG, SWebGLStatusVariable } from \"../core/Support\";\r\n\r\n/**\r\n * 检查webgl状态是否一致\r\n * 如不一致则更新\r\n * @param pipeline \r\n * @param iBlock \r\n * @param status \r\n */\r\nconst emitStatus = (pipeline: Pipeline, iBlock: Block, status: Status) => {\r\n    if (status) {\r\n        const STATUS_NAME = pipeline.link(status);\r\n        status.StatusList.forEach((v: SWebGLStatusFLAG | SWebGLStatusVariable) => {\r\n            const cond = iBlock.createConditionT(`${STATUS_NAME}.needRefresh('${v}')`);\r\n            cond.Then.push(`${STATUS_NAME}.refresh('${v}')`);\r\n        });\r\n    }\r\n}\r\n\r\nexport { emitStatus }","import { GBuffer } from \"../res/GBuffer\";\r\nimport { GTexture } from \"../res/GTexture\";\r\n\r\n/**\r\n * prop对象抽象类型\r\n */\r\ntype TProps = {\r\n    /**\r\n     * 指代vec2/vec3/mat等\r\n     */\r\n    [propName in string]: number | number[] | number[][] | GBuffer | GTexture\r\n}\r\n\r\n/**\r\n * @author axmand\r\n * @example\r\n * interface IPorps extends TProps{\r\n *      offset:number[]\r\n * }\r\n * // offset 作为IProps属性列中一个，指定后续使用该属性列如何取batch中输入的类型\r\n * const prop = new Porps<IPorps, 'offset'>('offset');\r\n * //指示使用\r\n * prop.KEY作为读取batch内数据的索引属性\r\n */\r\nclass Props<T extends TProps>{\r\n    /**\r\n     * 存储 prop 索引属性\r\n     */\r\n    private key: string;\r\n\r\n    /**\r\n     * 公开索引，使用时例如 p0[0]['offset']获取batchDraw内的offeset值\r\n     */\r\n    get KEY(): string {\r\n        return this.key;\r\n    }\r\n\r\n    constructor(key: keyof { [key in keyof T]: string }) {\r\n        this.key = `['${key}']`;\r\n    }\r\n}\r\n\r\nexport {\r\n    TProps,\r\n    Props\r\n}","import { check } from \"./check\";\r\nimport { isNDArray } from \"./isNDArray\";\r\nimport { IAttributeBuffer } from \"../compiler/parseAttribute\";\r\nimport { Props } from \"..\";\r\n\r\n/**\r\n * \r\n * @param v \r\n */\r\nconst checkAttribute = (v: any) => {\r\n    let checkResult = false;\r\n    if (isNDArray(v))\r\n        checkResult = true;\r\n    if ((v as IAttributeBuffer).buffer)\r\n        checkResult = true;\r\n    if(v instanceof Props)\r\n        checkResult = true;\r\n    check(checkResult, `不支持的attribute类型，当前仅支持number[], number[][], number[][][], Props<T>, IAttributeBuffer类型`);\r\n}\r\n\r\nexport { checkAttribute }","/**\r\n * 判断是否为类型数组\r\n * @example\r\n * const r1 = isTypedArray(new Float32Array()) //true\r\n * const r2 = isTypedArray([1,2]) //false\r\n * @param v \r\n * @returns \r\n */\r\nconst isTypedArray = (v: any): boolean => {\r\n    return v instanceof Uint8Array || v instanceof Uint16Array || v instanceof Uint32Array || v instanceof Int8Array || v instanceof Int16Array || v instanceof Int32Array || v instanceof Float32Array || v instanceof Float64Array || v instanceof Uint8ClampedArray;\r\n}\r\n\r\nexport { isTypedArray }","import { isNDArray } from \"./isNDArray\";\r\nimport { isTypedArray } from \"./isTypedArray\";\r\n\r\n/**\r\n * 判断是否为缓冲对象（或可转换为缓冲对象）\r\n * @param v \r\n * @returns \r\n */\r\nconst isBufferArray = (v: any) => {\r\n    return Array.isArray(v) || isTypedArray(v) || isNDArray(v);\r\n}\r\n\r\nexport { isBufferArray }","import { CComponent } from \"../core/Constant\";\r\nimport { Extension } from \"../core/Extension\";\r\nimport { ShapedArrayFormat } from \"../core/Format\";\r\nimport { Pipeline } from \"../core/Pipeline\";\r\nimport { Props, TProps } from \"../core/Props\";\r\nimport { SComponent } from \"../core/Support\";\r\nimport { GBuffer } from \"../res/GBuffer\";\r\nimport { IAttributeRecord } from \"../res/GVertexArrayObject\";\r\nimport { BufferState } from \"../state/BufferState\";\r\nimport { check } from \"../util/check\";\r\nimport { checkAttribute } from \"../util/checkAttribute\";\r\nimport { isBufferArray } from \"../util/isBufferArray\";\r\n\r\n/**\r\n * \r\n */\r\ninterface IAttributeBuffer {\r\n    /**\r\n     * 数组对象（缓冲）\r\n     */\r\n    buffer: GBuffer | ShapedArrayFormat;\r\n\r\n    /**\r\n     * 顶点属性偏移量，按byte位偏移\r\n     */\r\n    offset?: number;\r\n\r\n    /**\r\n     * 扫描线跳跃byte位\r\n     */\r\n    stride?: number;\r\n\r\n    /**\r\n     * 实例化绘制时指定通用听顶一次绘制几次\r\n     */\r\n    divisor?: number;\r\n\r\n    /**\r\n     * 每个点size，例如Vec3的size为3, vec2的size为2\r\n     */\r\n    size?: number;\r\n\r\n    /**\r\n     * 输入数据是否已归一化\r\n     */\r\n    normalized?: boolean;\r\n\r\n    /**\r\n     * 输入数据类型，如BYTE/FLOAT等\r\n     */\r\n    component?: SComponent;\r\n}\r\n\r\n/**\r\n * 限定attribute接口约定类型范围\r\n */\r\ntype TAttribute = {\r\n    [propName in string | number]: ShapedArrayFormat | IAttributeBuffer | Props<TProps>;\r\n}\r\n\r\n/**\r\n * @description\r\n * 解析输入的attribute类型得到record, 需要注意：\r\n * -解析得到的reglbuffer作为资源Link到当前pipeline中\r\n * -record解析只记录link后的名称, 不记录buffer资源\r\n * -draw操作时根据buffer资源存在与否，对record资源赋值\r\n * \r\n * @example\r\n * const recordSet = parseAttributeRecord();\r\n * \r\n * @param opts \r\n * @returns \r\n */\r\nconst parseAttribute = <TA extends TAttribute>(\r\n    opts: {\r\n        pipeline: Pipeline,\r\n        attributes: TA,\r\n        extLib: Extension,\r\n        bufferState: BufferState\r\n    }\r\n): Map<string, IAttributeRecord> => {\r\n    const { pipeline, attributes, extLib, bufferState } = opts;\r\n    const RECORD_SET: Map<string, IAttributeRecord> = new Map();\r\n    Object.keys(attributes)?.forEach((key: string) => {\r\n        const v = attributes[key];\r\n        checkAttribute(v);\r\n        const record: IAttributeRecord = { name: key };\r\n        /**\r\n         * @description 数组处理\r\n         * @example\r\n         * \r\n         * attributes:{\r\n         *      color:{\r\n         *          constant: [1, 0, 1, 1]\r\n         *      }\r\n         * }\r\n         * \r\n         */\r\n        if (isBufferArray(v)) {\r\n            const v0: ShapedArrayFormat = v as ShapedArrayFormat;\r\n            const buf = bufferState.createBuffer({\r\n                data: v0,\r\n                target: 'ARRAY_BUFFER'\r\n            });\r\n            //buffer需要绑定是因为buf直接被vao使用，不需要初始化与各program重复绑定\r\n            record.buffer = buf;\r\n            record.component = buf.Component;\r\n            record.divisor = 0;\r\n            record.offset = 0;\r\n            record.stride = 0;\r\n            record.normalized = false;\r\n            record.ln = pipeline.link(buf);\r\n        }\r\n        /**\r\n         * 处理带其他属性的attribute\r\n         * @example\r\n         * attributes:{\r\n         *  normals:{\r\n         *      buffer:new REGLBuffer(),\r\n         *      offset:0,\r\n         *      stride:12,\r\n         *      normalized:false,\r\n         *      divisor:0 \r\n         *  }\r\n         * }\r\n         */\r\n        else if ((v as IAttributeBuffer).buffer) {\r\n            const v0 = v as IAttributeBuffer;\r\n            const buf = isBufferArray(v0.buffer) ? bufferState.createBuffer({\r\n                data: v0.buffer as ShapedArrayFormat,\r\n                target: 'ARRAY_BUFFER',\r\n            }) : v0.buffer as GBuffer;\r\n            //record属性设置\r\n            record.offset = v0.offset | 0;\r\n            check(record.offset >= 0, `offset只能是大于等于0的数字`);\r\n            record.stride = v0.stride | 0;\r\n            check(record.stride >= 0 && record.stride < 256, `扫描线宽取值范围必须[0,255]`);\r\n            record.normalized = !!v0.normalized;\r\n            record.component = CComponent[v0.component] || buf.Component;\r\n            check(Object.values(CComponent).indexOf(record.component) !== -1, `数据类型只能是${Object.values(CComponent)}`);\r\n            check(v0.divisor === 0 || extLib.get('ANGLE_instanced_arrays'), `不支持ANGLE_instanced_arrays插件，不能设置实例化参数divisor`);\r\n            check(v0.divisor >= 0, `不支持的divisor值`);\r\n            record.divisor = v0.divisor || 0;\r\n            //record buffer属性\r\n            record.buffer = buf;\r\n            record.component = buf.Component;\r\n            record.ln = pipeline.link(buf);\r\n        }\r\n        /**\r\n         * 动态属性，如\r\n         * attrbutes:{\r\n         *    position:Props<IProp>\r\n         * }\r\n         */\r\n        else if(v instanceof Props){\r\n            record.p = v;\r\n            record.offset = 0;\r\n            record.stride = 0;\r\n            record.normalized = false;\r\n            record.component = CComponent['FLOAT'];\r\n            record.divisor === 0;\r\n        }\r\n        RECORD_SET.set(record.name, record);\r\n    });\r\n    return RECORD_SET;\r\n}\r\n\r\nexport {\r\n    IAttributeBuffer,\r\n    TAttribute,\r\n    parseAttribute\r\n}","import { ShapedArrayFormat } from \"../core/Format\";\r\nimport { SPrimitive } from \"../core/Support\";\r\nimport { GElementsbuffer } from \"../res/GElementsbuffer\";\r\nimport { ElementsState } from \"../state/ElementState\";\r\nimport { isNDArray } from \"../util/isNDArray\";\r\n\r\n/**\r\n * @description\r\n * 处理 element，生成elementbuffer\r\n * @param opts \r\n * @returns \r\n */\r\nconst praseElements = (\r\n    opts: {\r\n        elements?: ShapedArrayFormat,\r\n        elementState?: ElementsState,\r\n        primitive?: SPrimitive\r\n    }\r\n): GElementsbuffer | null => {\r\n    const { elements, elementState } = opts;\r\n    //}{先处理shapedArrayformt时数据\r\n    if (elements && isNDArray(elements)) {\r\n        return elementState.createElementsbuffer({\r\n            data: elements,\r\n            component: 'UNSIGNED_SHORT',\r\n            primitive: opts.primitive || 'TRIANGLES'\r\n        });\r\n    }\r\n}\r\n\r\nexport { praseElements }","import { GFramebuffer, IPerformance } from \"..\";\r\nimport { check } from \"../util/check\";\r\n\r\n/**\r\n * Framebuffer对象参数设置\r\n */\r\ninterface IFramebufferSetting {\r\n    /**\r\n     * 核心framebuffer对象\r\n     */\r\n    framebuffer: GFramebuffer | { (performance: IPerformance, batchId: number): GFramebuffer };\r\n\r\n    /**\r\n     * framebuffer清理策略\r\n     */\r\n    clear?: {\r\n        color?: number[]; //RGBA四元素组\r\n        depth?: boolean;\r\n        stencil?: boolean;\r\n    }\r\n}\r\n\r\ninterface IFramebufferInfo {\r\n    /**\r\n     * \r\n     */\r\n    framebuffer?: GFramebuffer | { (performance: IPerformance, batchId: number): GFramebuffer }\r\n\r\n    /**\r\n     * \r\n     */\r\n    color?: number[];\r\n\r\n    /**\r\n     * \r\n     */\r\n    clearBit?: number;\r\n}\r\n\r\n/**\r\n * \r\n * @param opts \r\n * @returns \r\n */\r\nconst parseFramebuffer = (\r\n    opts: {\r\n        gl: WebGLRenderingContext;\r\n        framebuffer?: IFramebufferSetting\r\n    }\r\n): IFramebufferInfo => {\r\n    if (!opts.framebuffer) return null;\r\n    const fb = opts.framebuffer, gl = opts.gl;\r\n    //check(fb.framebuffer.ColorAttachments.length === fb.framebuffer.ColorDrawbuffers.length, `parseFamebuffer Error: color attachments num and color drawbuffers num must be the same!`);\r\n    const response: IFramebufferInfo = {};\r\n    response.framebuffer = opts.framebuffer.framebuffer;\r\n    const bit: number = gl.COLOR_BUFFER_BIT;\r\n    //解析clear设置\r\n    if (fb.clear && fb.clear.color) {\r\n        const color = fb.clear.color;\r\n        check(color.length === 4, `Error: clear color must consist of 4`);\r\n        response.color = color;\r\n        response.clearBit = bit;\r\n    }\r\n    if (fb.clear && fb.clear.depth)\r\n        response.clearBit = (response.clearBit || bit) | gl.DEPTH_BUFFER_BIT;\r\n    if (fb.clear && fb.clear.stencil)\r\n        response.clearBit = (response.clearBit || bit) | gl.STENCIL_BUFFER_BIT;\r\n    return response;\r\n}\r\n\r\nexport {\r\n    IFramebufferSetting,\r\n    IFramebufferInfo,\r\n    parseFramebuffer\r\n}","import { GProgram } from \"../res/GProgram\";\r\nimport { GShader } from \"../res/GShader\";\r\nimport { ProgramState } from \"../state/ProgramState\";\r\nimport { ShaderState } from \"../state/ShaderState\";\r\nimport { StringState } from \"../state/StringState\";\r\n\r\n/**\r\n * create REGLProgram\r\n * @param opts \r\n * @param locations \r\n * @returns \r\n */\r\nconst parseProgram = (\r\n    opts: {\r\n        frag: string,\r\n        vert: string,\r\n        stringState: StringState,\r\n        shaderState: ShaderState,\r\n        programState: ProgramState\r\n    },\r\n    locations: string[]\r\n): {\r\n    fragId?: number,\r\n    vertId?: number,\r\n    fragShader?: GShader,\r\n    vertShader?: GShader,\r\n    program?: GProgram\r\n} => {\r\n\r\n    const { frag, vert, stringState, shaderState, programState } = opts;\r\n    const fragId = stringState.id(frag), fragShader = shaderState.createShader('FRAGMENT_SHADER', fragId);\r\n    const vertId = stringState.id(vert), vertShader = shaderState.createShader('VERTEX_SHADER', vertId);\r\n    const program = programState.createProgram(frag, vert, locations);\r\n    return {\r\n        fragId,\r\n        vertId,\r\n        fragShader,\r\n        vertShader,\r\n        program\r\n    }\r\n}\r\n\r\nexport {\r\n    parseProgram\r\n}","import { check } from \"./../util/check\";\r\nimport { CWebGLStatusFLAG, CWebGLStatusVariable } from \"./Constant\";\r\nimport { SWebGLStatusFLAG, SWebGLStatusVariable } from \"./Support\";\r\n\r\n/**\r\n * @author axmand\r\n * @description WebGL状态管理器\r\n */\r\nclass Status {\r\n    /**\r\n     * \r\n     */\r\n    private static CURRENT_FLAG_SET: Map<SWebGLStatusFLAG, boolean> = new Map();\r\n\r\n    /**\r\n     * \r\n     */\r\n    private static CURRENT_VARIABLE_SET: Map<SWebGLStatusVariable, any[]> = new Map();\r\n\r\n    /**\r\n     * \r\n     */\r\n    public NEXT_FLAG_SET: Map<SWebGLStatusFLAG, boolean> = new Map();\r\n\r\n    /**\r\n     * \r\n     */\r\n    public NEXT_VARIABLE_SET: Map<SWebGLStatusVariable, any[]> = new Map();\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * 记录需要变更的webgl状态集\r\n     */\r\n    private statusList: (SWebGLStatusVariable | SWebGLStatusFLAG)[] = [];\r\n\r\n    /**\r\n    *  webgl状态集\r\n    */\r\n    get StatusList(): (SWebGLStatusVariable | SWebGLStatusFLAG)[] {\r\n        return this.statusList;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     */\r\n    constructor(gl: WebGLRenderingContext) {\r\n        this.gl = gl;\r\n        //默认\r\n        //1.dither\r\n        this.setFlag('DITHER', false);\r\n        //2.blending\r\n        this.setFlag('BLEND', false);\r\n        this.setVariable('blendColor', [0, 0, 0, 0]);\r\n        // this.setVariable('blendFunc', [gl.SRC_COLOR, gl.DST_COLOR]);\r\n        this.setVariable('blendEquationSeparate', [gl.FUNC_ADD, gl.FUNC_ADD]);\r\n        this.setVariable('blendFuncSeparate', [gl.ONE, gl.ZERO, gl.ONE, gl.ZERO]);\r\n        //3.depth\r\n        this.setFlag('DEPTH_TEST', true);\r\n        this.setVariable('depthFunc', [gl.LESS]);\r\n        this.setVariable('depthRange', [0, 1]);\r\n        this.setVariable('depthMask', [true]);\r\n        //4.color mask\r\n        this.setVariable('colorMask', [true, true, true, true]);\r\n        //5.cull face\r\n        this.setFlag('CULL_FACE', false);\r\n        this.setVariable('cullFace', [gl.BACK]);\r\n        this.setVariable('frontFace', [gl.CCW]);\r\n        //6.line width\r\n        this.setVariable('lineWidth', [1]);\r\n        //7.polygon offset\r\n        this.setFlag('POLYGON_OFFSET_FILL', false);\r\n        this.setVariable('polygonOffset', [0, 0]);\r\n        //8.sample coverage\r\n        this.setFlag('SAMPLE_ALPHA_TO_COVERAGE', false);\r\n        this.setFlag('SAMPLE_COVERAGE', false);\r\n        this.setVariable('sampleCoverage', [1, false]);\r\n        //9.stencil\r\n        this.setFlag('STENCIL_TEST', false);\r\n        this.setVariable('stencilMask', [-1]);\r\n        this.setVariable('stencilOpSeparate', [gl.FRONT, gl.KEEP, gl.KEEP, gl.KEEP]);\r\n        //}{debug stencilOpSeparate方法是否需要重设两次\r\n        // this.setVariable('stencilOpSeparate', [gl.BACK, gl.KEEP, gl.KEEP, gl.KEEP]);\r\n        //10.scissor\r\n        this.setFlag('SCISSOR_TEST', false);\r\n        this.setVariable('scissor', [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]);\r\n        this.setVariable('viewport', [0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight]);\r\n    }\r\n\r\n    /**\r\n     * 判断是否需要更新状态（在每个pipeline中，WebGL状态独立判断）\r\n     * @param key \r\n     * @returns \r\n     */\r\n    public needRefresh = (key: SWebGLStatusFLAG | SWebGLStatusVariable): boolean => {\r\n        if (CWebGLStatusFLAG[key]) {\r\n            const k = key as SWebGLStatusFLAG;\r\n            const cur = Status.CURRENT_FLAG_SET.get(k);\r\n            const next = this.NEXT_FLAG_SET.get(k);\r\n            return cur != next;\r\n        }\r\n        else if (CWebGLStatusVariable[key]) {\r\n            const k = key as SWebGLStatusVariable;\r\n            const cur = Status.CURRENT_VARIABLE_SET.get(k);\r\n            const next = this.NEXT_VARIABLE_SET.get(k);\r\n            if (!cur) return true;\r\n            else if (cur.length !== next.length) return true\r\n            else return cur.join() !== next.join();\r\n        }\r\n        else check(false, `Status 错误: 不支持的webgl状态${key}修改，请检查状态是否合法`);\r\n    }\r\n\r\n    /**\r\n     * 更新状态\r\n     * @param key\r\n     */\r\n    public refresh = (key: SWebGLStatusVariable | SWebGLStatusFLAG) => {\r\n        const gl = this.gl;\r\n        if (CWebGLStatusFLAG[key]) {\r\n            const k = key as SWebGLStatusFLAG;\r\n            const v = this.NEXT_FLAG_SET.get(k);\r\n            v ? gl.enable(gl[k]) : gl.disable(gl[k]);\r\n            Status.CURRENT_FLAG_SET.set(k, v);\r\n        }\r\n        else if (CWebGLStatusVariable[key]) {\r\n            const k = key as SWebGLStatusVariable;\r\n            const v = this.NEXT_VARIABLE_SET.get(k);\r\n            gl[k as unknown as string].apply(gl, v);\r\n            Status.CURRENT_VARIABLE_SET.set(k, v);\r\n        }\r\n        else check(false, `Status 错误: 不支持的webgl状态${key}修改，请检查状态是否合法`);\r\n    }\r\n\r\n    /**\r\n     * 记录flag型\r\n     * @param key \r\n     * @param v \r\n     */\r\n    public setFlag = (key: SWebGLStatusFLAG, v: boolean): void => {\r\n        this.NEXT_FLAG_SET.set(key, v);\r\n        this.statusList.push(key);\r\n    }\r\n\r\n    /**\r\n     * 记录变量型\r\n     * @param key \r\n     * @param v \r\n     */\r\n    public setVariable = (key: SWebGLStatusVariable, v: any[]): void => {\r\n        this.NEXT_VARIABLE_SET.set(key, v.slice());\r\n        this.statusList.push(key);\r\n    }\r\n\r\n}\r\n\r\nexport { Status }","import { check } from \"../util/check\";\r\nimport { Status } from \"../core/Status\";\r\nimport { CWebGLStatusFLAG, CWebGLStatusVariable } from \"../core/Constant\";\r\nimport { SWebGLStatus, SWebGLStatusFLAG, SWebGLStatusVariable } from \"../core/Support\";\r\n\r\n/**\r\n * 计数webgl状态更新\r\n * @param opts \r\n * @returns \r\n */\r\nconst parseStatus = (\r\n    opts: {\r\n        gl: WebGLRenderingContext,\r\n        status?: SWebGLStatus\r\n    }\r\n): Status => {\r\n    const { gl, status } = opts;\r\n    const s0 = new Status(gl);\r\n    Object.keys(status)?.forEach((key) => {\r\n        const v = status[key];\r\n        if (CWebGLStatusFLAG[key])\r\n            s0.setFlag(key as SWebGLStatusFLAG, v);\r\n        else if (CWebGLStatusVariable[key])\r\n            s0.setVariable(key as SWebGLStatusVariable, v);\r\n        else check(false, `ParseStatus error:不支持的WebGL状态设置${key}`);\r\n    });\r\n    return s0;\r\n}\r\n\r\nexport { parseStatus }","/**\r\n * 判断对象是否是函数\r\n * @param v \r\n * @returns \r\n */\r\nconst isFunction = (v: any): v is Function => typeof v === 'function';\r\n\r\nexport { isFunction }","import { isFunction } from \"../util/isFunction\";\r\nimport { GTexture } from \"../res/GTexture\";\r\nimport { IPerformance } from \"../util/createPerformance\";\r\nimport { Props, TProps } from \"../core/Props\";\r\nimport { IPipelineLink, Pipeline } from \"../core/Pipeline\";\r\n\r\n/**\r\n * @author axmand\r\n */\r\ninterface IUniformRecord extends IPipelineLink {\r\n    /**\r\n     * \r\n     */\r\n    key: string;\r\n\r\n    /**\r\n     * \r\n     */\r\n    p?: Props<TProps>;\r\n\r\n    /**\r\n     * \r\n     */\r\n    v?: boolean | number | number[] | GTexture;\r\n\r\n    /**\r\n     * \r\n     */\r\n    f?: { (performance: IPerformance, batchId: number): number } | { (performance: IPerformance, batchId: number): number[] } | { (performance: IPerformance, batchId: number): GTexture }\r\n}\r\n\r\n/**\r\n * @description\r\n * uniform 结构约束\r\n * @example\r\n * new (performance:IPerformance, batchId:number):number[]\r\n */\r\ntype TUniform = {\r\n    [propName in string]: Props<TProps> | boolean | number | number[] | GTexture | { (performance: IPerformance, batchId: number): number } | { (performance: IPerformance, batchId: number): number[] } | { (performance: IPerformance, batchId: number): GTexture }\r\n}\r\n\r\n/**\r\n * @description\r\n * uniforms:{\r\n *    color:[1, 0, 0, 1]\r\n * }\r\n * @param opts \r\n * @returns \r\n */\r\nconst parseUniform = <TU extends TUniform>(\r\n    opts:{\r\n        pipeline:Pipeline,\r\n        uniforms:TU\r\n    }\r\n):Map<string, IUniformRecord>=>{\r\n    const {uniforms} = opts;\r\n    const UNIFORMS:Map<string, IUniformRecord> = new Map();\r\n    uniforms && Object.keys(uniforms)?.forEach((key:string)=>{\r\n        const v = uniforms[key];\r\n        const record:IUniformRecord = {key:key};\r\n        if(isFunction(v)) record.f = v;\r\n        else if(v instanceof Props) record.p = v;\r\n        else record.v = v;\r\n        UNIFORMS.set(key, record);\r\n    });\r\n    return UNIFORMS;\r\n}\r\n\r\nexport {\r\n    IUniformRecord,\r\n    TUniform,\r\n    parseUniform\r\n}","import { CPrimitive } from \"../core/Constant\";\r\nimport { Extension } from \"../core/Extension\";\r\nimport { ShapedArrayFormat } from \"../core/Format\";\r\nimport { Limit } from \"../core/Limit\";\r\nimport { IPipelineData, Pipeline } from \"../core/Pipeline\";\r\nimport { SPrimitive, SWebGLStatus } from \"../core/Support\";\r\nimport { GElementsbuffer } from \"../res/GElementsbuffer\";\r\nimport { IAttributeRecord, GVertexArrayObject } from \"../res/GVertexArrayObject\";\r\nimport { AttributeState } from \"../state/AttributeState\";\r\nimport { BufferState } from \"../state/BufferState\";\r\nimport { ElementsState } from \"../state/ElementState\";\r\nimport { FramebufferState } from \"../state/FramebufferState\";\r\nimport { ProgramState } from \"../state/ProgramState\";\r\nimport { RenderbufferState } from \"../state/RenderbufferState\";\r\nimport { ShaderState } from \"../state/ShaderState\";\r\nimport { StringState } from \"../state/StringState\";\r\nimport { TextureState } from \"../state/TextureState\";\r\nimport { IPerformance } from \"../util/createPerformance\";\r\nimport { IStats } from \"../util/createStats\";\r\nimport { emitAttribute } from \"./emitAttribute\";\r\nimport { emitBatch } from \"./emitBatch\";\r\nimport { emitElement } from \"./emitElement\";\r\nimport { emitFramebuffer } from \"./emitFramebuffer\";\r\nimport { emitProgram } from \"./emitProgram\";\r\nimport { emitStatus } from \"./emitStatus\";\r\nimport { emitUniform } from \"./emitUniform\";\r\nimport { parseAttribute, TAttribute } from \"./parseAttribute\";\r\nimport { praseElements } from \"./parseElement\";\r\nimport { IFramebufferSetting, parseFramebuffer } from \"./parseFramebuffer\";\r\nimport { parseProgram } from \"./parseProgram\";\r\nimport { parseStatus } from \"./parseStatus\";\r\nimport { parseUniform, TUniform } from \"./parseUniform\";\r\n\r\n/**\r\n * \r\n */\r\ninterface ICompileOption<TA extends TAttribute, TU extends TUniform> {\r\n    /**\r\n     * \r\n     */\r\n    vert?: string;\r\n\r\n    /**\r\n     * \r\n     */\r\n    frag: string;\r\n\r\n    /**\r\n     * \r\n     */\r\n    attributes?: TA;\r\n\r\n    /**\r\n     * \r\n     */\r\n    uniforms?: TU;\r\n\r\n    /**\r\n     * \r\n     */\r\n    elements?: ShapedArrayFormat;\r\n\r\n    /**\r\n     * \r\n     */\r\n    count?: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    offset?: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    primitive?: SPrimitive;\r\n\r\n    /**\r\n     * \r\n     */\r\n    framebuffer?: IFramebufferSetting;\r\n\r\n    /**\r\n     * \r\n     */\r\n    instances?: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    status?: SWebGLStatus;\r\n\r\n    /**\r\n     * \r\n     */\r\n    vao?: GVertexArrayObject;\r\n}\r\n\r\n/**\r\n * @author axmand\r\n * @description \r\n * 编译核心库：\r\n * -各种资源（XState)构造\r\n * -Codegen构造\r\n * -XPrase解析\r\n * -XEmit生成\r\n */\r\nclass CompilerCore {\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private limLib: Limit;\r\n\r\n    /**\r\n    * \r\n    */\r\n    private extLib: Extension;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private bufferState: BufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private elementState: ElementsState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private attributeState: AttributeState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stringState: StringState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private textureState: TextureState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private shaderState: ShaderState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private programState: ProgramState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private renderbufferState: RenderbufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private framebufferState: FramebufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private performance: IPerformance;\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     */\r\n    constructor(\r\n        opts: {\r\n            gl: WebGLRenderingContext,\r\n            stats: IStats,\r\n            performance: IPerformance,\r\n            extLib: Extension,\r\n            limLib: Limit,\r\n            bufferState: BufferState,\r\n            textureState: TextureState,\r\n            elementState: ElementsState,\r\n            attributeState: AttributeState,\r\n            stringState: StringState,\r\n            shaderState: ShaderState,\r\n            programState: ProgramState,\r\n            renderbufferState: RenderbufferState,\r\n            framebufferState: FramebufferState\r\n        }\r\n    ) {\r\n\r\n        this.gl = opts.gl;\r\n        this.stats = opts.stats;\r\n        this.performance = opts.performance;\r\n        this.extLib = opts.extLib;\r\n        this.limLib = opts.limLib;\r\n        this.bufferState = opts.bufferState;\r\n        this.textureState = opts.textureState;\r\n        this.elementState = opts.elementState;\r\n        this.attributeState = opts.attributeState;\r\n        this.stringState = opts.stringState;\r\n        this.shaderState = opts.shaderState;\r\n        this.programState = opts.programState;\r\n        this.renderbufferState = opts.renderbufferState;\r\n        this.framebufferState = opts.framebufferState;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     */\r\n    private perparePipelineData = <TA extends TAttribute, TU extends TUniform>(\r\n        opts: {\r\n            gl: WebGLRenderingContext,\r\n            pipeline: Pipeline,\r\n            attributes: TA,\r\n            uniforms: TU,\r\n            vert: string,\r\n            frag: string,\r\n            extLib: Extension,\r\n            limLib: Limit,\r\n            bufferState: BufferState,\r\n            textureState: TextureState,\r\n            elementState: ElementsState,\r\n            attributeState: AttributeState,\r\n            stringState: StringState,\r\n            shaderState: ShaderState,\r\n            programState: ProgramState,\r\n            renderbufferState: RenderbufferState,\r\n            framebufferState: FramebufferState,\r\n            vao?: GVertexArrayObject,\r\n            primitive?: SPrimitive,\r\n            framebuffer?: IFramebufferSetting,\r\n            elements?: ShapedArrayFormat,\r\n            offset?: number,\r\n            count?: number,\r\n            instance?: number,\r\n            status?: SWebGLStatus\r\n        }\r\n    ): IPipelineData => {\r\n        let elementbuffer: GElementsbuffer = null, attributeRecordSet: Map<string, IAttributeRecord> = null;\r\n        //解析framebuffer\r\n        const framebuffer = parseFramebuffer(opts);\r\n        //解析attribute, 为VAO准备资源\r\n        // const attributeLocations = parseAttribLocation();\r\n        const status = parseStatus(opts);\r\n        if (!opts.vao) {\r\n            elementbuffer = praseElements(opts);\r\n            //解析attributes和unifroms后构造record数组备用\r\n            attributeRecordSet = parseAttribute(opts);\r\n        }\r\n        //2.解析uniform\r\n        const uniformRecordSet = parseUniform(opts);\r\n        //3.构造program\r\n        // const program = parseProgram(opts, attributeLocations)\r\n        const program = parseProgram(opts, null);\r\n        //4.资源准备完毕，构造darwProce\r\n        const pipelineData: IPipelineData = {\r\n            attributeRecordSet,\r\n            uniformRecordSet,\r\n            program: program.program,\r\n            fragShader: program.fragShader,\r\n            vertShader: program.vertShader,\r\n            fragId: program.fragId,\r\n            vertId: program.vertId,\r\n            status,\r\n            vao: opts.vao,\r\n            element: elementbuffer,\r\n            performance: this.performance,\r\n            framebuffer\r\n        }\r\n        //5.资源Link到pipeline\r\n        opts.pipeline.append(pipelineData);\r\n        //6.resource集中放在proce，只有draw时调取\r\n        return pipelineData;\r\n    }\r\n\r\n    /**\r\n     * 批次合并绘制\r\n     * @param opts \r\n     */\r\n    private applyBatchProcPipelineData = (\r\n        opts: {\r\n            pipeline: Pipeline,\r\n            pipelineData: IPipelineData,\r\n            extLib: Extension,\r\n            instances: number,\r\n            count: number\r\n        }\r\n    ): void => {\r\n        const { pipeline, pipelineData, extLib, instances } = opts;\r\n        const drawProc = pipeline.proc('batch', 1);\r\n        const scope0 = drawProc.Entry.createScope();\r\n        const iBlock = scope0.Entry;    //作batch block输入\r\n        //更新webgl上下文状态\r\n        emitStatus(pipeline, iBlock, pipelineData.status);\r\n        //1.处理framebuffer\r\n        emitFramebuffer(pipeline, iBlock, scope0.Exit, pipelineData.framebuffer, extLib);\r\n        //处理program\r\n        emitProgram(pipeline, iBlock, pipelineData);\r\n        //批量绘制\r\n        emitBatch(pipeline, iBlock, pipelineData, extLib, instances);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     */\r\n    private applyDrawProcPipelineData = (\r\n        opts: {\r\n            pipeline: Pipeline,\r\n            pipelineData: IPipelineData,\r\n            extLib: Extension,\r\n            instances: number,\r\n            count: number\r\n        }\r\n    ): void => {\r\n        const { pipeline, pipelineData, extLib } = opts;\r\n        const drawProc = pipeline.proc('draw', 1);\r\n        const scope0 = drawProc.Entry.createScope();\r\n        const scope1 = drawProc.Exit.createScope();\r\n        const iBlock = scope0.Entry;\r\n        const oBlock = scope1.Exit;\r\n        const P0_NAME = `p0`;\r\n        //更新webgl状态\r\n        emitStatus(pipeline, iBlock, pipelineData.status);\r\n        //处理framebuffer\r\n        emitFramebuffer(pipeline, iBlock, oBlock, pipelineData.framebuffer, extLib);\r\n        //处理attribute\r\n        emitProgram(pipeline, iBlock, pipelineData);\r\n        //处理attribute\r\n        emitAttribute(pipeline, iBlock, extLib, pipelineData.vao, pipelineData.program.Attributes, pipelineData.attributeRecordSet, P0_NAME);\r\n        //处理uniform\r\n        emitUniform(pipeline, iBlock, oBlock, pipelineData.program.Uniforms, pipelineData.uniformRecordSet, P0_NAME);\r\n        //处理绘制\r\n        emitElement(pipeline, extLib, pipelineData.vao, iBlock, pipelineData.element, opts.instances);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     */\r\n    compile = <TA extends TAttribute, TU extends TUniform>(opts: ICompileOption<TA, TU>) => {\r\n        const count = opts.count || 0,\r\n            offset = opts.offset || 0,\r\n            instances = opts.instances || 0,\r\n            framebuffer = opts.framebuffer || null,\r\n            primitive = CPrimitive[opts.primitive || 'TRIANGLES'],\r\n            status = opts.status || {}\r\n        //渲染上下文管线\r\n        const pipeline = new Pipeline({\r\n            gl: this.gl,\r\n            extLib: this.extLib,\r\n            limLib: this.limLib,\r\n            attributeState: this.attributeState,\r\n            bufferState: this.bufferState,\r\n            elementState: this.elementState,\r\n            programState: this.programState,\r\n            shaderState: this.shaderState,\r\n            stringState: this.stringState,\r\n            textureState: this.textureState,\r\n            renderbufferState: this.renderbufferState,\r\n            framebufferState: this.framebufferState,\r\n            performance: this.performance,\r\n            offset,\r\n            count,\r\n            primitive,\r\n            instances\r\n        });\r\n        //资源解析\r\n        //-解析attributes->record\r\n        //-解析unifrom->unifrom record\r\n        //-解析frag,vert\r\n        //-解析vao\r\n        //-framebuffer\r\n        const pipelineData = this.perparePipelineData({\r\n            gl: this.gl,\r\n            pipeline: pipeline,\r\n            attributes: opts.attributes,\r\n            uniforms: opts.uniforms,\r\n            elements: opts.elements,\r\n            frag: opts.frag,\r\n            vert: opts.vert,\r\n            extLib: this.extLib,\r\n            limLib: this.limLib,\r\n            attributeState: this.attributeState,\r\n            bufferState: this.bufferState,\r\n            elementState: this.elementState,\r\n            programState: this.programState,\r\n            shaderState: this.shaderState,\r\n            stringState: this.stringState,\r\n            textureState: this.textureState,\r\n            renderbufferState: this.renderbufferState,\r\n            framebufferState: this.framebufferState,\r\n            vao: opts.vao,\r\n            primitive: opts.primitive || 'TRIANGLES',\r\n            framebuffer,\r\n            status\r\n        });\r\n        //生成draw proc\r\n        this.applyDrawProcPipelineData({\r\n            pipeline,\r\n            pipelineData,\r\n            extLib: this.extLib,\r\n            count,\r\n            instances\r\n        });\r\n        //生成draw batch\r\n        this.applyBatchProcPipelineData({\r\n            pipeline,\r\n            pipelineData,\r\n            extLib: this.extLib,\r\n            count,\r\n            instances\r\n        });\r\n        //编译\r\n        return pipeline.compile();\r\n    }\r\n}\r\n\r\nexport { \r\n    ICompileOption,\r\n    CompilerCore \r\n}","import { SExtension } from \"../core/Extension\";\r\n\r\n/**\r\n * https://developer.mozilla.org/zh-CN/docs/Web/API/HTMLCanvasElement/getContext\r\n */\r\nconst defaultWebGLOptions: WebGLContextAttributes = {\r\n    alpha: true,                                         //默认开启alpha缓冲\r\n    antialias: false,                                    //默认不开抗锯齿\r\n    depth: true,                                         //默认开启16位深度缓冲\r\n    failIfMajorPerformanceCaveat: true,                  //表面在一个系统性能低的环境下是否创建该上下文\r\n    powerPreference: 'high-performance',                 //指示浏览器运行WebG时相应的GPU电源配置\r\n    premultipliedAlpha: false,                           //排版引擎假设绘制是否已包含预混alpha通道\r\n    preserveDrawingBuffer: false,                        //表面缓冲区会不会被清除\r\n    stencil: true,                                       //表示默认开启8位深度模板缓冲\r\n    // desynchronized: \r\n}\r\n\r\n/**\r\n * 初始化支持的输入参数\r\n */\r\ninterface IConfigure {\r\n    /**\r\n     * WebGL绘制上下文\r\n     */\r\n    gl?: WebGLRenderingContext;\r\n\r\n    /**\r\n     * 页面画布元素\r\n     */\r\n    canvas?: HTMLCanvasElement;\r\n\r\n    /**\r\n     * 容器元素\r\n     */\r\n    container?: HTMLElement;\r\n\r\n    /**\r\n     * webgl上下文创建初始化属性\r\n     */\r\n    webglOptions?: WebGLContextAttributes;\r\n\r\n    /**\r\n     * 扩展\r\n     */\r\n    extensions?: SExtension[];\r\n\r\n    /**\r\n     * 设备ratio比率\r\n     */\r\n    devicePixelRatio?: number;\r\n\r\n    /**\r\n     * 像素宽度\r\n     */\r\n    width?: number;\r\n\r\n    /**\r\n     * 像素高度\r\n     */\r\n    height?: number;\r\n\r\n    /**\r\n     * }{ 还不清楚干啥用的\r\n     */\r\n    profile?: boolean;\r\n}\r\n\r\n/**\r\n * \r\n * @param container \r\n * @param width \r\n * @param height \r\n * @param devicePixelRatio \r\n */\r\nconst createCanvasElement = (\r\n    container: HTMLElement,\r\n    width: number,\r\n    height: number,\r\n    devicePixelRatio: number\r\n): HTMLCanvasElement => {\r\n    const canvas = document.createElement('canvas');\r\n    const w = width || container.clientWidth || window.innerWidth;\r\n    const h = height || container.clientHeight || window.innerHeight;\r\n    canvas.width = w * devicePixelRatio;\r\n    canvas.height = h * devicePixelRatio;\r\n    canvas.style.border = `0px`;\r\n    canvas.style.margin = `0px`;\r\n    canvas.style.padding = `0px`;\r\n    canvas.style.top = `0px`;\r\n    canvas.style.left = `0px`;\r\n    canvas.style.width = `${w}px`;\r\n    canvas.style.height = `${h}px`;\r\n    container === document.body ? canvas.style.position = 'absolute' : null;\r\n    container.appendChild(canvas);\r\n    return canvas;\r\n}\r\n\r\n/**\r\n * @description\r\n * -webgl option\r\n * -container\r\n * -canvas\r\n * -gl\r\n * -width\r\n * -height\r\n * @param opts \r\n */\r\nconst parseConfigure = (opts: IConfigure = {}): IConfigure => {\r\n    opts.devicePixelRatio = opts.devicePixelRatio || devicePixelRatio || 1.0;\r\n    opts.webglOptions = opts.webglOptions || defaultWebGLOptions;\r\n    opts.container = opts.container || document.body;\r\n    opts.canvas = opts.gl ? opts.gl.canvas as HTMLCanvasElement : opts.canvas ? opts.canvas : createCanvasElement(opts.container, opts.width, opts.height, opts.devicePixelRatio);\r\n    opts.width = parseInt(opts.canvas.style.width);\r\n    opts.height = parseInt(opts.canvas.style.height);\r\n    opts.gl = opts.gl || opts.canvas.getContext('webgl', opts.webglOptions);\r\n    opts.extensions = opts.extensions || [];\r\n    opts.profile = false;\r\n    return opts;\r\n}\r\n\r\nexport {\r\n    defaultWebGLOptions,\r\n    IConfigure,\r\n    parseConfigure\r\n}","import { CPrimitive } from \"../core/Constant\";\r\nimport { Dispose } from \"../core/Dispose\";\r\nimport { ShapedArrayFormat, TypedArrayFormat } from \"../core/Format\";\r\nimport { SComponent, SPrimitive, SUsage } from \"../core/Support\";\r\nimport { GBuffer } from \"./GBuffer\";\r\n\r\n/**\r\n * \r\n */\r\nconst REGLELEMENTBUFFER_SET: Map<number, GElementsbuffer> = new Map();\r\n\r\n/**\r\n * @author axmand\r\n */\r\nclass GElementsbuffer extends Dispose {\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        this\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    decRef(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * vertex count\r\n     */\r\n    private vertCount: number;\r\n\r\n    /**\r\n     * primitive type\r\n     */\r\n    private primitive: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private reglBuffer: GBuffer;\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Dimension(): number {\r\n        return this.reglBuffer.Dimension\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get ByteLength(): number {\r\n        return this.reglBuffer.ByteLength;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set Primitive(v: number) {\r\n        this.primitive = v;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Primitive(): number {\r\n        return this.primitive;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get VertCount(): number {\r\n        return this.vertCount;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set VertCount(v: number) {\r\n        this.vertCount = v;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Component(): number {\r\n        return this.reglBuffer.Component;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param reglBuffer \r\n     * @param primitive \r\n     */\r\n    constructor(\r\n        reglBuffer: GBuffer,\r\n        primitive: SPrimitive = 'TRIANGLES'\r\n\r\n    ) {\r\n        super();\r\n        this.vertCount = 0;\r\n        this.reglBuffer = reglBuffer;\r\n        this.primitive = CPrimitive[primitive || 'TRIANGLES'];\r\n        REGLELEMENTBUFFER_SET.set(this.ID, this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param data \r\n     * @param offset \r\n     */\r\n    subData = (data: TypedArrayFormat, offset: number): void => {\r\n        this.reglBuffer.subData(data, offset);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param data \r\n     * @param usage \r\n     * @param component \r\n     */\r\n    paddingWithData = (data: ShapedArrayFormat, usage: SUsage, component: SComponent): void => {\r\n        this.reglBuffer.paddingWithData(data, usage, component);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    bind = (): void => {\r\n        this.reglBuffer.bind();\r\n    }\r\n}\r\n\r\nexport {\r\n    REGLELEMENTBUFFER_SET,\r\n    GElementsbuffer\r\n}","import { SComponent } from \"../core/Support\";\r\n\r\n/**\r\n * @description detecte number type\r\n * @param data \r\n * @returns \r\n */\r\nconst detectComponent = (data: any): SComponent => {\r\n    const ne = Object.prototype.toString.call(data);\r\n    switch (ne) {\r\n        case `[object Int8Array]`:\r\n            return 'BYTE';           //5120\r\n        case `[object ArrayBuffer]`:\r\n        case `[object Float64Array]`:\r\n        case `[object Uint8ClampedArray]`:\r\n        case `[object Uint8Array]`:\r\n            return 'UNSIGNED_BYTE';  //5121\r\n        case `[object Int16Array]`:\r\n            return 'SHORT';          //5122\r\n        case `[object Uint16Array]`:\r\n            return 'UNSIGNED_SHORT'; //5123\r\n        case `[object Int32Array]`:\r\n            return 'INT';            //5124\r\n        case `[object Uint32Array]`:\r\n            return 'UNSIGNED_INT';   //5125\r\n        case `[object Float32Array]`:\r\n            return 'FLOAT';          //5126\r\n        default: //[object Number]\r\n            return 'FLOAT';\r\n    }\r\n}\r\n\r\nexport { detectComponent }","import { check } from '../util/check';\r\nimport { Dispose } from '../core/Dispose';\r\nimport { bufferPool0 } from '../pool/BufferPool';\r\nimport { detectComponent } from '../util/detectComponent';\r\nimport { ShapedArrayFormat, TypedArrayFormat } from '../core/Format';\r\nimport { flattenArrayWithShape, getArrayShape } from '../util/getFlatten';\r\nimport { CArraybufferTarget, CComponent, CDimension, CUsage } from '../core/Constant';\r\nimport { SArraybufferTarget, SComponent, SDimension, SUsage } from '../core/Support';\r\n\r\n/**\r\n * 全局存储buffer\r\n */\r\nconst BUFFER_SET: Map<number, GBuffer> = new Map();\r\n\r\n/**\r\n * \r\n */\r\nclass GBuffer extends Dispose {\r\n    /**\r\n     * \r\n     */\r\n    decRef(): void {\r\n        this.refCount--;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    /**\r\n     *\r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private buffer: WebGLBuffer;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private byteLength: number;\r\n\r\n    /**\r\n     * Draw方法，包括：static draw / dynamic draw / stream draw\r\n     */\r\n    private usage: number;\r\n\r\n    /**\r\n     * POINTS/LINES/TRIANGLES\r\n     */\r\n    private dimension: number;\r\n\r\n    /**\r\n     * FLOAT/BYTE/SHORT等\r\n     */\r\n    private component: number;\r\n\r\n    /**\r\n     * 指示顶点buffer, 片元buffer\r\n     * ELEMENT_ARRAY_BUFFER / ARRAY_BUFFER\r\n     */\r\n    private target: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Dimension():number{\r\n        return this.dimension;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get ByteLength():number{\r\n        return this.byteLength;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Component():number{\r\n        return this.component;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param target \r\n     * @param usage \r\n     * @param component \r\n     * @param dimension \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        target: SArraybufferTarget,\r\n        usage: SUsage = 'STATIC_DRAW',\r\n        component: SComponent = 'FLOAT',\r\n        dimension: SDimension = 'POINTS'\r\n    ) {\r\n        super();\r\n        this.gl = gl;\r\n        this.byteLength = 0;\r\n        this.buffer = gl.createBuffer();\r\n        this.target = CArraybufferTarget[target];\r\n        this.usage = CUsage[usage || 'STATIC_DRAW'];\r\n        this.dimension = CDimension[dimension || 'POINTS'];\r\n        this.component = CComponent[component || 'UNSIGNED_BYTE'];\r\n        BUFFER_SET.set(this.ID, this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param data \r\n     * @param offset \r\n     */\r\n    private setSubData = (data: TypedArrayFormat, offset: number) => {\r\n        const gl = this.gl, size = offset + data.byteLength;\r\n        check(size <= this.byteLength, `subdata错误，写入数据长度${size}超过原始长度${this.byteLength},写入失败`);\r\n        gl.bufferSubData(this.target, offset, data);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param data \r\n     */\r\n    private bufferTypedArray = (data: TypedArrayFormat) => {\r\n        this.byteLength = data.byteLength;\r\n        this.gl.bufferData(this.target, data, this.usage);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param data \r\n     * @param usage \r\n     * @param component \r\n     * @returns \r\n     */\r\n    public paddingWithData = (data: ShapedArrayFormat, usage: SUsage, component: SComponent): GBuffer => {\r\n        this.usage = CUsage[usage || 'STATIC_DRAW'];\r\n        const shape = getArrayShape(data);\r\n        //获取d0, 用于判断dtype\r\n        const d0 = shape.length === 1 ? data[0] : shape.length === 2 ? data[0][0] : shape.length === 3 ? data[0][0][0] : 0;\r\n        component = component || detectComponent(d0) || 'FLOAT';\r\n        this.component = CComponent[component];\r\n        const flatData = flattenArrayWithShape(data, shape, component);\r\n        this.bufferTypedArray(flatData);\r\n        //持久化存储或释放\r\n        bufferPool0.freeType(flatData);\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param data \r\n     * @param offset \r\n     */\r\n    public subData = (data: ShapedArrayFormat, offset: number = 0) => {\r\n        this.bind();\r\n        const shape = getArrayShape(data);\r\n        //获取d0，判断dtype\r\n        const d0 = shape.length === 1 ? data[0] : shape.length === 2 ? data[0][0] : shape.length === 3 ? data[0][0][0] : 0;\r\n        const scomponent = detectComponent(d0) || 'FLOAT';\r\n        this.component = CComponent[scomponent];\r\n        const flatData = flattenArrayWithShape(data, shape, scomponent);\r\n        this.setSubData(flatData, offset);\r\n        //持久化存储或释放\r\n        bufferPool0.freeType(flatData);\r\n    }\r\n\r\n    /**\r\n     * bind buffer\r\n     */\r\n    public bind = () => {\r\n        this.gl.bindBuffer(this.target, this.buffer);\r\n    }\r\n\r\n    /**\r\n     * 解绑buffer\r\n     */\r\n    public unbind =()=>{\r\n        this.gl.bindBuffer(this.target, null);\r\n        this.decRef();\r\n    }\r\n}\r\n\r\nexport { \r\n    BUFFER_SET,\r\n    GBuffer \r\n}","/**\r\n * @description assign default value (void 0 error)\r\n * @param v current input arg value\r\n * @param dv fill value\r\n * @returns \r\n */\r\nconst defaultValue = (v: any, dv: any): any => {\r\n    return v === null || v === undefined ? dv : v;\r\n}\r\n\r\nexport { defaultValue }","import { check } from \"../util/check\";\r\nimport { IStats } from \"../util/createStats\";\r\nimport { GBuffer } from \"./GBuffer\";\r\nimport { Dispose } from \"../core/Dispose\";\r\nimport { SPrimitive } from \"../core/Support\";\r\nimport { ProgramState } from \"../state/ProgramState\";\r\nimport { defaultValue } from '../util/defaultValue';\r\nimport { Props, TProps } from \"../core/Props\";\r\nimport { IPipelineLink } from \"../core/Pipeline\";\r\nimport { GElementsbuffer } from \"./GElementsbuffer\";\r\nimport { CArraybufferTarget, CAttributeTS, CPrimitive } from \"../core/Constant\";\r\n\r\n/**\r\n * \r\n */\r\ninterface IAttributeRecord extends IPipelineLink {\r\n    /**\r\n     * attribute location name\r\n     */\r\n    name?: string;\r\n\r\n    /**\r\n     * props 动态属性\r\n     */\r\n    p?: Props<TProps>;\r\n\r\n    /**\r\n     * 每个顶点属性组成的数量，例如vec3为3\r\n     */\r\n    size?: number;\r\n\r\n    /**\r\n     * Attribute记录的缓冲对象（数据）\r\n     */\r\n    buffer?: number[] | GBuffer | GElementsbuffer;\r\n\r\n    /**\r\n     * 指示数据归一化\r\n     * defalut:false\r\n     */\r\n    normalized?: boolean;\r\n\r\n    /**\r\n     * 数据类型\r\n     */\r\n    component?: number;\r\n\r\n    /**\r\n     * 数据偏移量\r\n     * default: 0\r\n     */\r\n    offset?: number;\r\n\r\n    /**\r\n     * 扫描线宽\r\n     * default:0\r\n     */\r\n    stride?: number;\r\n\r\n    /**\r\n     * 表示实例化绘制时，每个属性绘制的次数\r\n     * default:0，表示每个属性不使用实例化绘制\r\n     */\r\n    divisor?: number;\r\n}\r\n\r\n/**\r\n * VertexArrayObject MAP\r\n */\r\nconst VAO_SET: Map<number, GVertexArrayObject> = new Map();\r\n\r\n/**\r\n * \r\n */\r\nclass GVertexArrayObject extends Dispose {\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    decRef(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * 构建attribute集\r\n     */\r\n    private attributeSet: Map<string, IAttributeRecord> = new Map();\r\n\r\n    /**\r\n     * element arraybuffer \r\n     */\r\n    private elements: GElementsbuffer;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private count: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private offset: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private instances: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private primitive: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private extVAO: OES_vertex_array_object;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private extITA: ANGLE_instanced_arrays;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private vao: WebGLVertexArrayObjectOES;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private programState: ProgramState;\r\n\r\n    /**\r\n     * 指示vao是否已绑定属性\r\n     */\r\n    private bindings: boolean;\r\n\r\n    /**\r\n     * \r\n     */\r\n    set Elements(v: GElementsbuffer) {\r\n        this.elements = v;\r\n    }\r\n\r\n    /**\r\n     * element arraybuffer\r\n     */\r\n    get Elements(): GElementsbuffer {\r\n        return this.elements;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Offset() {\r\n        return this.offset;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Count() {\r\n        return this.count;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Instances() {\r\n        return this.instances;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Primitive() {\r\n        return this.primitive;\r\n    }\r\n\r\n    constructor(\r\n        opts: {\r\n            gl: WebGLRenderingContext,\r\n            extVAO: OES_vertex_array_object,\r\n            extITA: ANGLE_instanced_arrays,\r\n            programState: ProgramState,\r\n            stats: IStats\r\n        }\r\n    ) {\r\n        super();\r\n        this.gl = opts.gl;\r\n        this.extVAO = opts.extVAO;\r\n        this.extITA = opts.extITA;\r\n        this.programState = opts.programState;\r\n        this.instances = -1;\r\n        this.offset = 0;\r\n        this.count = 0;\r\n        this.bindings = false;\r\n        this.primitive = CPrimitive['TRIANGLES'];\r\n        this.stats = opts.stats;\r\n        this.vao = this.extVAO.createVertexArrayOES();\r\n        this.stats.vaoCount++;\r\n        VAO_SET.set(this.ID, this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     */\r\n    public refresh = (\r\n        opts: {\r\n            recordSet?: Map<string, IAttributeRecord>,\r\n            elements?: GElementsbuffer,\r\n            offset?: number,\r\n            count?: number,\r\n            instances?: number,\r\n            primitive?: SPrimitive\r\n        }\r\n    ) => {\r\n        this.attributeSet = opts.recordSet || this.attributeSet;\r\n        this.elements = opts.elements || this.elements;\r\n        this.offset = defaultValue(opts.offset, this.offset);\r\n        this.count = defaultValue(opts.count, this.count);\r\n        this.instances = defaultValue(opts.instances, this.instances);\r\n        this.primitive = defaultValue(CPrimitive[opts.primitive], this.primitive);\r\n        //刷新bindings状态\r\n        this.bindings = false;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public bindAttrs = () => {\r\n        this.refCount++;\r\n        this.extVAO.bindVertexArrayOES(this.vao);\r\n        if (this.bindings) return;\r\n        const gl = this.gl;\r\n        this.attributeSet?.forEach((att: IAttributeRecord, loc: string) => {\r\n            if (att.buffer) {\r\n                //顶点缓冲\r\n                if (att.buffer instanceof GBuffer) {\r\n                    const act = this.programState.Current.AttActiveInfo.get(loc);\r\n                    check(act, `GVertexArrayObject 错误: VAO绑定属性与当前Program不一致`);\r\n                    const pos = act.location as number;\r\n                    const size = CAttributeTS[act.info.type];\r\n                    //告诉显卡从当前绑定的缓冲区读取顶点数据\r\n                    gl.vertexAttribPointer(pos, size, att.component, att.normalized, att.stride, att.offset);\r\n                    gl.enableVertexAttribArray(pos);\r\n                    //实例化绘制设置\r\n                    if (this.extITA && att.divisor)\r\n                        this.extITA.vertexAttribDivisorANGLE(pos, att.divisor);\r\n                } else if (Array.isArray(att.buffer)) {\r\n                    const act = this.programState.Current.AttActiveInfo.get(loc);\r\n                    check(act, `GVertexArrayObject 错误: VAO绑定属性与当前Program不一致`);\r\n                    const pos = act.location as number;\r\n                    gl.disableVertexAttribArray(pos);\r\n                    //使用fv代替float verctor, 要求buffer长度是4\r\n                    gl.vertexAttrib4fv(pos, att.buffer);\r\n                }\r\n            }\r\n        });\r\n        //最后绑定element arraybuffer\r\n        this.elements ? gl.bindBuffer(CArraybufferTarget['ELEMENT_ARRAY_BUFFER'], this.elements) : gl.bindBuffer(CArraybufferTarget['ELEMENT_ARRAY_BUFFER'], null);\r\n        this.bindings = true;\r\n    }\r\n}\r\n\r\nexport {\r\n    VAO_SET,\r\n    IAttributeRecord,\r\n    GVertexArrayObject\r\n}","import { check } from \"../util/check\";\r\nimport { Limit } from \"../core/Limit\";\r\nimport { IStats } from \"../util/createStats\";\r\nimport { GBuffer } from \"../res/GBuffer\";\r\nimport { Extension } from \"../core/Extension\";\r\nimport { SPrimitive } from \"../core/Support\";\r\nimport { CComponent } from \"../core/Constant\";\r\nimport { BufferState } from \"./BufferState\";\r\nimport { ElementsState } from \"./ElementState\";\r\nimport { ProgramState } from \"./ProgramState\";\r\nimport { isBufferArray } from \"../util/isBufferArray\";\r\nimport { GElementsbuffer } from \"../res/GElementsbuffer\";\r\nimport { checkAttribute } from \"../util/checkAttribute\";\r\nimport { ShapedArrayFormat } from \"../core/Format\";\r\nimport { IAttributeBuffer, TAttribute } from \"../compiler/parseAttribute\";\r\nimport { IAttributeRecord, GVertexArrayObject, VAO_SET } from \"../res/GVertexArrayObject\";\r\n\r\n/**\r\n * \r\n */\r\nclass AttributeState {\r\n    /**\r\n     * \r\n     */\r\n    static VAO_SET: Map<number, GVertexArrayObject> = VAO_SET;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private extVAO: OES_vertex_array_object;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private extITA: ANGLE_instanced_arrays;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private attributeBindings: IAttributeRecord[];\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private bufferState: BufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private elementState: ElementsState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private programState: ProgramState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private extLib: Extension;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private limLib: Limit;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private current: GVertexArrayObject;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Current(): GVertexArrayObject {\r\n        return this.current;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param extLib \r\n     * @param limLib \r\n     * @param bufferState \r\n     * @param elementState \r\n     * @param programState \r\n     * @param stats \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        extLib: Extension,\r\n        limLib: Limit,\r\n        bufferState: BufferState,\r\n        elementState: ElementsState,\r\n        programState: ProgramState,\r\n        stats: IStats\r\n    ) {\r\n        this.gl = gl;\r\n        this.extLib = extLib;\r\n        this.limLib = limLib;\r\n        this.bufferState = bufferState;\r\n        this.elementState = elementState;\r\n        this.programState = programState;\r\n        this.current = null;\r\n        this.extVAO = extLib.getByForce('OES_vertex_array_object') as OES_vertex_array_object;\r\n        this.extITA = extLib.getByForce('ANGLE_instanced_arrays') as ANGLE_instanced_arrays;\r\n        this.attributeBindings = new Array(limLib.maxAttributes);\r\n        for (let i = 0; i < limLib.maxAttributes; i++)\r\n            this.attributeBindings[i] = {};\r\n        this.stats = stats;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param i \r\n     * @returns \r\n     */\r\n    public getAttribute = (i: number): IAttributeRecord => {\r\n        return this.attributeBindings[i];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param attrs \r\n     * @returns \r\n     */\r\n    private applyAttribute = <TA extends TAttribute>(attrs: TA): Map<string, IAttributeRecord> => {\r\n        const RECORD_SET: Map<string, IAttributeRecord> = new Map();\r\n        Object.keys(attrs)?.forEach((key: string) => {\r\n            const v = attrs[key];\r\n            checkAttribute(v);\r\n            const record: IAttributeRecord = { name: key };\r\n            /**\r\n             * @description 数组处理\r\n             * @example\r\n             * \r\n             * attributes:{\r\n             *      color:{\r\n             *          constant: [1, 0, 1, 1]\r\n             *      }\r\n             * }\r\n             * \r\n             */\r\n            if (isBufferArray(v)) {\r\n                const v0: ShapedArrayFormat = v as ShapedArrayFormat;\r\n                const buf = this.bufferState.createBuffer({\r\n                    data: v0,\r\n                    target: 'ARRAY_BUFFER'\r\n                });\r\n                //buffer需要绑定是因为buf直接被vao使用，不需要初始化与各program重复绑定\r\n                record.buffer = buf;\r\n                record.component = buf.Component;\r\n                record.divisor = 0;\r\n                record.offset = 0;\r\n                record.stride = 0;\r\n                record.normalized = false;\r\n            }\r\n            /**\r\n             * 处理带其他属性的attribute\r\n             * @example\r\n             * attributes:{\r\n             *  normals:{\r\n             *      buffer:new REGLBuffer(),\r\n             *      offset:0,\r\n             *      stride:12,\r\n             *      normalized:false,\r\n             *      divisor:0 \r\n             *  }\r\n             * }\r\n             */\r\n            else if ((v as IAttributeBuffer).buffer) {\r\n                const v0 = v as IAttributeBuffer;\r\n                const buf = isBufferArray(v0.buffer) ? this.bufferState.createBuffer({\r\n                    data: v0.buffer as ShapedArrayFormat,\r\n                    target: 'ARRAY_BUFFER',\r\n                }) : v0.buffer as GBuffer;\r\n                //record属性设置\r\n                record.offset = v0.offset | 0;\r\n                check(record.offset >= 0, `offset只能是大于等于0的数字`);\r\n                record.stride = v0.stride | 0;\r\n                check(record.stride >= 0 && record.stride < 256, `扫描线宽取值范围必须[0,255]`);\r\n                record.normalized = !!v0.normalized;\r\n                record.component = CComponent[v0.component] || buf.Component;\r\n                check(Object.values(CComponent).indexOf(record.component) !== -1, `数据类型只能是${Object.values(CComponent)}`);\r\n                check(v0.divisor === 0 || this.extLib.get('ANGLE_instanced_arrays'), `不支持ANGLE_instanced_arrays插件，不能设置实例化参数divisor`);\r\n                check(v0.divisor >= 0, `不支持的divisor值`);\r\n                //record buffer属性\r\n                record.buffer = buf;\r\n                record.component = buf.Component;\r\n            }\r\n            RECORD_SET.set(record.name, record);\r\n        });\r\n        return RECORD_SET;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param attrs \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public createREGLVertexArrayObject = <TA extends TAttribute>(\r\n        attrs: TA,\r\n        opts: {\r\n            elements?: GElementsbuffer | ShapedArrayFormat,\r\n            offset?: number,\r\n            count?: number,\r\n            instances?: number,\r\n            primitive?: SPrimitive\r\n        } = {}\r\n    ): GVertexArrayObject => {\r\n        const RECORD_SET = this.applyAttribute(attrs);\r\n        let ELEMENTS: GElementsbuffer = null;\r\n        if (opts.elements) {\r\n            if (opts.elements instanceof GElementsbuffer)\r\n                ELEMENTS = opts.elements;\r\n            else\r\n                ELEMENTS = this.elementState.createElementsbuffer({\r\n                    data: opts.elements,\r\n                    component: 'UNSIGNED_SHORT',\r\n                    primitive: opts.primitive || 'TRIANGLES'\r\n                });\r\n        }\r\n        const vertexArrayObject = new GVertexArrayObject(\r\n            {\r\n                gl: this.gl,\r\n                extVAO: this.extVAO,\r\n                extITA: this.extITA,\r\n                programState: this.programState,\r\n                stats: this.stats\r\n            }\r\n        );\r\n        vertexArrayObject.refresh({\r\n            recordSet: RECORD_SET,\r\n            elements: ELEMENTS,\r\n            offset: opts.offset,\r\n            count: opts.count,\r\n            instances: opts.instances,\r\n            primitive: opts.primitive\r\n        });\r\n        return vertexArrayObject;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param vao \r\n     */\r\n    public setVAO = (vao: GVertexArrayObject): void => {\r\n        if (vao) this.current = vao;\r\n        else {\r\n            this.Current?.decRef();\r\n            this.current = null;\r\n        }\r\n    }\r\n}\r\n\r\nexport { AttributeState }","import { IStats } from \"../util/createStats\";\r\nimport { ShapedArrayFormat } from \"../core/Format\";\r\nimport { GBuffer, BUFFER_SET } from \"../res/GBuffer\";\r\nimport { CArraybufferTarget, CUsage } from \"../core/Constant\";\r\nimport { SArraybufferTarget, SComponent, SDimension, SUsage } from \"../core/Support\";\r\n\r\n/**\r\n * \r\n */\r\nclass BufferState{\r\n    /**\r\n     * \r\n     */\r\n    static REGLBUFFER_SET: Map<number, GBuffer> = BUFFER_SET;\r\n\r\n    /**\r\n     *  \r\n     */\r\n    private streamPool: GBuffer[] = [];\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private reglBuffer: GBuffer;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param stats \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        stats: IStats\r\n    ) {\r\n        this.gl = gl;\r\n        this.stats = stats;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     * @param [opts.data] buffer数据\r\n     * @param [opts.byteLength] 数据长度\r\n     * @param [opts.usage] 指示STATIC_DRAW/DYNAMIC_DRAW/STREAM_DRAW\r\n     * @param [opts.dtype] 数组类型\r\n     * @param [opts.dimension] 数据维度，顶点数据类型默认为1，片段数据 1.POINTS 2.LINES 3.TRIANGLES\r\n     * @param [opts.target] 指示ARRAY_BUFFER或ELEMENT_ARRAY_BUFFER\r\n     * @returns \r\n     */\r\n    public createBuffer = (\r\n        opts: {\r\n            target: SArraybufferTarget,\r\n            usage?: SUsage,\r\n            component?: SComponent,\r\n            dimension?: SDimension,\r\n            data?: ShapedArrayFormat,\r\n            byteLength?: number\r\n        }\r\n    ): GBuffer => {\r\n        const data = opts.data,\r\n            byteLength = opts.byteLength || 0,\r\n            usage = opts.usage || 'STATIC_DRAW',\r\n            component = opts.component || 'FLOAT',\r\n            dimension = opts.dimension || 'POINTS',\r\n            target = opts.target || 'ARRAY_BUFFER';\r\n        const buffer = new GBuffer(this.gl, target, usage, component, dimension);\r\n        buffer.bind();\r\n        if (!data && byteLength > 0)\r\n            this.gl.bufferData(CArraybufferTarget[target], byteLength, CUsage[usage]);\r\n        else\r\n            buffer.paddingWithData(data, usage, component);\r\n        this.reglBuffer = buffer;\r\n        this.stats.bufferCount++;\r\n        return buffer;\r\n    }\r\n\r\n    /**\r\n     * create STREAM_DRAW buffer\r\n     * @param data \r\n     * @param target \r\n     * @returns \r\n     */\r\n    public createStreambuffer = (data: ShapedArrayFormat, target: SArraybufferTarget): GBuffer => {\r\n        const usage = 'STREAM_DRAW', component = 'FLOAT', dimension = 'POINTS';\r\n        const buffer = this.streamPool.pop() || new GBuffer(this.gl, target, usage, component, dimension);\r\n        buffer.bind();\r\n        buffer.paddingWithData(data, usage, component);\r\n        this.reglBuffer = buffer;\r\n        return buffer;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param streambuffer \r\n     */\r\n    public destoryStreambuffer = (streambuffer: GBuffer): void => {\r\n        this.streamPool.push(streambuffer);\r\n    }\r\n}\r\n\r\nexport { BufferState }\r\n\r\n","import { check } from \"../util/check\";\r\nimport { IStats } from \"../util/createStats\";\r\nimport { Extension } from \"../core/Extension\";\r\nimport { CPrimitive } from \"../core/Constant\";\r\nimport { BufferState } from \"./BufferState\";\r\nimport { ShapedArrayFormat } from \"../core/Format\";\r\nimport { GElementsbuffer, REGLELEMENTBUFFER_SET } from \"../res/GElementsbuffer\";\r\nimport { SComponent, SDimension, SPrimitive, SUsage } from \"../core/Support\";\r\n\r\n/**\r\n * @author axmand\r\n * @description 构造 ELEMENT_ARRAY_BUFFER缓冲\r\n */\r\nclass ElementsState {\r\n    /**\r\n     * \r\n     */\r\n    static ELEMENTBUFFER_SET: Map<number, GElementsbuffer> = REGLELEMENTBUFFER_SET;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private streamPool: GElementsbuffer[] = [];\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private extLib: Extension;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private bufferState: BufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    stats: IStats;\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param extLib \r\n     * @param bufferState \r\n     * @param stats \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        extLib: Extension,\r\n        bufferState: BufferState,\r\n        stats: IStats\r\n    ) {\r\n        this.gl = gl;\r\n        this.extLib = extLib;\r\n        this.bufferState = bufferState;\r\n        this.stats = stats;\r\n    }\r\n\r\n    /**\r\n     * 初始化buffer属性，支持 UNSIGNED_BYTE/BYTE/UNSIGNED_SHORT/SHORT/UNSIGNED_INT/INT\r\n     * @param opts \r\n     * @returns \r\n     */\r\n    private initElements = (\r\n        opts: {\r\n            reglElementbuffer: GElementsbuffer,\r\n            data: ShapedArrayFormat,\r\n            component: SComponent,\r\n            usage: SUsage,\r\n            primitive: SPrimitive,\r\n            count?: number\r\n        }\r\n    ): GElementsbuffer => {\r\n        opts.reglElementbuffer.bind();\r\n        opts.reglElementbuffer.paddingWithData(opts.data, opts.usage, opts.component);\r\n        //推断primitive类型\r\n        if (!opts.primitive) {\r\n            opts.reglElementbuffer.Primitive = opts.reglElementbuffer.Dimension === 1 ?\r\n                CPrimitive['POINTS'] : opts.reglElementbuffer.Dimension === 2 ?\r\n                    CPrimitive['LINES'] : opts.reglElementbuffer.Dimension === 3 ?\r\n                        CPrimitive['TRIANGLES'] : CPrimitive[opts.primitive];\r\n        }\r\n        else opts.reglElementbuffer.Primitive = CPrimitive[opts.primitive || 'TRIANGLES'];\r\n        //修正vertcount\r\n        opts.count = opts.count || opts.reglElementbuffer.ByteLength;\r\n        if (opts.component === 'UNSIGNED_SHORT')\r\n            opts.count >>= 1;\r\n        else if (opts.component === 'UNSIGNED_INT')\r\n            opts.count >>= 2;\r\n        //\r\n        opts.reglElementbuffer.VertCount = opts.count;\r\n        return opts.reglElementbuffer;\r\n    }\r\n\r\n    /**\r\n     * 修正webgl支持的element buffer数据类型\r\n     * @param component \r\n     * @returns \r\n     */\r\n    private fixComponent = (component: SComponent): SComponent => {\r\n        switch (component) {\r\n            case 'UNSIGNED_BYTE':\r\n            case 'BYTE':\r\n                component = 'UNSIGNED_BYTE';\r\n                break;\r\n            case 'UNSIGNED_SHORT':\r\n            case 'SHORT':\r\n                component = 'UNSIGNED_SHORT';\r\n                break;\r\n            case 'UNSIGNED_INT':\r\n            case 'INT':\r\n                component = this.extLib.get('OES_element_index_uint') ? 'UNSIGNED_INT' : 'UNSIGNED_SHORT';\r\n                break;\r\n            default:\r\n                check(false, `ElementsState Error: unvilade paramter ${component}`);\r\n        }\r\n        return component;\r\n    }\r\n\r\n    /**\r\n     * 根据id获取REGLElementbuffer对象\r\n     * @param id \r\n     * @returns \r\n     */\r\n    public getElementsbuffer = (id: number): GElementsbuffer => {\r\n        return ElementsState.ELEMENTBUFFER_SET.get(id);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public createElementsbuffer = (\r\n        opts: {\r\n            data: ShapedArrayFormat,\r\n            component: SComponent,\r\n            usage?: SUsage,\r\n            primitive?: SPrimitive,\r\n            dimension?: SDimension,\r\n            count?: number\r\n        }\r\n    ): GElementsbuffer => {\r\n        const data = opts.data,\r\n            count = opts.count || 0,\r\n            usage = opts.usage || 'STATIC_DRAW',\r\n            target = 'ELEMENT_ARRAY_BUFFER',\r\n            component = this.fixComponent(opts.component) || 'UNSIGNED_SHORT',\r\n            dimension = opts.dimension || 'TRIANGLES',\r\n            primitive = opts.primitive || 'TRIANGLES', //绘制类型\r\n            byteLength = opts.data.length;\r\n        const reglbuffer = this.bufferState.createBuffer({\r\n            target: target,\r\n            data: data,\r\n            usage: usage,\r\n            component: component,\r\n            dimension: dimension,\r\n            byteLength: byteLength\r\n        });\r\n        const reglElementbuffer = new GElementsbuffer(reglbuffer, primitive);\r\n        this.stats.elementsCount++;\r\n        return this.initElements({\r\n            reglElementbuffer: reglElementbuffer,\r\n            data: data,\r\n            component: component,\r\n            usage: usage,\r\n            primitive: primitive,\r\n            count: count\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public createStreamElementsbuffer = (\r\n        opts: {\r\n            data: ShapedArrayFormat,\r\n            component: SComponent,\r\n            usage?: SUsage,\r\n            primitive?: SPrimitive,\r\n            dimension?: SDimension,\r\n            count?: number\r\n        }\r\n    ): GElementsbuffer => {\r\n        const data = opts.data,\r\n            count = opts.count || 0,\r\n            usage = opts.usage || 'STREAM_DRAW',\r\n            target = 'ELEMENT_ARRAY_BUFFER',\r\n            component = this.fixComponent(opts.component) || 'UNSIGNED_SHORT',\r\n            dimension = opts.dimension || 'TRIANGLES',\r\n            primitive = opts.primitive || 'TRIANGLES', //绘制类型\r\n            byteLength = opts.data.length;\r\n        const reglbuffer = this.bufferState.createBuffer({\r\n            target: target,\r\n            data: data,\r\n            usage: usage,\r\n            component: component,\r\n            dimension: dimension,\r\n            byteLength: byteLength\r\n        });\r\n        const reglElementbuffer = new GElementsbuffer(reglbuffer, primitive);\r\n        this.stats.elementsCount++;\r\n        return this.initElements({\r\n            reglElementbuffer: reglElementbuffer,\r\n            data: data,\r\n            component: component,\r\n            usage: usage,\r\n            primitive: primitive,\r\n            count: count\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param streamElementbuffer \r\n     */\r\n    public destoryStreamElementsbuffer = (streamElementbuffer:GElementsbuffer):void=>{\r\n        this.streamPool.push(streamElementbuffer);\r\n    }\r\n}\r\n\r\nexport { ElementsState }","import { IStats } from \"../util/createStats\";\r\nimport { Dispose } from \"../core/Dispose\";\r\nimport { SRenderbufferColor } from \"../core/Support\";\r\nimport { CRenderbufferColor } from \"../core/Constant\";\r\n\r\n/**\r\n * RBO 资源集\r\n */\r\nconst RENDERBUFFER_SET: Map<number, GRenderbuffer> = new Map();\r\n\r\n/**\r\n * @author axmand\r\n * @description\r\n * 1. renderbuffer是由应用程序分配的2d图像缓冲区，渲染缓冲可用于：\r\n * -分配和存储\r\n * -用于缓冲区对象FBO中的颜色、深度、或模板附件\r\n * \r\n * 2.渲染缓冲器类似于提供可绘制的离屏窗口系统，例如pbuffer。但是渲染缓冲区不能直接用作webgl的纹理对象\r\n * -RBO和texture都可用被attach到fbo\r\n * -Color、Depth和Stencil提供附着点\r\n * -对FBO操作\r\n * \r\n * 3.清理屏幕调用 gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT|gl.STENCIL_BUFFER_BIT)彻底清理FBO附着类型\r\n * \r\n */\r\nclass GRenderbuffer extends Dispose {\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        const gl = this.gl;\r\n        const handler = this.renderbuffer;\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, null);\r\n        gl.deleteRenderbuffer(handler);\r\n        this.renderbuffer = null;\r\n        this.refCount = 0;\r\n        RENDERBUFFER_SET.delete(this.ID);\r\n        this.stats.renderbufferCount--;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    decRef(): void {\r\n        if (--this.refCount <= 0) this.dispose();\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * actual webgl rbo\r\n     */\r\n    private renderbuffer: WebGLRenderbuffer;\r\n\r\n    /**\r\n     * RBO数据组织方式，如gl.RGBA4\r\n     */\r\n    private format: SRenderbufferColor;\r\n\r\n    /**\r\n     * RBO - pixel width\r\n     */\r\n    private width: number;\r\n\r\n    /**\r\n     * RBO - pixel height\r\n     */\r\n    private height: number;\r\n\r\n    /**\r\n     * global stats\r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * RBO - pixel width\r\n     */\r\n    get Width(): number {\r\n        return this.width;\r\n    }\r\n\r\n    /**\r\n     * RBO - pixel height\r\n     */\r\n    get Height(): number {\r\n        return this.height;\r\n    }\r\n\r\n    /**\r\n     * actual webgl rbo\r\n     */\r\n    get Renderbuffer(): WebGLRenderbuffer {\r\n        return this.renderbuffer;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Format(): number {\r\n        return CRenderbufferColor[this.format];\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param width \r\n     * @param height \r\n     * @param format \r\n     * @param stats \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        width: number,\r\n        height: number,\r\n        format: SRenderbufferColor,\r\n        stats: IStats,\r\n    ) {\r\n        super();\r\n        this.gl = gl;\r\n        this.renderbuffer = gl.createRenderbuffer();\r\n        this.format = format || 'RGBA4';\r\n        this.width = width;\r\n        this.height = height;\r\n        this.stats = stats;\r\n        this.stats.renderbufferCount++;\r\n        RENDERBUFFER_SET.set(this.ID, this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public bind = (): void => {\r\n        const gl = this.gl;\r\n        gl.bindRenderbuffer(gl.RENDERBUFFER, this.renderbuffer);\r\n        gl.renderbufferStorage(gl.RENDERBUFFER, this.Format, this.width, this.height);\r\n        this.refCount++;\r\n    }\r\n}\r\n\r\nexport {\r\n    RENDERBUFFER_SET,\r\n    GRenderbuffer\r\n}","import { Dispose } from \"../core/Dispose\";\r\nimport { GTexture } from \"./GTexture\";\r\nimport { GRenderbuffer } from './GRenderbuffer';\r\nimport { SAttachmentTarget } from \"../core/Support\";\r\nimport { CAttachmentTarget } from \"../core/Constant\";\r\n\r\n/**\r\n * @author axmand\r\n */\r\nclass GAttachment extends Dispose {\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    decRef(): void {\r\n        if (--this.refCount <= 0)\r\n            this.dispose();\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private reglTexture: GTexture;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private reglRenderbuffer: GRenderbuffer;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private width: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private height: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private target: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Texture(): GTexture {\r\n        return this.reglTexture;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param target \r\n     * @param attach \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        target: SAttachmentTarget,\r\n        attach: GTexture | GRenderbuffer\r\n    ) {\r\n        super();\r\n        this.gl = gl;\r\n        this.target = CAttachmentTarget[target || 'TEXTURE_2D'] || 0;\r\n        if (attach instanceof GTexture)\r\n            this.reglTexture = attach;\r\n        else if (attach instanceof GRenderbuffer)\r\n            this.reglRenderbuffer = attach;\r\n        this.width = this.reglTexture?.Width || this.reglRenderbuffer?.Width || 0;\r\n        this.height = this.reglTexture?.Height || this.reglRenderbuffer?.Height || 0;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param location \r\n     */\r\n    public attach = (location: number): void => {\r\n        const gl = this.gl;\r\n        if (this.reglTexture) \r\n            gl.framebufferTexture2D(gl.FRAMEBUFFER, location, this.target, this.reglTexture.Texutre, 0);\r\n        else \r\n            gl.framebufferRenderbuffer(gl.FRAMEBUFFER, location, this.target, this.reglRenderbuffer.Renderbuffer);\r\n    }\r\n}\r\n\r\nexport { GAttachment }","import { Extension } from \"../core/Extension\";\r\nimport { Limit } from \"../core/Limit\";\r\nimport { SRenderbufferColor, STextureComponent } from \"../core/Support\";\r\nimport { GAttachment } from \"../res/GAttachment\";\r\nimport { FRAMEBUFFER_SET, GFramebuffer } from \"../res/GFramebuffer\";\r\nimport { GRenderbuffer } from \"../res/GRenderbuffer\";\r\nimport { GTexture } from \"../res/GTexture\";\r\nimport { IStats } from \"../util/createStats\";\r\nimport { RenderbufferState } from \"./RenderbufferState\";\r\nimport { TextureState } from \"./TextureState\";\r\n\r\n/**\r\n * empty uint8array \r\n */\r\nconst UINT8EMPTY0 = new Uint8Array(0);\r\n\r\n/**\r\n * \r\n */\r\nclass FramebufferState {\r\n    /**\r\n     * \r\n     */\r\n    static FRAMEBUFFER_SET: Map<number, GFramebuffer> = FRAMEBUFFER_SET;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private textureState: TextureState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private renderbufferState: RenderbufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private extLib: Extension;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private limLib: Limit;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private current: GFramebuffer;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private next: GFramebuffer;\r\n\r\n    /**\r\n     * \r\n     */\r\n    set Current(v: GFramebuffer) {\r\n        this.current = v;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Current(): GFramebuffer {\r\n        return this.current;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    set Next(v: GFramebuffer) {\r\n        this.next = v;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Next(): GFramebuffer {\r\n        return this.next;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param textureState \r\n     * @param renderbufferState \r\n     * @param extLib \r\n     * @param limLib \r\n     * @param stats \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        textureState: TextureState,\r\n        renderbufferState: RenderbufferState,\r\n        extLib: Extension,\r\n        limLib: Limit,\r\n        stats: IStats\r\n    ) {\r\n        this.gl = gl;\r\n        this.textureState = textureState;\r\n        this.renderbufferState = renderbufferState;\r\n        this.extLib = extLib;\r\n        this.limLib = limLib;\r\n        this.stats = stats;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private allocAttachment = (\r\n        opts: {\r\n            w: number,\r\n            h: number,\r\n            c: number,\r\n            isTexture: boolean,\r\n            format: SRenderbufferColor,\r\n            component: STextureComponent\r\n        }\r\n    ): GAttachment => {\r\n        const gl = this.gl;\r\n        if (opts.isTexture) {\r\n            const texture = this.textureState.createTexture2D(\r\n                UINT8EMPTY0,\r\n                opts.w,\r\n                opts.h,\r\n                opts.c\r\n            );\r\n            //texutre.refCount = 0;\r\n            return new GAttachment(gl, 'TEXTURE_2D', texture);\r\n        }\r\n        else {\r\n            const rbo = this.renderbufferState.createRenderbuffer({\r\n                w: opts.w,\r\n                h: opts.h,\r\n                format: opts.format || 'RGBA4'\r\n            });\r\n            // rbo.refCount = 0;\r\n            return new GAttachment(gl, 'RENDERBUFFER', rbo);\r\n        }\r\n    }\r\n\r\n    public createFramebuffer = (\r\n        opts: {\r\n            colors?: (GTexture | GRenderbuffer)[],\r\n            depth?: GRenderbuffer,\r\n            stencil?: GRenderbuffer,\r\n            depthStencil?: GRenderbuffer\r\n        }\r\n    ): GFramebuffer => {\r\n        const gl = this.gl;\r\n        const fbo = new GFramebuffer(gl, this.limLib, this.stats);\r\n        //1.colors\r\n        const colorAttachments: GAttachment[] = [];\r\n        opts.colors?.forEach((color: GTexture | GRenderbuffer) => {\r\n            const TYPE = color instanceof GTexture ? 'TEXTURE_2D' : 'RENDERBUFFER';\r\n            colorAttachments.push(new GAttachment(gl, TYPE, color));\r\n        });\r\n        //2.depth\r\n        const depthAttachment: GAttachment = !opts.depth ? null : new GAttachment(gl, 'RENDERBUFFER', opts.depth);\r\n        //3.stencil\r\n        const stencilAttachment: GAttachment = !opts.stencil ? null : new GAttachment(gl, 'RENDERBUFFER', opts.stencil);\r\n        //4.depthStencil\r\n        const depthStencilAttachment: GAttachment = !opts.depthStencil ? null : new GAttachment(gl, 'RENDERBUFFER', opts.depthStencil);\r\n        //5.refresh attachment\r\n        fbo.refreshAttachment({\r\n            colorAttachments,\r\n            depthAttachment,\r\n            stencilAttachment,\r\n            depthStencilAttachment\r\n        });\r\n        fbo.updateFramebuffer();\r\n        return fbo;\r\n    }\r\n}\r\n\r\nexport { FramebufferState }","import { check } from '../util/check';\r\nimport { Dispose } from '../core/Dispose';\r\nimport { ShaderState } from '../state/ShaderState';\r\nimport { StringState } from '../state/StringState';\r\nimport { CActiveTarget } from '../core/Constant';\r\n\r\n/**\r\n * program set\r\n */\r\nconst PROGRAM_SET: Map<number, GProgram> = new Map();\r\n\r\n/**\r\n * actived uniform or attribute\r\n */\r\ninterface IActiveInfo {\r\n    /**\r\n     * attribute/uniform name\r\n     */\r\n    name: string,\r\n\r\n    /**\r\n     * store in stingStore's str id\r\n     */\r\n    id: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    location: WebGLUniformLocation | number,\r\n\r\n    /**\r\n     * original info (WebGL Active Info)\r\n     */\r\n    info: WebGLActiveInfo\r\n}\r\n\r\n/**\r\n * @author axmand\r\n */\r\nclass GProgram extends Dispose {\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    decRef(): void {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * stringStore.id()\r\n     */\r\n    private fragId: number;\r\n\r\n    /**\r\n     * stringStore.id()\r\n     */\r\n    private vertId: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private program: WebGLProgram;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private uniforms: IActiveInfo[];\r\n\r\n    /**\r\n     * \r\n     */\r\n    private attributes: IActiveInfo[];\r\n\r\n    /**\r\n     * \r\n     */\r\n    private attPosition: Map<string, IActiveInfo>;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private shaderState: ShaderState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stringState: StringState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Uniforms(): IActiveInfo[] {\r\n        return this.uniforms;\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Attributes(): IActiveInfo[] {\r\n        return this.attributes;\r\n    }\r\n\r\n    /**\r\n     * 获取激活的attribute信息，包含name/location, 为vao对象绑定备用\r\n     */\r\n    get AttActiveInfo(): Map<string, IActiveInfo> {\r\n        if (!this.attPosition) {\r\n            this.attPosition = new Map();\r\n            this.attributes.forEach((att: IActiveInfo) => {\r\n                this.attPosition.set(att.name, att);\r\n            })\r\n        }\r\n        return this.attPosition;\r\n    }\r\n\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        shaderState: ShaderState,\r\n        stringState: StringState,\r\n        fragShaderId: number,\r\n        vertShaderId: number,\r\n        attribLocations: string[]\r\n    ) {\r\n        super();\r\n        this.gl = gl;\r\n        this.fragId = fragShaderId;\r\n        this.vertId = vertShaderId;\r\n        this.program = null;\r\n        this.uniforms = [];\r\n        this.attributes = [];\r\n        this.shaderState = shaderState;\r\n        this.stringState = stringState;\r\n        this.link(attribLocations);\r\n        PROGRAM_SET.set(this.ID, this);\r\n    }\r\n\r\n    /**\r\n     * switch to this program\r\n     */\r\n    use = () => {\r\n        check(this.program, `Program错误，空的program无法切换使用`)\r\n        this.gl.useProgram(this.program);\r\n    }\r\n\r\n    /**\r\n     * link program\r\n     * @param attributeLocations \r\n     */\r\n    private link = (attributeLocations: string[]) => {\r\n        const gl = this.gl, shaderState = this.shaderState, fragId = this.fragId, vertId = this.vertId;\r\n        const fragShader = shaderState.createShader('FRAGMENT_SHADER', fragId);\r\n        const vertShader = shaderState.createShader('VERTEX_SHADER', vertId);\r\n        const program = this.program = gl.createProgram();\r\n        gl.attachShader(program, fragShader.Shader);\r\n        gl.attachShader(program, vertShader.Shader);\r\n        attributeLocations?.forEach((v: any, i: number) => {\r\n            const binding = attributeLocations[i];\r\n            gl.bindAttribLocation(program, i, binding);\r\n        });\r\n        gl.linkProgram(program);\r\n        check(gl.getProgramParameter(program, gl.LINK_STATUS), `Program错误，编译错误${gl.getProgramInfoLog(program)}`);\r\n        this.activeUniforms();\r\n        this.activeAttributes();\r\n    }\r\n\r\n    /**\r\n     * get actived uniforms\r\n     */\r\n    private activeUniforms = () => {\r\n        const insertActvieInfo = (info: IActiveInfo) => {\r\n            for (let i = 0, len = this.uniforms.length; i < len; i++) {\r\n                if (this.uniforms[i].id === info.id) {\r\n                    this.uniforms[i].location = info.location;\r\n                    return\r\n                }\r\n            }\r\n            this.uniforms.push(info);\r\n        }\r\n        const gl = this.gl, program = this.program, stringState = this.stringState;\r\n        //uniforms\r\n        const numUniforms = gl.getProgramParameter(program, CActiveTarget['ACTIVE_UNIFORMS']);\r\n        for (let i = 0; i < numUniforms; ++i) {\r\n            const info = gl.getActiveUniform(program, i);\r\n            if (info) {\r\n                if (info.size > 1) {\r\n                    for (let j = 0, len = info.size; j < len; ++j) {\r\n                        const name = info.name.replace(`[0]`, `[${j}]`);\r\n                        insertActvieInfo({\r\n                            name: name,\r\n                            id: stringState.id(name),\r\n                            location: gl.getUniformLocation(program, name),\r\n                            info: info\r\n                        });\r\n                    }\r\n                }\r\n                let uniName = info.name;\r\n                if (info.size > 1) {\r\n                    uniName = uniName.replace('[0]', '');\r\n                }\r\n                insertActvieInfo({\r\n                    name: uniName,\r\n                    id: stringState.id(uniName),\r\n                    location: gl.getUniformLocation(program, uniName),\r\n                    info: info\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * get actived attributes\r\n     */\r\n    private activeAttributes = () => {\r\n        const insertActiveInfo = (info: IActiveInfo) => {\r\n            for (let i = 0, len = this.attributes.length; i < len; i++) {\r\n                if (this.attributes[i].id === info.id) {\r\n                    this.attributes[i].location = info.location;\r\n                    return;\r\n                }\r\n            }\r\n            this.attributes.push(info);\r\n        }\r\n        const gl = this.gl, program = this.program;\r\n        const numAttributes = gl.getProgramParameter(program, CActiveTarget['ACTIVE_ATTRIBUTES']);\r\n        for (let i = 0; i < numAttributes; ++i) {\r\n            const info = gl.getActiveAttrib(program, i);\r\n            if (info)\r\n                insertActiveInfo({\r\n                    name: info.name,\r\n                    id: this.stringState.id(info.name),\r\n                    location: gl.getAttribLocation(program, info.name),\r\n                    info\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    PROGRAM_SET,\r\n    IActiveInfo,\r\n    GProgram\r\n}","import { check } from \"../util/check\";\r\nimport { ShaderState } from \"./ShaderState\";\r\nimport { StringState } from \"./StringState\";\r\nimport { PROGRAM_SET, GProgram } from \"../res/GProgram\";\r\n\r\n/**\r\n * @author axmand\r\n */\r\nclass ProgramState {\r\n    /**\r\n     * \r\n     */\r\n    static PROGRAM_SET: Map<number, GProgram> = PROGRAM_SET;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private shaderState: ShaderState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stringState: StringState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private reglProgram: GProgram;\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Current(): GProgram {\r\n        return this.reglProgram;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param shaderState \r\n     * @param stringState \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        shaderState: ShaderState,\r\n        stringState: StringState,\r\n    ) {\r\n        this.gl = gl;\r\n        this.shaderState = shaderState;\r\n        this.stringState = stringState;\r\n        this.reglProgram = null;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param frag \r\n     * @param vert \r\n     * @param attribLocations \r\n     * @returns \r\n     */\r\n    public createProgram = (\r\n        frag: string,\r\n        vert: string,\r\n        attribLocations: string[]\r\n    ): GProgram => {\r\n        check(vert.length >= 0, `ProgramState error: vertex shader is missing`);\r\n        check(frag.length >= 0, `ProgramState error: fragment shader is missing`);\r\n        const gl = this.gl, shaderState = this.shaderState, stringState = this.stringState;\r\n        const fragShader = shaderState.createShader('FRAGMENT_SHADER', stringState.id(frag));\r\n        const vertShader = shaderState.createShader('VERTEX_SHADER', stringState.id(vert));\r\n        const reglProgram = new GProgram(gl, shaderState, stringState, fragShader.ID, vertShader.ID, attribLocations);\r\n        return reglProgram;\r\n    }\r\n\r\n    /**\r\n     * switch program\r\n     * @param reglProgramId \r\n     */\r\n    public useProgram = (reglProgramId: number): void => {\r\n        const reglProgram = ProgramState.PROGRAM_SET.get(reglProgramId);\r\n        reglProgram.use();\r\n        this.reglProgram = reglProgram;\r\n    }\r\n}\r\n\r\nexport { ProgramState }","\r\nimport { Extension } from \"../core/Extension\";\r\nimport { Limit } from \"../core/Limit\";\r\nimport { SRenderbufferColor } from \"../core/Support\";\r\nimport { GRenderbuffer, RENDERBUFFER_SET } from \"../res/GRenderbuffer\";\r\nimport { check } from \"../util/check\";\r\nimport { IStats } from \"../util/createStats\";\r\n\r\n/**\r\n * @author axmand\r\n */\r\nclass RenderbufferState {\r\n\r\n    /**\r\n     * \r\n     */\r\n    static RENDERBUFFER_SET: Map<number, GRenderbuffer> = RENDERBUFFER_SET;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private extLib: Extension;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private limLib: Limit;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param extLib \r\n     * @param limLib \r\n     * @param stats \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        extLib: Extension,\r\n        limLib: Limit,\r\n        stats: IStats\r\n    ) {\r\n        this.gl = gl;\r\n        this.extLib = extLib;\r\n        this.limLib = limLib;\r\n        this.stats = stats;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public createRenderbuffer = (\r\n        opts: {\r\n            w: number,\r\n            h: number,\r\n            format: SRenderbufferColor\r\n        }\r\n    ): GRenderbuffer => {\r\n        const gl = this.gl, w = opts.w || 0, h = opts.h || 0, f = opts.format || 'RGBA4';\r\n        check(w > 0 && h > 0 && w <= this.limLib.maxTextureSize && h <= this.limLib.maxTextureSize, `Renderbuffer error: 分辨率错误`);\r\n        const rbo = new GRenderbuffer(gl, w, h, f, this.stats);\r\n        rbo.bind();\r\n        return rbo;\r\n    }\r\n}\r\n\r\nexport { RenderbufferState }","\r\nimport { check } from '../util/check';\r\nimport { Dispose } from '../core/Dispose';\r\nimport { CShaderTarget } from '../core/Constant';\r\nimport { SShaderTarget } from '../core/Support';\r\n\r\n/**\r\n * \r\n */\r\nconst FRAGSHADER_SET: Map<number, GShader> = new Map();\r\n\r\n/**\r\n * \r\n */\r\nconst VERTSHADER_SET: Map<number, GShader> = new Map();\r\n\r\n/**\r\n * @author axamnd\r\n * @example\r\n * const shader = new REGLShader(gl, id);\r\n */\r\nclass GShader extends Dispose {\r\n    /**\r\n     * \r\n     */\r\n    dispose(): void {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    decRef(): void {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private shader: WebGLShader;\r\n\r\n    /**\r\n     * shader type: FRAG/VERT\r\n     */\r\n    private target: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private source: string;\r\n\r\n    /**\r\n     * \r\n     */\r\n    get Shader(): WebGLShader {\r\n        return this.shader;\r\n    }\r\n\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        id: number,\r\n        source: string,\r\n        target: SShaderTarget\r\n    ) {\r\n        super();\r\n        this.id = id;\r\n        this.gl = gl;\r\n        this.target = CShaderTarget[target];\r\n        this.shader = gl.createShader(this.target);\r\n        this.source = source;\r\n        gl.shaderSource(this.shader, source);\r\n        gl.compileShader(this.shader);\r\n        check(gl.getShaderParameter(this.shader, gl.COMPILE_STATUS), `shader编译错误 - ${gl.getShaderInfoLog(this.shader)}`);\r\n        this.target === CShaderTarget['FRAGMENT_SHADER'] ? FRAGSHADER_SET.set(this.ID, this) : VERTSHADER_SET.set(this.ID, this);\r\n    }\r\n}\r\n\r\nexport {\r\n    VERTSHADER_SET,\r\n    FRAGSHADER_SET,\r\n    GShader\r\n}","import { IStats } from './../util/createStats';\r\nimport { StringState } from './StringState';\r\nimport { SShaderTarget } from '../core/Support';\r\nimport { GShader, FRAGSHADER_SET, VERTSHADER_SET } from '../res/GShader';\r\n\r\n/**\r\n * \r\n */\r\nclass ShaderState {\r\n    /**\r\n     * frag shader map\r\n     */\r\n    private static FRAGSHADER_SET: Map<number, GShader> = FRAGSHADER_SET;\r\n\r\n    /**\r\n     * vertex shader map\r\n     */\r\n    private static VERTSHADER_SET: Map<number, GShader> = VERTSHADER_SET;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stringState: StringState;\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param stringState \r\n     * @param stats \r\n     */\r\n    constructor(\r\n        gl:WebGLRenderingContext,\r\n        stringState:StringState,\r\n        stats:IStats\r\n    ){\r\n        this.gl = gl;\r\n        this.stringState = stringState;\r\n        this.stats = stats;\r\n    }\r\n\r\n    /**\r\n     * create new reglshader object\r\n     * @example\r\n     * const reglShader = shaderState.createShader('FRAGMENT_SHADER', this.stringState.id(FragRawSourceText));\r\n     * @param target \r\n     * @param id \r\n     * @returns \r\n     */\r\n    public createShader = (target: SShaderTarget, id: number): GShader => {\r\n        const SHADER_SET = target === 'FRAGMENT_SHADER' ? ShaderState.FRAGSHADER_SET : ShaderState.VERTSHADER_SET;\r\n        let shader = SHADER_SET.get(id);\r\n        if (!shader) {\r\n            const source = this.stringState.str(id);\r\n            shader = new GShader(this.gl, id, source, target);\r\n        }\r\n        return shader;\r\n    }\r\n}\r\n\r\nexport { ShaderState }","/**\r\n * 存放shader text的仓库\r\n * @example\r\n * const stringState = new StringState();\r\n * stringState.id(`112`);\r\n * stringState.str(1);\r\n */\r\nclass StringState {\r\n    /**\r\n     * 存储string的key-value对应值\r\n     */\r\n    private static STRINGSTATE_SET: Map<string, number> = new Map();\r\n\r\n    /**\r\n     * 数组长度作为stringState map对象的key\r\n     */\r\n    private stringValues: string[] = [];\r\n\r\n    /**\r\n     * \r\n     * @param str \r\n     * @returns \r\n     */\r\n    id = (str: string) => {\r\n        let result = StringState.STRINGSTATE_SET.get(str);\r\n        if (result) return result;\r\n        result =  this.stringValues.length;\r\n        StringState.STRINGSTATE_SET.set(str, result);\r\n        this.stringValues.push(str);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param id \r\n     * @returns \r\n     */\r\n    str = (id: number) => {\r\n        return this.stringValues[id];\r\n    }\r\n}\r\n\r\nexport { StringState }","/**\r\n * 合并target/exts所有对象都包含的属性\r\n * @param target \r\n * @param exts \r\n * @returns \r\n */\r\nconst getExtend = (target: object, ...exts: object[]): object => {\r\n    exts.forEach((ext: object) => {\r\n        const keys = Object.keys(ext);\r\n        for (let i = 0, len = keys.length; i < len; ++i)\r\n            target[keys[i]] = ext[keys[i]];\r\n    });\r\n    return target;\r\n}\r\n\r\n/**\r\n * 以target对象为核心，只覆盖target对象中包含的属性\r\n * @param target \r\n * @param exts \r\n * @returns \r\n */\r\nconst getCopy = (target: object, ...exts: object[]): object => {\r\n    exts.forEach((ext: object) => {\r\n        Object.keys(target)?.forEach((key:string)=>{\r\n            target[key] = ext[key] || target[key];\r\n        });  \r\n    });\r\n    return target;\r\n}\r\n\r\nexport { \r\n    getExtend,\r\n    getCopy \r\n}","import { bufferPool0 } from './../pool/BufferPool';\r\nimport { TypedArrayFormat } from \"../core/Format\";\r\n\r\n/**\r\n * empity float\r\n */\r\nconst FLOAT = new Float32Array(1), INT = new Uint32Array(FLOAT.buffer);\r\n\r\n/**\r\n * 转换成半精度数组\r\n * @param array \r\n * @returns \r\n */\r\nconst toHalfFloat = (array: TypedArrayFormat | number[]): TypedArrayFormat => {\r\n    const len = array.length;\r\n    const ushorts = bufferPool0.allocType('UNSIGNED_SHORT', len);\r\n    for (let i = 0; i < len; ++i) {\r\n        if (isNaN(array[i])) ushorts[i] = 0xffff;\r\n        else if (array[i] === Infinity) ushorts[i] = 0x7c00;\r\n        else if (array[i] === -Infinity) ushorts[i] = 0xfc00;\r\n        else {\r\n            FLOAT[0] = array[i];\r\n            const x = INT[0];\r\n            const sgn = (x >>> 31) << 15;\r\n            const exp = ((x << 1) >>> 24) - 127;\r\n            const frac = (x >> 13) & ((1 << 10) - 1);\r\n            if (exp < -24) ushorts[i] = sgn;\r\n            else if (exp < -14) {\r\n                const s = -14 - exp;\r\n                ushorts[i] = sgn + ((frac + (1 << 10)) >> s);\r\n            }\r\n            else if (exp > 15) ushorts[i] = sgn + 0x7c00;\r\n            else ushorts[i] = sgn + ((exp + 15) << 10) + frac;\r\n        }\r\n    }\r\n    return ushorts;\r\n}\r\n\r\nexport { toHalfFloat }","import { bufferPool0 } from \"../pool/BufferPool\";\r\nimport { ITexImage } from \"../pool/TexImagePool\";\r\nimport { toHalfFloat } from \"../util/toHalfFloat\";\r\nimport { TypedArrayFormat } from \"./Format\";\r\nimport { SComponent } from \"./Support\";\r\n\r\n\r\n/**\r\n * }{debug\r\n * 图像矩阵偏移\r\n */\r\nclass Transpose {\r\n    /**\r\n     * \r\n     * @param image \r\n     * @param size \r\n     * @returns \r\n     */\r\n    private static preConvert = (image: ITexImage, size: number): TypedArrayFormat => {\r\n        const component: SComponent = (image.component === 'HALF_FLOAT_OES' ? 'FLOAT' : image.component) as SComponent;\r\n        return bufferPool0.allocType(component, size);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param image \r\n     * @param data \r\n     */\r\n    private static postConvert = (image: ITexImage, data: TypedArrayFormat): void => {\r\n        if (image.component === 'HALF_FLOAT_OES') {\r\n            image.data = toHalfFloat(data);\r\n            bufferPool0.freeType(data);\r\n        }\r\n        else image.data = data;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param image \r\n     * @param arr \r\n     * @param sx stride x\r\n     * @param sy stride y\r\n     * @param sc stride channel\r\n     * @param offset \r\n     */\r\n    public static TransposeData = (image: ITexImage, arr: TypedArrayFormat, sx: number, sy: number, sc: number, offset: number): TypedArrayFormat => {\r\n        if (!arr) return arr;\r\n        const w = image.width, h = image.height, c = image.channels, size = w * h * c;\r\n        const data = Transpose.preConvert(image, size);\r\n        let p = 0;\r\n        for (let i = 0; i < h; ++i)\r\n            for (let j = 0; j < w; ++j)\r\n                for (let k = 0; k < c; ++k)\r\n                    data[p++] = arr[sx * j + sy * i + sc * k + offset];\r\n        Transpose.postConvert(image, data);\r\n    }\r\n}\r\n\r\nexport { Transpose }","/**\r\n * 判断输入n是否是2的幂\r\n * @param n \r\n * @returns \r\n */\r\nconst isPowerOf2 = (n: number): boolean => {\r\n    return n > 0 && (n & (n - 1)) == 0;\r\n}\r\nexport { isPowerOf2 }","import { STextureComponent } from \"../core/Support\";\r\nimport { CTextureComponent, CTextureComponentSize } from \"../core/Constant\";\r\n\r\n/**\r\n * 计算纹理类型的像素值存储所需字节数\r\n * @param component \r\n * @param channels \r\n * @returns \r\n */\r\nconst getPixelSize = (component: STextureComponent, channels: number): number => {\r\n    switch (component) {\r\n        case 'UNSIGNED_SHORT_4_4_4_4':\r\n        case 'UNSIGNED_SHORT_5_5_5_1':\r\n        case 'UNSIGNED_SHORT_5_6_5':\r\n            return 2;\r\n        case 'UNSIGNED_INT_24_8_WEBGL':\r\n            return 4;\r\n        default:\r\n            return CTextureComponentSize[CTextureComponent[component]] * channels;\r\n    }\r\n}\r\n\r\nexport { getPixelSize }","import { check } from \"./check\";\r\nimport { Limit } from \"../core/Limit\";\r\nimport { IMipmap } from \"../pool/MipmapPool\";\r\nimport { ITexInfo } from \"../res/GTexture\";\r\nimport { Extension } from \"../core/Extension\";\r\nimport { isPowerOf2 } from \"./isPowerOf2\";\r\nimport { getPixelSize } from \"./getPixelSize\";\r\nimport { STextureColor, STextureComponent, STextureCompressed } from \"../core/Support\";\r\nimport { CTextureChannelCount, CTextureColor, CTextureCompressed } from \"../core/Constant\";\r\n\r\n/**\r\n * \r\n * @param opts \r\n * @param extLib \r\n * @param limLib \r\n */\r\nconst checkTexture2D = (\r\n    opts: {\r\n        texColor?: STextureColor | STextureCompressed,\r\n        inTexColor?: STextureColor | STextureCompressed,\r\n        component?: STextureComponent,\r\n        width?: number,\r\n        height?: number,\r\n        channels?: number,\r\n        compressed?: boolean                                //默认不写入，根据texColor判断\r\n    },\r\n    extLib: Extension,\r\n    limLib: Limit\r\n): void => {\r\n    opts.component = opts.component || 'BYTE';\r\n    opts.width = opts.width || 1;\r\n    opts.height = opts.height || 1;\r\n    opts.texColor = opts.texColor || 'RGBA';\r\n    opts.channels = opts.channels || CTextureChannelCount[CTextureColor[opts.texColor]];\r\n    opts.compressed = CTextureCompressed[opts.texColor] ? true : false;\r\n    check(opts.component === 'FLOAT' && extLib.get('OES_texture_float'), `CheckTexture2D error: 指定纹理类型需要启用OES_texture_float插件`);\r\n    check(opts.component === 'HALF_FLOAT_OES' && extLib.get('OES_texture_float'), `CheckTexture2D error: 指定纹理类型需要启用OES_texture_float插件`)\r\n    check((opts.component === 'UNSIGNED_SHORT' || opts.component === 'UNSIGNED_INT' || opts.component === 'UNSIGNED_INT_24_8_WEBGL') && extLib.get('WEBGL_depth_texture'), `CheckTexture2D error: 指定纹理类型需要启用WEBGL_depth_texture插件`)\r\n    check(opts.channels > 0 && opts.channels <= 4, `CheckTexture2D error: 纹理通道数错误`);\r\n    check(opts.width > 0 && opts.width <= limLib.maxTextureSize && opts.height > 0 && opts.height <= limLib.maxTextureSize, `CheckTexture2D error: 纹理分辨率错误，长或宽超过设备支持上限${limLib.maxTextureSize}`);\r\n}\r\n\r\n/**\r\n * \r\n * @param texInfo \r\n * @param mipData \r\n * @param extLib \r\n * @param limLib \r\n */\r\nconst checkMipmapTexture2D = (\r\n    texInfo: ITexInfo,\r\n    mipData: IMipmap,\r\n    extLib: Extension,\r\n    limLib: Limit,\r\n): void => {\r\n    //1.检查分辨率信息\r\n    const w = mipData.width, h = mipData.height, c = mipData.channels;\r\n    check(w > 0 && w <= limLib.maxTextureSize && h > 0 && h <= limLib.maxTextureSize, `CheckTexture2D error: 纹理分辨率错误，长或宽超过设备支持上限${limLib.maxTextureSize}`);\r\n    //2.检查纹理拉伸\r\n    if (texInfo.wrapS !== 'CLAMP_TO_EDGE' || texInfo.wrapT !== 'CLAMP_TO_EDGE')\r\n        check(isPowerOf2(w) && isPowerOf2(h), `CheckTexture2D error: 纹理模式非CLAMP时要求分辨率为2的幂`)\r\n    //3.检查mipmap信息\r\n    if (mipData.mipmask === 1) {\r\n        if (w !== 1 && h !== 1)\r\n            check(texInfo.minFilter !== 'LINEAR_MIPMAP_LINEAR' && texInfo.minFilter !== 'LINEAR_MIPMAP_NEAREST' && texInfo.minFilter !== 'NEAREST_MIPMAP_LINEAR' && texInfo.minFilter !== 'NEAREST_MIPMAP_NEAREST', `CheckTexture2D error: min filter必须是mimap类型`);\r\n    }\r\n    else {\r\n        check(isPowerOf2(w) && isPowerOf2(h), `CheckTexture2D error:纹理模式非CLAMP时要求分辨率为2的幂`);\r\n        check(mipData.mipmask === (w << 1) - 1, `CheckTexture2D error:丢失/不合法的mipmask`)\r\n    }\r\n    //4.数据类型检查\r\n    if (mipData.component === 'FLOAT') {\r\n        check(extLib.get('OES_texture_float'), `CheckTexture2D error: FLOAT类型纹理需要开启OES_texture_float`);\r\n        check((texInfo.minFilter !== 'NEAREST' || texInfo.magFilter !== 'NEAREST') && extLib.get('OES_texture_float_linear'), `CheckTexture2D error: filter 不支持非NEAREST插值，需开启OES_texture_float_linear`);\r\n        check(!texInfo.genMipmaps, `CheckTexture2D error: mipmap生成不支持float纹理类型`);\r\n    }\r\n    //5.检查图片是否处理完成\r\n    for (let i = 0; i < 16; ++i) {\r\n        const mipimg = mipData.images[i];\r\n        if (mipimg) {\r\n            const mw = w >> i, mh = h >> i;\r\n            check(mipData.mipmask & (1 << i), `CheckTexture2D error: mipmap数据缺失`);\r\n            check(mipimg.width === mw && mipimg.height === mh, `CheckTexture2D error: 错误的mipmap images shape信息`);\r\n            check(mipimg.texColor === mipData.texColor && mipimg.inTexColor === mipData.inTexColor && mipimg.component === mipData.component, `CheckTexture2D error: 不合适的mipmap image数据类型`);\r\n            //compressed\r\n            if (mipimg.compressed) {\r\n                //check size for compressed images\r\n            }\r\n            else if (mipimg.data) {\r\n                const rowSize = Math.ceil(getPixelSize(mipimg.component, c) * mw / mipimg.unpackAlignment) * mipimg.unpackAlignment;\r\n                check(mipimg.data.byteLength === rowSize * mh, `CheckTexture2D error: 数据缓冲的大小与image格式对应的数据长度不一致`);\r\n            }\r\n        }\r\n    }\r\n    //6.检查压缩纹理\r\n    if (mipData.compressed)\r\n        check(!mipData.genMipmaps, `CheckTexture2D error: 纹理压缩格式不支持生成mipmap`);\r\n}\r\n\r\n/**\r\n * \r\n * @param info \r\n * @param mipmap \r\n * @param faces \r\n * @param limLib \r\n */\r\nconst checkTextureCube = (\r\n    info: ITexInfo,\r\n    mipmap: IMipmap,\r\n    faces: IMipmap[],\r\n    limLib: Limit\r\n): void => {\r\n    const w = mipmap.width, h = mipmap.height, c = mipmap.channels;\r\n    check(w > 0 && w <= limLib.maxTextureSize && h > 0 && h <= limLib.maxTextureSize, `checkTextureCube error: 超过设备支持纹理上限`);\r\n    check(w === h, `checkTextureCube error: 立方体贴图必须是正方形`);\r\n    check(info.wrapS === 'CLAMP_TO_EDGE' && info.wrapT === 'CLAMP_TO_EDGE', `checkTextureCube error: 立方体贴图wrap模式只支持CLAMP_TO_EDGE`);\r\n    //\r\n    faces.forEach(face => {\r\n        check(face.width === w && face.height === h, `checkTextureCube error: 立方体每个纹理单元分辨率必须一致，${face}分辨率错误`);\r\n        // check(face.mipmask === 1, `checkTextureCube error: 不能指定mimap`);\r\n        const mipmaps = face.images;\r\n        for (let k = 0; k < 16; k++) {\r\n            const img = mipmaps[k];\r\n            if (img) {\r\n                const mw = w >> k, mh = h >> k;\r\n                check(face.mipmask & (1 << k), `checkTextureCube error: mipmap数据丢失`);\r\n                check(img.width === mw && img.height === mh, `checkTextureCube error: mipmap纹理分辨率错误`);\r\n                check(img.component === mipmap.component && img.inTexColor === mipmap.inTexColor && img.texColor === mipmap.texColor, `checkTextureCube error: 子图像参数需要一直，包括component/inTexColor/texColor`);\r\n                if (img.compressed) {\r\n                    //判断压缩格式和文件大小是否对齐\r\n                }\r\n                else if (img.data) {\r\n                    check(img.data.byteLength === mw * mh * Math.max(getPixelSize(img.component, c), img.unpackAlignment), `checkTextureCube error: 为压缩格式生成mipmap失败`);\r\n                }\r\n                else {\r\n                    //其他情况待补充\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport {\r\n    checkTextureCube,\r\n    checkTexture2D,\r\n    checkMipmapTexture2D\r\n}","import { SColorSpace, STextureColor, STextureComponent, STextureCompressed } from \"../core/Support\";\r\n\r\n/**\r\n * 纹理超参数\r\n * -描述纹理texture源数据信息，包括数据格式、类型等\r\n */\r\ninterface ITexFlag {\r\n    /**\r\n     * 目标纹理输出类型（输出转换）\r\n     * 默认值：gl.RGBA\r\n     */\r\n    texColor?: STextureColor | STextureCompressed;\r\n\r\n    /**\r\n     * 输入文件纹理数据类型\r\n     * 默认值：gl.RGBA\r\n     */\r\n    inTexColor?: STextureColor | STextureCompressed;\r\n\r\n    /**\r\n     * 纹理数据类型\r\n     * 默认值：gl.BYTE\r\n     */\r\n    component?: STextureComponent;\r\n\r\n    /**\r\n     * 指示纹理是否压缩\r\n     * 不需要显式指定，自动根据输入输出格式判断\r\n     */\r\n    compressed?: boolean;\r\n\r\n    /**\r\n     * 预乘alpha，告诉gl上下文该纹理的颜色值已预先乘过alpha通道值\r\n     * 进行后续blending操作时，RGB无需再与alpha通道相乘\r\n     * 用处1：提高一些效率，减少一次乘法\r\n     * 用处2：应用透明度相乘后的颜色做线性插值时，颜色更符合直觉\r\n     * https://segmentfault.com/a/1190000002990030\r\n     * 默认值：false\r\n     */\r\n    premultiplyAlpha?: boolean;\r\n\r\n    /**\r\n     * Y轴翻转,标识纹理坐标Y是否翻转\r\n     * 默认值：false\r\n     * 0-------- 1.0               1.0\r\n     * |                           |\r\n     * |                           |\r\n     * |                           |-------- 1.0\r\n     * 1.0                         0\r\n     *              翻转后\r\n     */\r\n    flipY?: boolean;\r\n\r\n    /**\r\n     * 应对gl.DrawPixel设置，考虑效率\r\n     * 要求drawPixel时每一行byte大小（读取像素纹理方式）\r\n     */\r\n    unpackAlignment?: 1 | 2 | 4 | 8;\r\n\r\n    /**\r\n     * GL_BROWSER_DEFAULT_WEBGL\r\n     * 指示WebGL是否允许浏览器应用色彩空间转换\r\n     * 默认值：gl.NONE\r\n     */\r\n    colorSpace?: SColorSpace;\r\n\r\n    /**\r\n     * shape - width\r\n     */\r\n    width?: number;\r\n\r\n    /**\r\n     * shape -height\r\n     */\r\n    height?: number;\r\n\r\n    /**\r\n     * shape - channel 通道数量\r\n     * 支持数量<=4 (RGBA)\r\n     */\r\n    channels?: number;\r\n}\r\n\r\n/**\r\n * 构造默认texture超参数，描述纹理信息\r\n */\r\nconst createTexFlag = (): ITexFlag => {\r\n    const texFlags: ITexFlag = {\r\n        inTexColor: 'RGBA',\r\n        texColor: 'RGBA',\r\n        component: 'UNSIGNED_BYTE',\r\n        compressed: false,\r\n        premultiplyAlpha: false,                //未进行alpha通道压缩\r\n        flipY: false,\r\n        unpackAlignment: 1,                     //字节对齐\r\n        colorSpace: 'BROWSER_DEFAULT_WEBGL',    //0x9244, 支持浏览器色彩空间转换\r\n        width: 0,                               //默认纹理宽度0像素\r\n        height: 0,                              //默认纹理高度0像素\r\n        channels: 0                             //默认纹理深度0\r\n    };\r\n    return texFlags;\r\n}\r\n\r\nexport { \r\n    ITexFlag,\r\n    createTexFlag \r\n}","import { getExtend } from '../util/getExtendCopy';\r\nimport { bufferPool0 } from './BufferPool';\r\nimport { TypedArrayFormat } from './../core/Format';\r\nimport { ITexFlag, createTexFlag } from './../util/createTexFlag';\r\n\r\n/**\r\n * Texture Image 属性设置\r\n */\r\ninterface ITexImage extends ITexFlag {\r\n    /**\r\n     * default 0\r\n     */\r\n    xOffset: number;\r\n\r\n    /**\r\n     * default 0\r\n     */\r\n    yOffset: number;\r\n\r\n    /**\r\n     * https://developer.mozilla.org/en-US/docs/Web/API/ArrayBufferView\r\n     * default: Uint8Array\r\n     */\r\n    data: TypedArrayFormat;\r\n\r\n    /**\r\n     * 指示下一帧是否释放资源\r\n     */\r\n    neddsFree: boolean;\r\n\r\n    /** \r\n     * 指示是否需要复制到下一framebuffer中\r\n     */\r\n    neddsCopy: boolean;\r\n}\r\n\r\n/**\r\n * create default TexImage setting\r\n * @returns \r\n */\r\nconst createTexImage = (): ITexImage => {\r\n    return {\r\n        xOffset: 0,\r\n        yOffset: 0,\r\n        data: null,\r\n        neddsCopy: false,\r\n        neddsFree: false\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nclass TexImagePool {\r\n    /**\r\n     * \r\n     */\r\n    private texImageQueue: ITexImage[] = [];\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    allocImage = (): ITexImage => {\r\n        if (this.texImageQueue.length > 0)\r\n            return this.texImageQueue.pop();\r\n        const A = createTexImage(), B = createTexFlag();\r\n        return getExtend(A, B) as ITexImage;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param texImage \r\n     */\r\n    freeImage = (texImage: ITexImage): void => {\r\n        if (texImage.neddsFree) bufferPool0.free(texImage.data);\r\n        getExtend(texImage, createTexImage());\r\n        this.texImageQueue.push(texImage);\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nconst texImagePool0 = new TexImagePool();\r\n\r\nexport {\r\n    ITexImage,\r\n    texImagePool0\r\n}","import { CMipmapHint } from \"../core/Constant\";\r\nimport { createTexFlag, ITexFlag } from \"../util/createTexFlag\";\r\nimport { ITexImage, texImagePool0 } from \"./TexImagePool\";\r\n\r\n/**\r\n * \r\n */\r\ninterface IMipmap extends ITexFlag {\r\n    /**\r\n     * 指代是否自动生成mipmap image\r\n     */\r\n    genMipmaps?: boolean;\r\n\r\n    /**\r\n     * mipmapHint\r\n     * default 0x1100 = gl.DONT_CARE\r\n     */\r\n    mipmapHint?: number;\r\n\r\n    /**\r\n     * default 0\r\n     */\r\n    mipmask?: number;\r\n\r\n    /**\r\n     * TexImages\r\n     * default Array(16)\r\n     */\r\n    images?: ITexImage[];\r\n}\r\n\r\n/**\r\n * mipmap resource pool\r\n */\r\nclass MipmapPool {\r\n    /**\r\n     * \r\n     */\r\n    private mipmapQueue: IMipmap[] = [];\r\n\r\n    /**\r\n     * \r\n     * @returns \r\n     */\r\n    allocMipmap = (): IMipmap => {\r\n        const mipmap: IMipmap = this.mipmapQueue.pop() || createTexFlag() as IMipmap;\r\n        mipmap.genMipmaps = false;\r\n        mipmap.mipmapHint = CMipmapHint['DONT_CARE'];\r\n        mipmap.mipmask = 0;\r\n        mipmap.images = new Array(16);\r\n        return mipmap;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param mipmap \r\n     */\r\n    freeMipmap = (mipmap: IMipmap): void => {\r\n        const texImages = mipmap.images;\r\n        for (let i = 0, len = texImages.length; i < len; ++i) {\r\n            const texImage = texImages[i];\r\n            if (texImage) texImagePool0.freeImage(texImage);\r\n            texImages[i] = null;\r\n        }\r\n        this.mipmapQueue.push(mipmap);\r\n    }\r\n}\r\n\r\nconst mipmapPool0 = new MipmapPool();\r\n\r\nexport {\r\n    IMipmap,\r\n    mipmapPool0\r\n}","import { check } from \"../util/check\";\r\nimport { Limit } from \"../core/Limit\";\r\nimport { IStats } from \"../util/createStats\";\r\nimport { getCopy } from \"../util/getExtendCopy\";\r\nimport { ITexFlag } from \"../util/createTexFlag\";\r\nimport { Extension } from \"../core/Extension\";\r\nimport { Transpose } from \"../core/Transpose\";\r\nimport { detectComponent } from \"../util/detectComponent\";\r\nimport { TypedArrayFormat } from \"../core/Format\";\r\nimport { checkMipmapTexture2D, checkTextureCube } from \"../util/checkTexture\";\r\nimport { IMipmap, mipmapPool0 } from \"../pool/MipmapPool\";\r\nimport { ITexImage, texImagePool0 } from \"../pool/TexImagePool\";\r\nimport { ITexInfo, GTexture, TEXTURE_SET } from \"../res/GTexture\";\r\nimport { SMipmapHint, STextureFillTarget, STextureMAGFilter, STextureMapTarget, STextureMINFilter } from \"../core/Support\";\r\nimport { CColorSpace, CMipmapHint, CTextureColor, CTextureComponent, CTextureFillTarget, CTextureMAGFilter, CTextureMapTarget, CTextureMINFilter } from \"../core/Constant\";\r\n\r\n/**\r\n * Int8Array:       // 8为有符号整数，长度1个字节\r\n * Uint8Array:      // 8，1\r\n * Int16Array:      // 16，2\r\n * Uint16Array:     // 16，2\r\n * Int32Array:      // 32，4\r\n * Uint32Array:     // 32，4\r\n * Float32Array:    // 32，4\r\n * Float64Array:    // 64，8\r\n * BYTES_PRE_ELEMENT 得到的占用字节数\r\n */\r\nconst GL_TEXTURE_MAX_ANISOTROPY_EXT:number = 0x84FE;\r\n\r\n/**\r\n * cube maps\r\n */\r\nconst GL_TEXTURE_CUBE_MAPS:STextureMapTarget[] = [\r\n    'TEXTURE_CUBE_MAP_POSITIVE_X',  //0x8515\r\n    'TEXTURE_CUBE_MAP_NEGATIVE_X',\r\n    'TEXTURE_CUBE_MAP_POSITIVE_Y',\r\n    'TEXTURE_CUBE_MAP_NEGATIVE_Y',\r\n    'TEXTURE_CUBE_MAP_POSITIVE_Z',\r\n    'TEXTURE_CUBE_MAP_NEGATIVE_Z'\r\n];\r\n\r\n/**\r\n * \r\n */\r\nconst CHANNEL_TEX_COLOR = {\r\n    1: 'LUMINANCE',\r\n    2: 'LUMINANCE_ALPHA',\r\n    3: 'RGB',\r\n    4: 'RGBA'\r\n};\r\n\r\n/**\r\n * \r\n */\r\nclass TextureState {\r\n    /**\r\n     * \r\n     */\r\n    static TEXTURE_SET: Map<number, GTexture> = TEXTURE_SET;\r\n\r\n    /**\r\n     * \r\n     */\r\n    static MIPMAP_FILTERS: number[] = [0x2700, 0x2702, 0x2701, 0x2703];\r\n\r\n    /**\r\n     * \r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private extLib: Extension;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private limLib: Limit;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param extLib \r\n     * @param limLib \r\n     * @param stats \r\n     */\r\n    constructor(\r\n        gl: WebGLRenderingContext,\r\n        extLib: Extension,\r\n        limLib: Limit,\r\n        stats: IStats\r\n    ) {\r\n        this.gl = gl;\r\n        this.extLib = extLib;\r\n        this.limLib = limLib;\r\n        this.stats = stats;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param info \r\n     * @param target \r\n     * @param mipLevel \r\n     */\r\n    private setImage = (info: ITexImage, target: STextureMapTarget, mipLevel: number): void => {\r\n        const gl = this.gl,\r\n            data = info.data,\r\n            inTexColor = info.inTexColor,\r\n            texColor = info.texColor,\r\n            component = info.component,\r\n            width = info.width,\r\n            height = info.height,\r\n            target0 = CTextureMapTarget[target];\r\n        if (info.compressed) {\r\n            gl.compressedTexImage2D(\r\n                target0,\r\n                mipLevel,\r\n                CTextureColor[inTexColor],\r\n                width,\r\n                height,\r\n                0,\r\n                data || null);\r\n        }\r\n        else if (info.neddsCopy) {\r\n            gl.copyTexImage2D(\r\n                target0,\r\n                mipLevel,\r\n                CTextureColor[texColor],\r\n                info.xOffset,\r\n                info.yOffset,\r\n                width,\r\n                height,\r\n                0);\r\n        }\r\n        else {\r\n            gl.texImage2D(\r\n                target0,\r\n                mipLevel,\r\n                CTextureColor[inTexColor],\r\n                width,\r\n                height,\r\n                0,\r\n                CTextureColor[texColor],\r\n                CTextureComponent[component],\r\n                data || null);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param mimap \r\n     * @param target \r\n     * @returns \r\n     */\r\n    private setMipmap = (mimap: IMipmap, target: STextureMapTarget): void => {\r\n        const images = mimap.images;\r\n        for (let i = 0, len = images.length; i < len; i++) {\r\n            const image = images[i];\r\n            if (!image) return;\r\n            this.setImage(image, target, i);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置texture flags\r\n     * http://developer.mozilla.org/en-US/docs/Web/API/WebGLRenderingContext/pixlelStorei\r\n     * @param flags \r\n     */\r\n    private setTexFlags = (flags: ITexFlag): void => {\r\n        const gl = this.gl;\r\n        //Y轴翻转，flas表示不翻转\r\n        gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flags.flipY);\r\n        //预乘alpha通道\r\n        gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, flags.premultiplyAlpha);\r\n        //指示浏览器应用色彩空间转换\r\n        gl.pixelStorei(gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, CColorSpace[flags.colorSpace]);\r\n        //应对gl.DrawPixel设置，考虑效率要求drawPixel字节对齐\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, flags.unpackAlignment);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param info \r\n     * @param target GLEnum, Texture2D\r\n     */\r\n    private setTexInfo = (info: ITexInfo, target: STextureMapTarget): void => {\r\n        const extLib = this.extLib, gl = this.gl, target0 = CTextureMapTarget[target];\r\n        if (info.minFilter) gl.texParameteri(target0, gl.TEXTURE_MIN_FILTER, CTextureMINFilter[info.minFilter]);\r\n        if (info.magFilter) gl.texParameteri(target0, gl.TEXTURE_MAG_FILTER, CTextureMAGFilter[info.magFilter]);\r\n        if (info.wrapS) gl.texParameteri(target0, gl.TEXTURE_WRAP_S, CTextureFillTarget[info.wrapS]);\r\n        if (info.wrapT) gl.texParameteri(target0, gl.TEXTURE_WRAP_T, CTextureFillTarget[info.wrapT]);\r\n        if (info.anisotropic && extLib.get('EXT_texture_filter_anisotropic'))\r\n            gl.texParameteri(target0, GL_TEXTURE_MAX_ANISOTROPY_EXT, info.anisotropic);\r\n        if (info.genMipmaps) {\r\n            gl.hint(gl.GENERATE_MIPMAP_HINT, info.mimmapHint);\r\n            gl.generateMipmap(target0);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     */\r\n    private fixTexInfo = (\r\n        opts: {\r\n            min?: STextureMINFilter,\r\n            mag?: STextureMAGFilter,\r\n            wrapS?: STextureFillTarget,\r\n            wrapT?: STextureFillTarget,\r\n            mipmap?: SMipmapHint,\r\n            anisotropic?: 1 | 2 | 3,\r\n            // faces?:any[]\r\n        }\r\n    ): ITexInfo => {\r\n        const texInfo: ITexInfo = {\r\n            minFilter: 'NEAREST',\r\n            magFilter: 'NEAREST',\r\n            wrapS: 'CLAMP_TO_EDGE',\r\n            wrapT: 'CLAMP_TO_EDGE',\r\n            anisotropic: 1,\r\n            genMipmaps: false,\r\n            mimmapHint: CMipmapHint['DONT_CARE']\r\n        };\r\n        //1.min filter type\r\n        if (opts.min) {\r\n            texInfo.minFilter = opts.min;\r\n            //}{debugs faces 尚未支持\r\n            if (TextureState.MIPMAP_FILTERS.indexOf(CTextureMINFilter[texInfo.minFilter]) >= 0)\r\n                texInfo.genMipmaps = true;\r\n        }\r\n        //2.mag filter type\r\n        if (opts.mag) {\r\n            texInfo.magFilter = opts.mag;\r\n        }\r\n        //3.wrapS\r\n        if (opts.wrapS) {\r\n            texInfo.wrapS = opts.wrapS;\r\n        }\r\n        //4.warpT\r\n        if (opts.wrapT) {\r\n            texInfo.wrapT = opts.wrapT;\r\n        }\r\n        //5.各项异性过滤检查\r\n        if (opts.anisotropic) {\r\n            const num = opts.anisotropic;\r\n            check(num >= 1 && num <= this.limLib.maxAnisotropic, `TextureState error: 各项异性过滤不在可用范围[${1}, ${this.limLib.maxAnisotropic}]`);\r\n            texInfo.anisotropic = num;\r\n        }\r\n        //6.记录mipmap.minFilter\r\n        if (opts.mipmap && !opts.min)\r\n            texInfo.minFilter = 'NEAREST_MIPMAP_NEAREST'; // MIPMAP_FILTERS[0]吗，默认0x2700\r\n        //7.返回texInfo对象\r\n        return texInfo;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param mipmap \r\n     * @param arr \r\n     * @param shape \r\n     * @param stride \r\n     * @param offset \r\n     * @returns \r\n     */\r\n    private fixMipmap = (mipmap: IMipmap, arr: TypedArrayFormat, shape: number[], stride: number[], offset: number): IMipmap => {\r\n        const imageData = mipmap.images[0] = texImagePool0.allocImage();\r\n        getCopy(imageData, mipmap);\r\n        check(!imageData.compressed || arr instanceof Uint8Array, `TextureState error: 压缩纹理必须以Uint8Array格式传输`);\r\n        imageData.component = mipmap.component = detectComponent(arr);\r\n        const w = shape[0], h = shape[1], c = shape[2];\r\n        imageData.width = w;\r\n        imageData.height = h;\r\n        imageData.channels = c;\r\n        imageData.texColor = imageData.inTexColor = CHANNEL_TEX_COLOR[c];\r\n        imageData.neddsFree = true;\r\n        Transpose.TransposeData(imageData, arr, stride[0], stride[1], stride[2], offset);\r\n        getCopy(mipmap, mipmap.images[0]);\r\n        return mipmap;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param data \r\n     * @param w \r\n     * @param h \r\n     * @param c \r\n     * @param stride \r\n     * @param offset \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public createTexture2D = (\r\n        data: TypedArrayFormat,\r\n        w: number,\r\n        h: number,\r\n        c: number,\r\n        opts: {\r\n            stride?: number[],\r\n            offset?: number,\r\n            min?: STextureMINFilter,             //minFilter\r\n            mag?: STextureMAGFilter,             //magFilter\r\n            wrapS?: STextureFillTarget,          //wrapS\r\n            wrapT?: STextureFillTarget,          //wrapT\r\n            mipmap?: SMipmapHint,                 //mipmap采样方式\r\n            anisotropic?: 1 | 2 | 3,                 //各项异性过滤\r\n        } = {}\r\n    ): GTexture => {\r\n        const gl = this.gl;\r\n        const offset: number = opts.offset || 0;\r\n        const stride: number[] = opts.stride || [0, 0, 0];\r\n        //parse options to get reglTexInfo\r\n        const gTexture = new GTexture(gl, this.limLib, 'TEXTURE_2D', this.stats);\r\n        //1.texInfo\r\n        const texInfo = this.fixTexInfo(opts);\r\n        gTexture.TexInfo = texInfo;\r\n        //2.build mipdata by width/height\r\n        const mipmap = mipmapPool0.allocMipmap();\r\n        const imageData = mipmap.images[0] = texImagePool0.allocImage();\r\n        mipmap.mipmask = 1;\r\n        imageData.width = mipmap.width = w;\r\n        imageData.height = mipmap.height = h;\r\n        imageData.channels = mipmap.channels = c || 4;\r\n        //3.自动配置stride, 指定纹理扫描线size，默认size=1\r\n        if (stride[0] === 0 && stride[1] === 0 && stride[2] === 0) {\r\n            stride[0] = imageData.channels;\r\n            stride[1] = imageData.channels * imageData.width;\r\n            stride[2] = 1;\r\n        }\r\n        check(imageData.channels >= 1 && imageData.channels <= 4, `TextureState error: 纹理通道必须在1-4之间`);\r\n        if (gTexture.TexInfo.genMipmaps)\r\n            mipmap.mipmask = (mipmap.width << 1) - 1;\r\n        //4.缓存gl.flags相关信息， copyFlags\r\n        gTexture.TexFlag = mipmap as ITexFlag;\r\n        //5.解析data\r\n        gTexture.Mipmap = this.fixMipmap(mipmap, data, [imageData.width, imageData.height, imageData.channels], stride, offset);\r\n        //6.check texture2d\r\n        checkMipmapTexture2D(texInfo, mipmap, this.extLib, this.limLib);\r\n        if (texInfo.genMipmaps)\r\n            gTexture.Mipmap.mipmask = (mipmap.width << 1) - 1;\r\n        //7.纹理绑定\r\n        gTexture.tempBind();\r\n        this.setMipmap(gTexture.Mipmap, 'TEXTURE_2D');\r\n        this.setTexInfo(gTexture.TexInfo, 'TEXTURE_2D');\r\n        gTexture.tempRestore();\r\n        mipmapPool0.freeMipmap(mipmap);\r\n        return gTexture;\r\n    }\r\n\r\n    /**\r\n     * 待补充\r\n     */\r\n    public createTextureCube = (\r\n        faces:{\r\n            posx:TypedArrayFormat,\r\n            negx:TypedArrayFormat,\r\n            posy:TypedArrayFormat,\r\n            negy:TypedArrayFormat,\r\n            posz:TypedArrayFormat,\r\n            negz:TypedArrayFormat,\r\n        },\r\n        w:number,\r\n        h:number,\r\n        c:number,\r\n        opts: {\r\n            stride?: number[],\r\n            offset?: number,\r\n            min?: STextureMINFilter,             //minFilter\r\n            mag?: STextureMAGFilter,             //magFilter\r\n            wrapS?: STextureFillTarget,          //wrapS\r\n            wrapT?: STextureFillTarget,          //wrapT\r\n            mipmap?: SMipmapHint,                 //mipmap采样方式\r\n            anisotropic?: 1 | 2 | 3,                 //各项异性过滤\r\n        } = {}\r\n    ) => {\r\n        const offset:number = opts.offset||0;\r\n        const stride:number[] = opts.stride ||[0,0,0];\r\n        const gTexture = new GTexture(this.gl, this.limLib, 'TEXTURE_CUBE_MAP', this.stats);\r\n        //\r\n        const texInfo = this.fixTexInfo(opts);\r\n        gTexture.TexInfo = texInfo;\r\n        const gFaces:IMipmap[] = [];\r\n        //\r\n        Object.keys(faces).forEach((key:string)=>{\r\n            const data = faces[key];\r\n            const mipmap = mipmapPool0.allocMipmap();\r\n            const imageData = mipmap.images[0]= texImagePool0.allocImage();\r\n            mipmap.mipmask = 1;\r\n            imageData.width = mipmap.width = w;\r\n            imageData.height = mipmap.height = h;\r\n            imageData.channels = mipmap.channels = c || 4;\r\n            //自动配置stride, 指定纹理扫描线size，默认size=1\r\n            if (stride[0] === 0 && stride[1] === 0 && stride[2] === 0) {\r\n                stride[0] = imageData.channels;\r\n                stride[1] = imageData.channels * imageData.width;\r\n                stride[2] = 1;\r\n            }\r\n            check(imageData.channels >= 1 && imageData.channels <= 4, `TextureState error: 纹理通道必须在1-4之间`);\r\n            this.fixMipmap(mipmap, data, [imageData.width, imageData.height, imageData.channels], stride, offset);\r\n            gFaces.push(mipmap);\r\n        });\r\n        gTexture.Mipmap = gFaces[0];\r\n        if(texInfo.genMipmaps)\r\n            gTexture.Mipmap.mipmask = (gFaces[0].width<<1)-1;\r\n        else\r\n            gTexture.Mipmap.mipmask = gFaces[0].mipmask;\r\n        gTexture.TexFlag = gFaces[0] as ITexFlag;\r\n        //检查cubemap参数合法性\r\n        checkTextureCube(texInfo, gTexture.Mipmap, gFaces, this.limLib);\r\n        gTexture.tempBind();\r\n        gFaces.forEach((mipmap:IMipmap, i:number)=>{\r\n            this.setMipmap(mipmap, GL_TEXTURE_CUBE_MAPS[i]);\r\n        });\r\n        this.setTexInfo(texInfo, 'TEXTURE_CUBE_MAP');\r\n        gTexture.tempRestore();\r\n        gFaces.forEach((mipmap:IMipmap)=>{\r\n            mipmapPool0.freeMipmap(mipmap);\r\n        });\r\n        //\r\n        return gTexture;\r\n    }\r\n}\r\n\r\nexport { TextureState }","/**\r\n * performance stats attributes\r\n */\r\ninterface IPerformance {\r\n    /**\r\n     * \r\n     */\r\n    gupTime: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    cpuTime: number;\r\n\r\n    /**\r\n     * \r\n     */\r\n    count: number;\r\n}\r\n\r\n/**\r\n * create performance object in each compiler core\r\n * @returns \r\n */\r\nconst createPerformance = (): IPerformance => {\r\n    const stats: IPerformance = {\r\n        gupTime: 0.0,\r\n        cpuTime: 0.0,\r\n        count: 0\r\n    };\r\n    return stats;\r\n}\r\n\r\nexport {\r\n    IPerformance,\r\n    createPerformance\r\n}","/**\r\n * webgl object/resource stats\r\n */\r\ninterface IStats {\r\n    /**\r\n     * vertex array object count\r\n     */\r\n    vaoCount: number;\r\n\r\n    /**\r\n     * arraybuffer count\r\n     */\r\n    bufferCount: number;\r\n\r\n    /**\r\n     * elemnet arraybuffer count\r\n     */\r\n    elementsCount: number;\r\n\r\n    /**\r\n     * framebuffer(FBO) count\r\n     */\r\n    framebufferCount: number;\r\n\r\n    /**\r\n     * shader count\r\n     */\r\n    shaderCount: number;\r\n\r\n    /**\r\n     * texture count\r\n     */\r\n    textureCount: number;\r\n\r\n    /**\r\n     * cube texture count\r\n     */\r\n    cubeCount: number;\r\n\r\n    /**\r\n     * renderbuffer(RBO) count\r\n     */\r\n    renderbufferCount: number;\r\n\r\n    /**\r\n     * maximum texture unit count\r\n     */\r\n    maxTextureUnits: number;\r\n}\r\n\r\n/**\r\n * create global stats object\r\n * @example\r\n * const stats:IStats = createStats();\r\n * @returns \r\n */\r\nconst createStats = (): IStats => {\r\n    const stats: IStats = {\r\n        vaoCount: 0,\r\n        bufferCount: 0,\r\n        elementsCount: 0,\r\n        framebufferCount: 0,\r\n        shaderCount: 0,\r\n        textureCount: 0,\r\n        cubeCount: 0,\r\n        renderbufferCount: 0,\r\n        maxTextureUnits: 0       //assign by limLib.maxTextureUnits\r\n    };\r\n    return stats;\r\n}\r\n\r\nexport { \r\n    IStats,\r\n    createStats \r\n}","import { ExtensionFormat } from \"./Format\";\r\n\r\n/**\r\n * \r\n */\r\ninterface IExtension {\r\n    EXT_blend_minmax?: EXT_blend_minmax,\r\n    EXT_texture_filter_anisotropic?: EXT_texture_filter_anisotropic,\r\n    EXT_frag_depth?: EXT_frag_depth,\r\n    ANGLE_instanced_arrays?: ANGLE_instanced_arrays\r\n    EXT_shader_texture_lod?: EXT_shader_texture_lod,\r\n    EXT_sRGB?: EXT_sRGB,\r\n    OES_vertex_array_object?: OES_vertex_array_object,\r\n    WEBGL_compressed_texture_astc?: WEBGL_compressed_texture_astc,\r\n    WEBGL_debug_shaders?: WEBGL_debug_shaders,\r\n    WEBGL_draw_buffers?: WEBGL_draw_buffers,\r\n    WEBGL_depth_texture?: WEBGL_depth_texture,\r\n    WEBGL_debug_renderer_info?: WEBGL_debug_renderer_info,   //查此插件用途\r\n    WEBGL_compressed_texture_s3tc?: WEBGL_compressed_texture_s3tc,\r\n    OES_texture_half_float_linear?: OES_texture_half_float_linear,\r\n    OES_texture_half_float?: OES_texture_half_float\r\n    OES_texture_float?: OES_texture_float,\r\n    OES_texture_float_linear?:OES_texture_float_linear,\r\n    OES_standard_derivatives?: OES_standard_derivatives,\r\n    OES_element_index_uint?: OES_element_index_uint\r\n}\r\n\r\n/**\r\n * \r\n */\r\ntype SExtension = keyof {\r\n    [key in keyof IExtension]: string\r\n}\r\n\r\n/**\r\n * @deate 2021/8/16\r\n * @author axmand\r\n * @description rendering context management\r\n */\r\nclass Extension {\r\n    /**\r\n     * rendering context\r\n     */\r\n    private gl: WebGLRenderingContext;\r\n\r\n    /**\r\n     * extension library\r\n     */\r\n    private extensions: IExtension;\r\n\r\n    /**\r\n     * \r\n     * @param gl \r\n     * @param extNames extension array\r\n     */\r\n    constructor(gl: WebGLRenderingContext, ...extNames: SExtension[]) {\r\n        this.gl = gl;\r\n        this.extensions = {};\r\n        for (let i = 0, len = extNames.length; i < len; i++) {\r\n            const extName = extNames[i] as SExtension;\r\n            const ext = gl.getExtension(extName);\r\n            if (!!ext) {\r\n                this.extensions[extName] = ext;\r\n                console.log(`pipegl extension ${extName} load successful`);\r\n            } else {\r\n                console.log(`pipegl extension ${extName} load fail`);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @description get extension by extName\r\n     * @param extName \r\n     * @returns \r\n     */\r\n    get = (extName: SExtension): ExtensionFormat | undefined => {\r\n        return this.extensions[extName] as ExtensionFormat;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param extName \r\n     * @returns \r\n     */\r\n    getByForce = (extName: SExtension): ExtensionFormat | undefined => {\r\n        const gl = this.gl, extensions = this.extensions;\r\n        const ext: ExtensionFormat = extensions[extName] = extensions[extName] || gl.getExtension(extName);\r\n        return ext;\r\n    }\r\n}\r\n\r\nexport {\r\n    SExtension,\r\n    IExtension,\r\n    Extension\r\n}","\r\nimport { Limit } from \"./Limit\";\r\nimport { TProps } from \"./Props\";\r\n// import { GFramebuffer, GTexture, GVertexArrayObject, TAttribute, TUniform } from \"./../res/GFramebuffer\";\r\nimport { CompilerCore, ICompileOption } from \"../compiler/CompilerCore\";\r\nimport { IConfigure, parseConfigure } from \"../compiler/parseConfigure\";\r\nimport { GBuffer } from \"../res/GBuffer\";\r\nimport { GElementsbuffer } from \"../res/GElementsbuffer\";\r\nimport { GRenderbuffer } from \"../res/GRenderbuffer\";\r\nimport { AttributeState } from \"../state/AttributeState\";\r\nimport { BufferState } from \"../state/BufferState\";\r\nimport { ElementsState } from \"../state/ElementState\";\r\nimport { FramebufferState } from \"../state/FramebufferState\";\r\nimport { ProgramState } from \"../state/ProgramState\";\r\nimport { RenderbufferState } from \"../state/RenderbufferState\";\r\nimport { ShaderState } from \"../state/ShaderState\";\r\nimport { StringState } from \"../state/StringState\";\r\nimport { TextureState } from \"../state/TextureState\";\r\nimport { check } from \"../util/check\";\r\nimport { createPerformance, IPerformance } from \"../util/createPerformance\";\r\nimport { createStats, IStats } from \"../util/createStats\";\r\nimport { Extension } from \"./Extension\";\r\nimport { ShapedArrayFormat, TypedArrayFormat } from \"./Format\";\r\n\r\nimport { SArraybufferTarget, SComponent, SDimension, SMipmapHint, SPrimitive, SRenderbufferColor, STextureFillTarget, STextureMAGFilter, STextureMINFilter, SUsage } from \"./Support\";\r\nimport { TAttribute } from \"../compiler/parseAttribute\";\r\nimport { TUniform } from \"../compiler/parseUniform\";\r\nimport { GVertexArrayObject } from \"../res/GVertexArrayObject\";\r\nimport { GTexture } from \"../res/GTexture\";\r\nimport { GFramebuffer } from \"../res/GFramebuffer\";\r\n\r\n/**\r\n * \r\n */\r\ninterface IPipeCommand {\r\n    /**\r\n     * 常规一次绘制\r\n     */\r\n    draw(): void;\r\n\r\n    /**\r\n     * 动态property绘制，支持单个属性\r\n     * @param prop \r\n     */\r\n    draw<T extends TProps>(prop: T): void;\r\n\r\n    /**\r\n     * 动态property绘制，批量绘制\r\n     * @param props \r\n     */\r\n    batch<T extends TProps>(props: T[]): void;\r\n}\r\n\r\n/**\r\n * @author axmand\r\n */\r\nclass PipeGL {\r\n    /**\r\n     * compile core object\r\n     */\r\n    private compilerCore: CompilerCore;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private configure: IConfigure;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private limLib: Limit;\r\n\r\n    /**\r\n    * \r\n    */\r\n    private extLib: Extension;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stats: IStats;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private bufferState: BufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private elementState: ElementsState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private attributeState: AttributeState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private stringState: StringState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private textureState: TextureState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private shaderState: ShaderState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private programState: ProgramState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private renderbufferState: RenderbufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private framebufferState: FramebufferState;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private performance: IPerformance;\r\n\r\n    /**\r\n     * get webgl rendering context in private\r\n     */\r\n    private get gl(): WebGLRenderingContext {\r\n        return this.configure.gl;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     */\r\n    constructor(opts: IConfigure) {\r\n        //statics\r\n        this.stats = createStats();\r\n        this.performance = createPerformance();\r\n        //rendering context\r\n        this.configure = parseConfigure(opts);\r\n        this.extLib = new Extension(this.gl, ...this.configure.extensions);\r\n        this.limLib = new Limit(this.gl, this.extLib);\r\n        //state manager\r\n        this.stringState = new StringState();\r\n        this.bufferState = new BufferState(this.gl, this.stats);\r\n        this.textureState = new TextureState(this.gl, this.extLib, this.limLib, this.stats);\r\n        this.elementState = new ElementsState(this.gl, this.extLib, this.bufferState, this.stats);\r\n        this.shaderState = new ShaderState(this.gl, this.stringState, this.stats);\r\n        this.programState = new ProgramState(this.gl, this.shaderState, this.stringState);\r\n        this.attributeState = new AttributeState(this.gl, this.extLib, this.limLib, this.bufferState, this.elementState, this.programState, this.stats);\r\n        this.renderbufferState = new RenderbufferState(this.gl, this.extLib, this.limLib, this.stats);\r\n        this.framebufferState = new FramebufferState(this.gl, this.textureState, this.renderbufferState, this.extLib, this.limLib, this.stats);\r\n        //build compiler core\r\n        this.compilerCore = new CompilerCore({\r\n            gl: this.gl,\r\n            stats: this.stats,\r\n            performance: this.performance,\r\n            extLib: this.extLib,\r\n            limLib: this.limLib,\r\n            bufferState: this.bufferState,\r\n            textureState: this.textureState,\r\n            elementState: this.elementState,\r\n            attributeState: this.attributeState,\r\n            stringState: this.stringState,\r\n            shaderState: this.shaderState,\r\n            programState: this.programState,\r\n            renderbufferState: this.renderbufferState,\r\n            framebufferState: this.framebufferState\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public compile = <TA extends TAttribute, TU extends TUniform>(opts: ICompileOption<TA, TU>): IPipeCommand => {\r\n        return this.compilerCore.compile(opts) as unknown as IPipeCommand;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param atts \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public vao = <TA extends TAttribute>(\r\n        atts: TA,\r\n        opts: {\r\n            elements?: GElementsbuffer | ShapedArrayFormat,\r\n            offset?: number,\r\n            count?: number,\r\n            instances?: number,\r\n            primitive?: SPrimitive\r\n        } = {}\r\n    ): GVertexArrayObject => {\r\n        return this.attributeState.createREGLVertexArrayObject(atts, opts);\r\n    }\r\n\r\n    /**\r\n     * 创建2D纹理\r\n     * @param data \r\n     * @param w \r\n     * @param h \r\n     * @param c \r\n     * @param stride \r\n     * @param offset \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public texture2D = (\r\n        data: TypedArrayFormat,\r\n        w: number,\r\n        h: number,\r\n        c: number,\r\n        opts: {\r\n            stride?: number[],\r\n            offset?: number,\r\n            min?: STextureMINFilter,             //minFilter\r\n            mag?: STextureMAGFilter,             //magFilter\r\n            wrapS?: STextureFillTarget,          //wrapS\r\n            wrapT?: STextureFillTarget,          //wrapT\r\n            mipmap?: SMipmapHint,                 //mipmap采样方式\r\n            anisotropic?: 1 | 2 | 3,                 //各项异性过滤\r\n        } = {}\r\n    ): GTexture => {\r\n        return this.textureState.createTexture2D(data, w, h, c, opts)\r\n    }\r\n\r\n    /**\r\n     * 创建空的2D纹理\r\n     * @param w \r\n     * @param h \r\n     * @param c \r\n     * @param opts \r\n     */\r\n    public texture2DEmpty = (\r\n        w: number,\r\n        h: number,\r\n        c: number,\r\n        opts: {\r\n            stride?: number[],\r\n            offset?: number,\r\n            min?: STextureMINFilter,             //minFilter\r\n            mag?: STextureMAGFilter,             //magFilter\r\n            wrapS?: STextureFillTarget,          //wrapS\r\n            wrapT?: STextureFillTarget,          //wrapT\r\n            mipmap?: SMipmapHint,                 //mipmap采样方式\r\n            anisotropic?: 1 | 2 | 3,                 //各项异性过滤\r\n        } = {}\r\n    ): GTexture => {\r\n        const emptyData = new Uint8Array(w * h * c);\r\n        return this.texture2D(emptyData, w, h, c, opts);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param faces \r\n     * @param w \r\n     * @param h \r\n     * @param c \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public textureCube = (      faces:{\r\n        posx:TypedArrayFormat,\r\n        negx:TypedArrayFormat,\r\n        posy:TypedArrayFormat,\r\n        negy:TypedArrayFormat,\r\n        posz:TypedArrayFormat,\r\n        negz:TypedArrayFormat,\r\n    },\r\n    w:number,\r\n    h:number,\r\n    c:number,\r\n    opts: {\r\n        stride?: number[],\r\n        offset?: number,\r\n        min?: STextureMINFilter,                 //minFilter\r\n        mag?: STextureMAGFilter,                 //magFilter\r\n        wrapS?: STextureFillTarget,              //wrapS\r\n        wrapT?: STextureFillTarget,              //wrapT\r\n        mipmap?: SMipmapHint,                    //mipmap采样方式\r\n        anisotropic?: 1 | 2 | 3,                 //各项异性过滤\r\n    } = {}):GTexture =>{\r\n        return this.textureState.createTextureCube(faces, w, h, c, opts);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public renderbuffer = (\r\n        opts: {\r\n            w: number,\r\n            h: number,\r\n            format: SRenderbufferColor   //format\r\n        }\r\n    ): GRenderbuffer => {\r\n        return this.renderbufferState.createRenderbuffer(opts);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param data \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public buffer = (\r\n        data: ShapedArrayFormat,\r\n        opts: {\r\n            target?: SArraybufferTarget,\r\n            usage?: SUsage,\r\n            component?: SComponent,\r\n            dimension?: SDimension,\r\n            byteLength?: number\r\n        } = {}\r\n    ): GBuffer => {\r\n        return this.bufferState.createBuffer({\r\n            data,\r\n            usage: opts.usage,\r\n            component: opts.component,\r\n            target: opts.target,\r\n            dimension: opts.dimension,\r\n            byteLength: opts.byteLength\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     * @returns \r\n     */\r\n    public framebuffer = (\r\n        opts: {\r\n            colors?: (GTexture | GRenderbuffer)[],\r\n            depth?: GRenderbuffer,\r\n            stencil?: GRenderbuffer,\r\n            depthStencil?: GRenderbuffer\r\n        }\r\n    ): GFramebuffer => {\r\n        return this.framebufferState.createFramebuffer(opts);\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param opts \r\n     */\r\n    public clear = (\r\n        opts: {\r\n            color: number[],\r\n            depth?: boolean,\r\n            stencil?: boolean\r\n        }\r\n    ) => {\r\n        const gl = this.gl;\r\n        const { color, depth, stencil } = opts;\r\n        check(color.length === 4, `Error: clear color must consist of 4`);\r\n        //clear to black, fluuy opaque\r\n        gl.clearColor(color[0], color[1], color[2], color[3]);\r\n        let bit = gl.COLOR_BUFFER_BIT;\r\n        if (depth) bit = bit | gl.DEPTH_BUFFER_BIT;\r\n        if (stencil) bit = bit | gl.STENCIL_BUFFER_BIT;\r\n        //clear\r\n        gl.clear(bit);\r\n    }\r\n}\r\n\r\nexport {\r\n    IPipeCommand,\r\n    PipeGL\r\n}","//Pipe Object\r\nexport { PipeGL, IPipeCommand } from './core/Pipe';\r\n\r\n//performance\r\nexport { IPerformance } from './util/createPerformance';\r\n\r\n//resource\r\nexport { GFramebuffer } from './res/GFramebuffer';\r\nexport { GTexture } from './res/GTexture';\r\nexport { GVertexArrayObject } from './res/GVertexArrayObject';\r\nexport { GBuffer } from './res/GBuffer';\r\n\r\n//Prop\r\nexport { Props, TProps } from './core/Props';\r\n\r\n//attribute/uniform\r\nexport { TUniform } from './compiler/parseUniform';\r\nexport { TAttribute } from './compiler/parseAttribute';\r\nexport { IAttributeBuffer } from './compiler/parseAttribute';","const getPrefixe = (name: string) => {\r\n    return window['wekit' + name] || window['moz' + name] || window['ms' + name];\r\n}\r\n\r\nconst RAF = window['requestAnimationFrame'] || getPrefixe('requestAnimationFrame') || function (fn: Function) { return setTimeout(fn, 16) };\r\n\r\nconst CRAF = window['cancelAnimationFrame'] || getPrefixe('cancelAnimationFrame') || getPrefixe('CanvelRequestAnimationFrame') || function (id: number) { window.clearTimeout(id); };\r\n\r\nexport {\r\n    RAF,\r\n    CRAF\r\n}","/**\r\n * @date 2017/4/18\r\n * @author axamnd\r\n * @description 合并对象\r\n * @param dest \r\n * @returns \r\n */\r\nconst merge = (...dest: object[]): object => {\r\n    const o = dest[0];\r\n    for (let i = 1, len = dest.length; i < len; i++) {\r\n        const target = dest[i];\r\n        for (const key in target)\r\n            o[key] = target[key];\r\n    }\r\n    return o;\r\n}\r\n\r\nexport { merge }","import { merge } from \"../util/merge\";\r\n\r\n//animation cache\r\nconst TweenCache: Map<number, Function> = new Map();\r\n\r\n/**\r\n * 补间计算方法\r\n */\r\nconst Easing = {\r\n    /**\r\n     * 线性插值\r\n     */\r\n    Linear: {\r\n        None: (k: number): number => {\r\n            return k;\r\n        }\r\n    },\r\n\r\n    /**\r\n     * 二次方程插值\r\n     */\r\n    Quadratic: {\r\n        In: (k: number): number => {\r\n            return k * k;\r\n        },\r\n        Out: (k: number): number => {\r\n            return k * (2 - k);\r\n        },\r\n        InOut: (k: number): number => {\r\n            if ((k *= 2) < 1) return 0.5 * k * k;\r\n            return -0.5 * (--k * (k - 2) - 1);\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * @example\r\n * const coord0 = {x:0, y:0};\r\n * const coord1 = {x:100, y:100};\r\n * //构造动画\r\n * const tween = new Tween(coord0).fixEnd(coord1).fixUpdate(()=>{});\r\n * //执行\r\n * tween.start();\r\n */\r\nclass Tween {\r\n\r\n    /**\r\n     * 动画id\r\n     */\r\n    private static idx = 0;\r\n\r\n    /**\r\n     * 动画缓存\r\n     */\r\n    private static tweens = {};\r\n\r\n    /**\r\n     * 记录动画\r\n     * @param tween \r\n     */\r\n    private static add = (tween: Tween) => {\r\n        Tween.tweens[tween.ID] = tween;\r\n    }\r\n\r\n    public get ID(): number {\r\n        return this.id;\r\n    }\r\n\r\n    private id: number;\r\n\r\n    private objective: object;\r\n\r\n    private onStartCallback: Function;\r\n\r\n    private onCompleteCallback: Function;\r\n\r\n    private onUpdateCallback: Function;\r\n\r\n    private onStartCallbackFired: boolean;\r\n\r\n    private easingFunction: Function;\r\n\r\n    private valuesStart: object;\r\n\r\n    private valuesEnd: object;\r\n\r\n    private startTime: number;\r\n\r\n    private isPlaying: boolean;\r\n\r\n    private dura: number;\r\n\r\n    constructor() {\r\n        this.id = Tween.idx++;\r\n        this.dura = 600;\r\n        this.onStartCallbackFired = false;\r\n        this.isPlaying = false;\r\n        this.easingFunction = Easing.Quadratic.In;\r\n        this.objective = {};\r\n    }\r\n\r\n    public start = () => {\r\n        if (this.isPlaying) return true;\r\n        Tween.add(this);\r\n        this.isPlaying = true;\r\n        this.onStartCallbackFired = false;\r\n        for (const property in this.valuesEnd) {\r\n            // Check if an Array was provided as property value\r\n            if (this.valuesEnd[property] instanceof Array) {\r\n                if (this.valuesEnd[property].length === 0) continue;\r\n                // Create a local copy of the Array with the start value at the front \r\n                this.valuesEnd[property] = [this.objective[property]].concat(this.valuesEnd[property]);\r\n            }\r\n            // If `to()` specifies a property that doesn't exist in the source object, we should not set that property in the object\r\n            if (this.objective[property] === undefined) continue;\r\n            // Save the starting value.\r\n            this.valuesStart[property] = this.objective[property];\r\n            // Ensures we're using numbers, not strings\r\n            if ((this.valuesStart[property] instanceof Array) === false) this.valuesStart[property] *= 1.0;\r\n        }\r\n        //animation loop\r\n        TweenCache.set(this.ID, (framestamp: number) => { this.update(framestamp); });\r\n    }\r\n\r\n    private update = (framestamp: number) => {\r\n        this.startTime = this.startTime || framestamp;\r\n        if (framestamp < this.startTime) return true;\r\n        //开始事件触发\r\n        if (this.onStartCallbackFired === false) {\r\n            if (this.onStartCallback !== null && this.onStartCallback !== undefined)\r\n                this.onStartCallback.call(this, this.objective);\r\n            this.onStartCallbackFired = true;\r\n        }\r\n        //计算当前时间\r\n        const pssedTime = (framestamp - this.startTime) / this.dura;\r\n        const elapsed = pssedTime > 1 ? 1 : pssedTime;\r\n        const value = this.easingFunction(elapsed);\r\n        //更新属性值\r\n        for (const property in this.valuesEnd) {\r\n            // Don't update properties that do not exist in the source object\r\n            if (this.valuesStart[property] === undefined) continue;\r\n            const start = this.valuesStart[property] || 0;\r\n            let end = this.valuesEnd[property];\r\n            const typeName = typeof (end);\r\n            if (typeName === 'string') {\r\n                if (end.charAt(0) === '+' || end.charAt(0) === '-') {\r\n                    end = start + parseFloat(end);\r\n                } else {\r\n                    end = parseFloat(end);\r\n                }\r\n            } else if (typeName === 'number') {\r\n                this.objective[property] = start + (end - start) * value;\r\n            }\r\n        }\r\n        //返回当前时间状态（比例）\r\n        if (this.onUpdateCallback !== null)\r\n            this.onUpdateCallback(this.objective);\r\n        //结束状态\r\n        if (elapsed === 1) {\r\n            if (this.onCompleteCallback !== null)\r\n                this.onCompleteCallback.call(this.objective);\r\n            delete TweenCache[this.id];\r\n        }\r\n        //结束前更新\r\n        else TweenCache.set(this.ID, (framestamp: number) => { this.update(framestamp); });\r\n    }\r\n\r\n    public from = (properties: object): Tween => {\r\n        this.valuesStart = properties;\r\n        merge(this.objective, properties);\r\n        return this;\r\n    }\r\n\r\n    public to = (properties: object): Tween => {\r\n        this.valuesEnd = properties;\r\n        return this;\r\n    }\r\n\r\n    public fixStart = (cb: Function): Tween => {\r\n        this.onStartCallback = cb;\r\n        return this;\r\n    }\r\n\r\n    public completeHandler = (cb: Function): Tween => {\r\n        this.onCompleteCallback = cb;\r\n        return this;\r\n    }\r\n\r\n    public updateHandler = (cb: Function): Tween => {\r\n        this.onUpdateCallback = cb;\r\n        return this;\r\n    }\r\n\r\n    public easingHandler = (fn: Function): Tween => {\r\n        this.easingFunction = fn;\r\n        return this;\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @param dura \r\n     * @returns \r\n     */\r\n    public duration = (dura:number):Tween =>{\r\n        this.dura = dura;\r\n        return this;\r\n    }\r\n}\r\n\r\nexport {\r\n    TweenCache,\r\n    Easing,\r\n    Tween\r\n}\r\n","import { PipeGL } from 'pipegl';\r\n\r\nimport { RAF } from '../util/raf';\r\nimport { Globe } from './Globe';\r\nimport { TweenCache } from '../core/Tween';\r\n\r\n/**\r\n * Globe 全局渲染调度\r\n * 逐帧发起渲染，调度穿插其中\r\n */\r\ndeclare module './Globe' {\r\n    interface Globe {\r\n        /**\r\n         * 注册全局渲染\r\n         */\r\n        registerGlobeRenderer(): void;\r\n\r\n        /**\r\n         * 执行一次渲染\r\n         */\r\n        render(): void;\r\n\r\n        /**\r\n         * 帧渲染\r\n         * @param framestamp \r\n         */\r\n        renderFrame(framestamp: number): void;\r\n\r\n        /**\r\n         * 帧率渲染循环体\r\n         * @param framestamp \r\n         */\r\n        renderLoop(framestamp: number): void;\r\n\r\n        /**\r\n         * 发起worker调度\r\n         * @param framestamp \r\n         */\r\n        callWorker(framestamp: number): void;\r\n\r\n        /**\r\n         * 发起动画调度\r\n         * @param framestamp \r\n         */\r\n        callAnimate(framestamp: number): void;\r\n\r\n        /**\r\n         * 发起辅助工具调度\r\n         * @param framestamp \r\n         */\r\n        callAuxtool(framestamp: number): void;\r\n\r\n        /**\r\n         * 3D渲染上下文\r\n         */\r\n        getContext3D(): PipeGL;\r\n\r\n        /**\r\n         * \r\n         */\r\n        _state_globerender_: {\r\n            frameID?: number;                    //帧ID，可用于cancel\r\n            ctx2d?: CanvasRenderingContext2D;    //\r\n            ctx3d?: PipeGL;                      //\r\n            canvas3d?: HTMLCanvasElement;        //\r\n            lastframestamp?: number;             //上次帧渲染时间戳\r\n            performance?: number;                //帧率\r\n        }\r\n    }\r\n}\r\n\r\nGlobe.prototype.registerGlobeRenderer = function (): void {\r\n    const g = this as Globe;\r\n    g._state_globerender_ = {};\r\n    //1.实际canvas使用ctx2d绘制\r\n    //-支持每秒不超过50000次draw call调用\r\n    //-支持贴图叠加\r\n    //2.构造新的canvas对象，用于离屏渲染/共享传递3d上下文\r\n    g._state_globerender_.ctx3d = new PipeGL({\r\n        canvas: g.Canvas,\r\n        extensions: ['ANGLE_instanced_arrays', 'OES_vertex_array_object']\r\n    });\r\n    //3.}{渲染结果出图\r\n    //4.启动render\r\n    g.render();\r\n}\r\n\r\n/**\r\n * 3D渲染上下文\r\n */\r\nGlobe.prototype.getContext3D = function (): PipeGL {\r\n    const g = this as Globe;\r\n    return g._state_globerender_.ctx3d;\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.render = function (): void {\r\n    const g = this as Globe;\r\n    g.renderLoop(0);\r\n}\r\n\r\n/**\r\n * 动画任务调起\r\n */\r\nGlobe.prototype.callAnimate = function (framestamp: number): void {\r\n    const arr: Function[] = [];\r\n    TweenCache.forEach(fn => arr.push(fn));\r\n    TweenCache.clear();\r\n    let fn = arr.shift();\r\n    while (fn) {\r\n        fn(framestamp);\r\n        fn = arr.shift();\r\n    }\r\n}\r\n\r\n/**\r\n * 发起辅助工具更新\r\n */\r\nGlobe.prototype.callAuxtool = function (framestamp: number): void {\r\n    const g = this as Globe;\r\n    g.emit('auxtool', framestamp);\r\n}\r\n\r\n/**\r\n * 发起多线程任务\r\n */\r\nGlobe.prototype.callWorker = function (framestamp: number): void {\r\n    const g = this as Globe;\r\n    g.emit('worker', framestamp);\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.renderLoop = function (framestamp: number): void {\r\n    const g = this as Globe;\r\n    //帧率\r\n    g._state_globerender_.performance = 1000 / (framestamp - g._state_globerender_.lastframestamp);\r\n    //worker\r\n    g.callWorker(framestamp);\r\n    //动画\r\n    g.callAnimate(framestamp);\r\n    //渲染\r\n    g.renderFrame(framestamp);\r\n    //更新信息\r\n    g._state_globerender_.frameID = RAF.call(window, (framestamp: number) => g.renderLoop(framestamp));\r\n    g._state_globerender_.lastframestamp = framestamp;\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.renderFrame = function (framestamp: number): void {\r\n    //逐帧渲染\r\n    const g = this as Globe, camera = g._state_camera_.camera, state = g._state_globerender_;\r\n    const ctx3d = g.getContext3D();\r\n    ctx3d.clear({ color: [0.0, 0.0, 0.0, 1.0] });\r\n    //发起辅助工具调度\r\n    g.callAuxtool(framestamp);\r\n    //发起渲染事件\r\n    g.emit('framestart', state.performance);\r\n    //渲染skpds\r\n    const skpds = g.Sketchpads;\r\n    skpds?.forEach(skpd => {\r\n        const r = skpd.Renderer;\r\n        r.render(framestamp, camera)\r\n    });\r\n    //渲染结束\r\n    g.emit('frameend', state.performance);\r\n}\r\n\r\nGlobe.registerHook(Globe.prototype.registerGlobeRenderer);","import { Vec2 } from \"kiwi.matrix\";\r\n\r\n/**\r\n * 屏幕坐标\r\n */\r\ninterface IClientPoint {\r\n    clientX: number;\r\n    clientY: number;\r\n}\r\n\r\n/**\r\n * 地图容器区域信息\r\n */\r\ninterface IViewContainer {\r\n    left: number,\r\n    top: number,\r\n    width: number,\r\n    height: number,\r\n    // cx: number, // container center x\r\n    // cy: number  // container center y\r\n}\r\n\r\n/**\r\n * \r\n */\r\ninterface IDOMEventParam {\r\n    domEvent: TouchEvent | MouseEvent,\r\n    coordinate?: any,\r\n    viewPoint?: any,\r\n    point2d?: any\r\n}\r\n\r\n/**\r\n * pan event arguments\r\n */\r\ninterface IPanEventParam {\r\n    domEvent: TouchEvent | MouseEvent;\r\n    currentPosition?: IClientPoint;\r\n}\r\n\r\ninterface IZoomEventParam {\r\n    domEvent: TouchEvent | MouseEvent;\r\n    currentPosition?: IClientPoint;\r\n    value?: number;\r\n    zoom?: number;\r\n}\r\n\r\nconst ZOOM_EVENTS = {\r\n    wheel: 'wheel',\r\n    wheelend: 'wheelend'\r\n}\r\n\r\nconst START_EVENTS = 'touchstart mousedown';\r\n\r\nconst MOVE_EVENTS = {\r\n    mousedown: 'mousemove',\r\n    touchstart: 'touchmove',\r\n    pointerdown: 'touchmove',\r\n    MSPointerDown: 'touchmove'\r\n};\r\n\r\nconst END_EVENTS = {\r\n    mousedown: 'mouseup',\r\n    touchstart: 'touchend',\r\n    pointerdown: 'touchend',\r\n    MSPointerDown: 'touchend'\r\n};\r\n\r\nconst PAN_EVENTS = {\r\n    panstart: 'panstart',\r\n    paning: 'paning',\r\n    panend: 'panend'\r\n}\r\n\r\nexport {\r\n    START_EVENTS,\r\n    MOVE_EVENTS,\r\n    ZOOM_EVENTS,\r\n    PAN_EVENTS,\r\n    END_EVENTS,\r\n    IZoomEventParam,\r\n    IViewContainer,\r\n    IClientPoint,\r\n    IDOMEventParam,\r\n    IPanEventParam,\r\n}","import { Vec2 } from 'kiwi.matrix';\r\n\r\nimport { Globe } from './../Globe';\r\n\r\nimport { split } from '../../util/split';\r\nimport { getEventContainerPosition } from '../../util/dom';\r\nimport { END_EVENTS, IDOMEventParam, IPanEventParam, MOVE_EVENTS, PAN_EVENTS, START_EVENTS } from '../../core/Format';\r\n\r\n/**\r\n * reference\r\n * https://github.com/maptalks/maptalks.js/blob/1d98540a0af728e80cbac133278143fc1c6a4c51/src/handler/Drag.js\r\n * 提供Global的Pan事件发布\r\n */\r\ndeclare module './../Globe' {\r\n    interface Globe {\r\n        /**\r\n         * 注册到hook的初始化执行钩子\r\n         */\r\n        registerPanHandlerHood(): void;\r\n\r\n        /**\r\n         * 移除 moveevents, endevents\r\n         */\r\n        releasePanHandlerEvents(): void;\r\n\r\n        /**\r\n         * \r\n         * @param evt \r\n         */\r\n        panMousedownOrTouchstart(evt: IDOMEventParam): void;\r\n\r\n        /**\r\n         * \r\n         * @param evt \r\n         */\r\n        panMousemoveOrTouchmove(evt: IDOMEventParam): void;\r\n\r\n        /**\r\n         * \r\n         * @param evt \r\n         */\r\n        panMouseupOrTouchend(evt: IDOMEventParam): void;\r\n\r\n        /**\r\n         * \r\n         */\r\n        _state_handler_pan_: {\r\n            startPosition: Vec2;\r\n            moved: boolean;\r\n            interupted: boolean;    //指示pan是否被中断\r\n        }\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.registerPanHandlerHood = function (): void {\r\n    const g = this as Globe;\r\n    g._state_handler_pan_ = {\r\n        startPosition: new Vec2(),\r\n        moved: false,\r\n        interupted: false,\r\n    };\r\n    split(START_EVENTS).forEach((type) => {\r\n        g.on(type, g.panMousedownOrTouchstart);\r\n    });\r\n}\r\n\r\n/**\r\n * mousedown 或 touchstart 事件开始\r\n */\r\nGlobe.prototype.panMousedownOrTouchstart = function (args: IDOMEventParam): void {\r\n    const g = this as Globe, e = args.domEvent;\r\n    //右键或多点触控，不分发事件\r\n    if (e['button'] === 2 || (e['touches'] && e['touches'].length > 1)) return;\r\n    //https://www.w3cschool.cn/fetch_api/fetch_api-w3zc2v4w.html\r\n    const cp = getEventContainerPosition(e, g.Canvas);\r\n    g._state_handler_pan_.startPosition = new Vec2().set(cp.clientX, cp.clientY);\r\n    const panEventParam: IPanEventParam = {\r\n        domEvent: e,\r\n        currentPosition: {\r\n            clientX: cp.clientX,\r\n            clientY: cp.clientY\r\n        }\r\n    }\r\n    //发送事件\r\n    g.emit(PAN_EVENTS.panstart, panEventParam);\r\n    //注册事件\r\n    g.on(MOVE_EVENTS[e.type], g.panMousemoveOrTouchmove);\r\n    g.on(END_EVENTS[e.type], g.panMouseupOrTouchend);\r\n}\r\n\r\n/**\r\n * 平移中\r\n */\r\nGlobe.prototype.panMousemoveOrTouchmove = function (args: IDOMEventParam): void {\r\n    const g = this as Globe, e = args.domEvent;\r\n    //使用touch平移地图时，如果出现多触电，则认为平移结束\r\n    if (e['touches'] && e['touches'].length > 1) {\r\n        if (g._state_handler_pan_.moved) {\r\n            g._state_handler_pan_.interupted = true;\r\n            g.panMouseupOrTouchend(args);\r\n        }\r\n        return;\r\n    }\r\n    //新的位置\r\n    const cp = getEventContainerPosition(e, g.Canvas);\r\n    const currentPosition = new Vec2().set(cp.clientX, cp.clientY);\r\n    //如果移动offset为0，取消执行\r\n    const offset = currentPosition.clone().sub(g._state_handler_pan_.startPosition);\r\n    if(!offset.x && !offset.y) return;\r\n    //构造pan参数\r\n    const panEventParam:IPanEventParam= {\r\n        domEvent:e,\r\n        currentPosition:{\r\n            clientX:cp.clientX,\r\n            clientY:cp.clientY\r\n        }\r\n    };\r\n    g.emit(PAN_EVENTS.paning, panEventParam);\r\n    g._state_handler_pan_.startPosition = currentPosition;\r\n}\r\n\r\n/**\r\n * 平移结束\r\n */\r\nGlobe.prototype.panMouseupOrTouchend = function (args: IDOMEventParam): void {\r\n    const g = this as Globe, e = args.domEvent;\r\n    g.releasePanHandlerEvents();\r\n    const cp = getEventContainerPosition(e, g.Canvas);\r\n    const panEventParam :IPanEventParam={\r\n        domEvent:e,\r\n        currentPosition:{\r\n            clientX:cp.clientX,\r\n            clientY:cp.clientY\r\n        }\r\n    }\r\n    g.emit(PAN_EVENTS.panend, panEventParam);\r\n}\r\n\r\n/**\r\n * 清除所有pan操作\r\n */\r\nGlobe.prototype.releasePanHandlerEvents = function (): void {\r\n    const g = this as Globe;\r\n    for (const key in MOVE_EVENTS) {\r\n        const moveEventName = MOVE_EVENTS[key];\r\n        const endEventName = END_EVENTS[key];\r\n        g.off(moveEventName, g.panMousemoveOrTouchmove);\r\n        g.off(endEventName, g.panMouseupOrTouchend);\r\n    }\r\n}\r\n\r\n//注册Pan插件\r\nGlobe.registerHook(Globe.prototype.registerPanHandlerHood);","\r\nimport { now } from \"../../util/now\";\r\nimport { Globe } from \"../Globe\";\r\nimport { IClientPoint, IDOMEventParam, IZoomEventParam, ZOOM_EVENTS } from \"../../core/Format\";\r\nimport { getEventContainerPosition, preventDefault, stopPropagation } from \"../../util/dom\";\r\n\r\n//参考\r\nconst wheelZoomDelta = 4.000244140625;\r\n\r\n/**\r\n * \r\n */\r\ndeclare module './../Globe' {\r\n    interface Globe {\r\n        /**\r\n         * 注册到hook, 初始执行\r\n         */\r\n        registerZoomHandlerHook(): void;\r\n\r\n        /**\r\n         * 移除moveevents, endevents\r\n         */\r\n        releaseZoomHandlerEvents(): void;\r\n\r\n        /**\r\n         * \r\n         * @param e \r\n         */\r\n        zoomMousewheelOrTouch(e: IDOMEventParam): void;\r\n\r\n        /**\r\n         * \r\n         * @param e \r\n         * @param g \r\n         */\r\n        processZoomWheel(e: WheelEvent, g: Globe): void;\r\n\r\n        /**\r\n         * zoom状态\r\n         */\r\n        _state_handler_zoom_: {\r\n            lastWheelTime: number,\r\n            lastWheelEvent: WheelEvent,\r\n            onceWheelCount: number,\r\n            delate: number,\r\n            active: boolean,\r\n            zooming: boolean,\r\n            zoomOrigin: IClientPoint,    //缩放屏幕中心\r\n            trackPadSuspect: number,\r\n            ensureTrackpad: boolean,\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.registerZoomHandlerHook = function (): void {\r\n    const g = this as Globe;\r\n    g._state_handler_zoom_ = {\r\n        lastWheelTime: 0,\r\n        lastWheelEvent: null,\r\n        onceWheelCount: 0,\r\n        delate: 0,\r\n        active: false,\r\n        zooming: false,\r\n        trackPadSuspect: 0,\r\n        ensureTrackpad: false,\r\n        zoomOrigin: { clientX: 0, clientY: 0 },\r\n    };\r\n    g.on('zoom', g.zoomMousewheelOrTouch);\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.releaseZoomHandlerEvents = function (): void {\r\n    const g = this as Globe;\r\n    g.off('zoom', g.zoomMousewheelOrTouch);\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.zoomMousewheelOrTouch = function (args: IDOMEventParam): void {\r\n    const g = this as Globe, e = args.domEvent;\r\n    preventDefault(e);\r\n    stopPropagation(e);\r\n    if (e.type === 'wheel' && !g._state_handler_zoom_.zooming) {\r\n        const n = now();\r\n        g._state_handler_zoom_.lastWheelTime = g._state_handler_zoom_.lastWheelTime || n;\r\n        if (n - g._state_handler_zoom_.lastWheelTime < 50)\r\n            g._state_handler_zoom_.onceWheelCount++;\r\n        else\r\n            g.processZoomWheel(e as WheelEvent, g);\r\n        //30ms检测一次，用户操作会有轻微延迟感\r\n        setTimeout(() => {\r\n            if (!g._state_handler_zoom_.zooming)\r\n                g.processZoomWheel(e as WheelEvent, g);\r\n        }, 30)\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.processZoomWheel = function (e: WheelEvent, g: Globe): void {\r\n    const currentPosition = getEventContainerPosition(e, g.Canvas);\r\n    const zoomEventParam: IZoomEventParam = {\r\n        domEvent: e,\r\n        currentPosition\r\n    };\r\n    if (!g._state_handler_zoom_.zooming) {\r\n        g._state_handler_zoom_.trackPadSuspect = 0;\r\n        g._state_handler_zoom_.ensureTrackpad = false;\r\n    }\r\n    //evet事件\r\n    let value = e.deltaMode === WheelEvent.DOM_DELTA_LINE ? e.deltaY * 60 : e.deltaY;\r\n    if (value % wheelZoomDelta !== 0) {\r\n        if (!g._state_handler_zoom_.ensureTrackpad) {\r\n            g._state_handler_zoom_.trackPadSuspect = Math.abs(value) < 60 ? g._state_handler_zoom_.trackPadSuspect + 1 : 0;\r\n            if (g._state_handler_zoom_.trackPadSuspect >= 2)\r\n                g._state_handler_zoom_.ensureTrackpad = true;\r\n        }\r\n        if (g._state_handler_zoom_.ensureTrackpad)\r\n            value *= 14;\r\n    }\r\n    //键盘\r\n    if (e.shiftKey && value)\r\n        value = value / 4;\r\n    g._state_handler_zoom_.lastWheelEvent = e;\r\n    g._state_handler_zoom_.delate -= value;\r\n    if (!g._state_handler_zoom_.zooming && g._state_handler_zoom_.delate)\r\n        g._state_handler_zoom_.zoomOrigin = currentPosition;\r\n    //传递处理后的value\r\n    zoomEventParam.value = value;\r\n    zoomEventParam.zoom = g._state_handler_zoom_.onceWheelCount;\r\n    //seamless\r\n    g.emit(ZOOM_EVENTS.wheel, zoomEventParam);\r\n}\r\n\r\nGlobe.registerHook(Globe.prototype.registerZoomHandlerHook);","import { Globe } from \"../Globe\";\r\n\r\nimport { Easing, Tween } from \"../../core/Tween\";\r\nimport { GeodeticCoordinate } from \"../../core/GeodeticCoordinate\";\r\n\r\ndeclare module './../Globe'{\r\n    interface Globe{\r\n        /**\r\n         * \r\n         * @param coord \r\n         * @param zoom \r\n         * @param duration \r\n         */\r\n        flyTo(coord:GeodeticCoordinate, zoom:number, duration:number):void\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.flyTo = function(coord:GeodeticCoordinate, zoom:number, duration:number):void{\r\n    const g = this as Globe, center = g.Origin.center.toGeodetic(), viewCenter = g._state_camera_.viewCenter;\r\n    //旋转的起点和终点\r\n    const p1 = coord.toGeodetic();\r\n    const camera = g._state_camera_.camera, target = g._state_camera_.camera.Target;\r\n    const total = camera.Position.len()-g.MaximumRadius-g.getMaximumCameraHeightByLevel(zoom);\r\n    g._state_handler_zoom_.zooming = true;\r\n    const cached = {f:g.rayTrackOnSphere(viewCenter), len:0};\r\n    //动画\r\n    new Tween()\r\n    .from({len:0, x:center.Longitude, y:center.Latitude})\r\n    .to({len:total, x:p1.Longitude, y:p1.Latitude})\r\n    .duration(duration)\r\n    .easingHandler(Easing.Quadratic.InOut)\r\n    .updateHandler((v:{len:number, x:number, y:number})=>{\r\n        //zoom\r\n        const eyeDirection = camera.Position.clone().sub(target).normalize();\r\n        const deltaDistance = v.len - cached.len;\r\n        const delta = eyeDirection.scale(deltaDistance);\r\n        camera.Position = camera.Position.clone().sub(delta);\r\n        cached.len = v.len;\r\n        //pan\r\n        const to = new GeodeticCoordinate(v.x, v.y);\r\n        const t = g.geographicToSpaceCoordinate(to).normalize();\r\n        g.panFromTo(t, cached.f);\r\n        cached.f = g.rayTrackOnSphere(viewCenter);\r\n    })\r\n    .completeHandler(()=>{\r\n        g.updateQuadtreeTileByDistanceError();\r\n        //飞行结束\r\n        g._state_handler_zoom_.zooming = false;\r\n        g._state_handler_zoom_.onceWheelCount = 0;\r\n        g._state_handler_zoom_.lastWheelTime = 0;\r\n    })\r\n    .start();\r\n}","import { Quat, Vec2, Vec3 } from 'kiwi.matrix';\r\n\r\nimport { Globe } from '../Globe';\r\n\r\nimport { IClientPoint, IPanEventParam, PAN_EVENTS } from '../../core/Format';\r\n\r\n/**\r\n * \r\n */\r\ndeclare module './../Globe' {\r\n    interface Globe {\r\n        /**\r\n         * \r\n         */\r\n        registerCameraPan(): void;\r\n\r\n        /**\r\n         * \r\n         */\r\n        releaseCameraPan(): void;\r\n\r\n        /**\r\n         * \r\n         * @param args \r\n         */\r\n        onPanStart(args: IPanEventParam): void;\r\n\r\n        /**\r\n         * \r\n         * @param args \r\n         */\r\n        onPaning(args: IPanEventParam): void;\r\n\r\n        /**\r\n         * \r\n         * @param args \r\n         */\r\n        onPanend(args: IPanEventParam): void;\r\n\r\n        /**\r\n         * \r\n         * @param from \r\n         * @param to \r\n         */\r\n        panFromTo(from: Vec3, to: Vec3): void;\r\n\r\n        /**\r\n         * \r\n         */\r\n        _state_pan_: {\r\n            paning: boolean;\r\n            m_lastRotateGlobeFromVector: Vec3;\r\n            m_lastRotateGlobeAxis: Vec3;\r\n            m_lastRotateGlobeAngle: number;\r\n            m_lastPostition: IClientPoint; //记录鼠标的 clientX, clientY\r\n            m_rotateGlobeQuaternion: Quat;\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.registerCameraPan = function ():void {\r\n    const g = this as Globe;\r\n    g._state_pan_ = {\r\n        paning:false,\r\n        m_lastRotateGlobeFromVector:new Vec3(),\r\n        m_lastRotateGlobeAxis:new Vec3(),\r\n        m_lastRotateGlobeAngle:0,\r\n        m_lastPostition:{clientX:0, clientY:0},\r\n        m_rotateGlobeQuaternion:new Quat(),\r\n    }\r\n    //注册事件\r\n    g.on(PAN_EVENTS.panstart, g.onPanStart);\r\n    g.on(PAN_EVENTS.paning, g.onPaning);\r\n    g.on(PAN_EVENTS.panend, g.onPanend);\r\n}\r\n\r\n/**\r\n * fm, 起始：鼠标与中心连线，与地球表明相交的点的空间坐标Vec3\r\n * to, 终止：鼠标与中心连线，与地球表明相交的点的空间坐标Vec3\r\n */\r\nGlobe.prototype.panFromTo = function (fm: Vec3, to: Vec3): void {\r\n    //空的起点和终点取消操作\r\n    if(fm==null||to==null) return;\r\n    const g = this as Globe;\r\n    // Assign the new animation start time.\r\n    g._state_pan_.m_lastRotateGlobeFromVector = fm.clone();\r\n    g._state_pan_.m_lastRotateGlobeAxis = fm.clone().cross(to).normalize();\r\n    g._state_pan_.m_lastRotateGlobeAngle = fm.angle(to);\r\n    //旋转四元数\r\n    g._state_pan_.m_rotateGlobeQuaternion = new Quat().setAxisAngle(g._state_pan_.m_lastRotateGlobeAxis, -g._state_pan_.m_lastRotateGlobeAngle);\r\n    const offset = g._state_camera_.camera.Position.clone().sub(g._state_camera_.target);\r\n    offset.applyQuat(g._state_pan_.m_rotateGlobeQuaternion);\r\n    g._state_camera_.camera.Up.applyQuat(g._state_pan_.m_rotateGlobeQuaternion);\r\n    //更新相机位置\r\n    g._state_camera_.camera.Position = offset.add(g._state_camera_.target)\r\n\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.onPanStart = function (panParam: IPanEventParam): void {\r\n    const g = this as Globe, cp = panParam.currentPosition;\r\n    g._state_pan_.paning = true;\r\n    g._state_pan_.m_lastPostition = {\r\n        clientX:cp.clientX,\r\n        clientY:cp.clientY,\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.onPaning = function (panParam: IPanEventParam): void {\r\n    const g = this as Globe, cp = panParam.currentPosition;\r\n    const tc = {\r\n        clientX: cp.clientX,\r\n        clientY: cp.clientY,\r\n    };\r\n    const fm = g.rayTrackOnSphere(g._state_pan_.m_lastPostition);\r\n    const to = g.rayTrackOnSphere(tc);\r\n    g.panFromTo(fm, to);\r\n    g._state_pan_.m_lastPostition={\r\n        clientX:tc.clientX,\r\n        clientY:tc.clientY,\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.onPanend = function (args: IPanEventParam): void {\r\n    const g = this as Globe;\r\n    g._state_pan_.paning = false;\r\n    g.updateQuadtreeTileByDistanceError();\r\n}\r\n\r\n//\r\nGlobe.registerHook(Globe.prototype.registerCameraPan);","/**\r\n * 限定输入的值是否在值域内\r\n * @param v \r\n * @param min \r\n * @param max \r\n */\r\nconst clamp = (v: number, min: number, max: number): number => {\r\n    return v < min ? min : v > max ? max : v;\r\n}\r\n\r\nexport { clamp }","import { Globe } from '../Globe';\r\n\r\nimport { clamp } from '../../util/clamp';\r\nimport { Tween } from '../../core/Tween';\r\nimport { IZoomEventParam, ZOOM_EVENTS } from '../../core/Format';\r\n\r\ndeclare module './../Globe' {\r\n  interface Globe {\r\n    /**\r\n     * \r\n     */\r\n    registerCameraZoom(): void;\r\n\r\n    /**\r\n     * \r\n     * @param zoomEventParam \r\n     */\r\n    onWheeling(zoomEventParam: IZoomEventParam): void;\r\n\r\n    /**\r\n     * \r\n     */\r\n    onWheelEnd(): void;\r\n  }\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.registerCameraZoom = function (): void {\r\n  const g = this as Globe;\r\n  g.on(ZOOM_EVENTS.wheel, g.onWheeling);\r\n  g.on(ZOOM_EVENTS.wheelend, g.onWheelEnd);\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.onWheeling = function (zoomEventParam: IZoomEventParam): void {\r\n  const g = this as Globe, e = zoomEventParam.domEvent as WheelEvent, currentPosition = zoomEventParam.currentPosition, value = zoomEventParam.value;\r\n  const fr = g.rayTrackOnSphere(currentPosition);\r\n  if (fr === null) return; //缩放点不在地球上（无焦点）\r\n  const lv = clamp(value > 0 ? g.Zoom - zoomEventParam.zoom : g.Zoom + zoomEventParam.zoom, g.Origin.zoomMin, g.Origin.zoomMax);\r\n  const camera = g._state_camera_.camera, target = g._state_camera_.target;\r\n  //\r\n  const total = camera.Position.len() - g.MaximumRadius - g.getMaximumCameraHeightByLevel(lv);\r\n  g._state_handler_zoom_.zooming = true;\r\n  const cached = { fr: fr, len: 0 };\r\n  //动画\r\n  new Tween().from({ len: 0 }).to({ len: total }).duration(zoomEventParam.zoom * 120)\r\n    .updateHandler((v: { len: number }) => {\r\n      const eyeDirection = camera.Position.clone().sub(target).normalize();\r\n      const deltaDistance = v.len - cached.len;\r\n      const delta = eyeDirection.scale(deltaDistance);\r\n      camera.Position = camera.Position.clone().sub(delta);\r\n      const to = g.rayTrackOnSphere(currentPosition);\r\n      g.panFromTo(cached.fr, to);\r\n      cached.len = v.len;\r\n    })\r\n    .completeHandler(() => {\r\n      g.emit(ZOOM_EVENTS.wheelend);\r\n    })\r\n    .start();\r\n}\r\n\r\n/**\r\n * \r\n */\r\nGlobe.prototype.onWheelEnd = function (): void {\r\n  const g = this as Globe;\r\n  g.updateQuadtreeTileByDistanceError();\r\n  //缩放结束\r\n  g._state_handler_zoom_.zooming = false;\r\n  g._state_handler_zoom_.onceWheelCount = 0;\r\n  g._state_handler_zoom_.lastWheelTime = 0;\r\n}\r\n\r\n//注册缩放事件\r\nGlobe.registerHook(Globe.prototype.registerCameraZoom);","import { Rectangle } from \"./../core/Rectangle\";\r\nimport { PSEUDOMERCATOR } from \"../core/Ellipsoid\";\r\nimport { GeodeticCoordinate } from \"./../core/GeodeticCoordinate\";\r\n\r\n//默认打断结点数\r\nconst VERTEXCOUNT = 8;\r\n\r\n/**\r\n * 顶点坐标\r\n * @param boundary \r\n * @param lerp \r\n * @returns \r\n */\r\nconst llpVertex = (boundary: Rectangle, lerp: number = VERTEXCOUNT): number[][] => {\r\n    const vertex: number[][] = [];\r\n    const factor = 1 / lerp, rangeX = boundary.Width, rangeY = boundary.Height, start = boundary.Southwest;\r\n    for (let x = 0; x <= lerp; x++)\r\n        for (let y = 0; y <= lerp; y++) {\r\n            const c0 = start.Longitude + x * factor * rangeX;\r\n            const c1 = start.Latitude + y * factor * rangeY;\r\n            //!bug 不能直接使用线性加减得到方框顶点\r\n            const g1 = new GeodeticCoordinate(c0, c1, 0);\r\n            const spaceCoord = PSEUDOMERCATOR.geographicToSpace(g1);\r\n            vertex.push(spaceCoord.value);\r\n        }\r\n    return vertex;\r\n};\r\n\r\n/**\r\n * 纹理坐标（uv)\r\n * @param lerp \r\n * @returns \r\n */\r\nconst llpTexCoord = (lerp: number = VERTEXCOUNT): number[][] => {\r\n    const texCoord: number[][] = [];\r\n    const factor = 1 / lerp;\r\n    for (let x = 0; x <= lerp; x++)\r\n        for (let y = 0; y <= lerp; y++)\r\n            texCoord.push([x * factor, 1 - y * factor]);\r\n    return texCoord;\r\n};\r\n\r\n/**\r\n * f+1    s+1\r\n * |--------|\r\n * |        | \r\n * |--------|\r\n * f        s\r\n * @param lerp \r\n * @returns \r\n */\r\nconst llpElement = (lerp: number = VERTEXCOUNT): number[][] => {\r\n    const elements: number[][] = [];\r\n    const stride = lerp + 1;\r\n    for (let x = 0; x < lerp; x++)\r\n        for (let y = 0; y < lerp; y++) {\r\n            const first = x * stride + y;\r\n            const second = first + stride;\r\n            elements.push([first, second, first + 1]);\r\n            elements.push([first + 1, second, second + 1]);\r\n        }\r\n    return elements;\r\n};\r\n\r\nexport {\r\n    llpVertex,\r\n    llpElement,\r\n    llpTexCoord\r\n}","/**\r\n * 获取远程图片地址，生成RGBA格式uint8Array\r\n * @param uri \r\n * @param key \r\n * @returns \r\n */\r\nconst rgba = (uri: string, key: string = ``): Promise<{ buf: Uint8Array, w: number, h: number, c: number, key: string }> => {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(uri).then((res0: Response) => res0.blob()).then((blob: Blob) => createImageBitmap(blob))\r\n            .then((bitmap: ImageBitmap) => {\r\n                const w = bitmap.width, h = bitmap.height, c = 4;\r\n                const CANVAS = document.createElement('canvas');\r\n                CANVAS.width = devicePixelRatio * w;\r\n                CANVAS.height = devicePixelRatio * h;\r\n                CANVAS.style.width = `${w}px`;\r\n                CANVAS.style.height = `${h}px`;\r\n                const CTX = CANVAS.getContext('2d');\r\n                CTX.drawImage(bitmap, 0, 0);\r\n                const uc8arr = CTX.getImageData(0, 0, w, h).data;\r\n                const buf = new Uint8Array(uc8arr);\r\n                resolve({ buf, w, h, c, key });\r\n            })\r\n            .catch(reason => {\r\n                reject(reason);\r\n            });\r\n    });\r\n}\r\n\r\nexport { rgba }","import { IRenderer } from './IRenderer';\r\nimport { EventEmitter } from '../core/EventEmitter';\r\n\r\n\r\n/**\r\n * 可渲染对象通用方法\r\n * }{debug, 是否存在一种类型限定方法：\r\n * 例如 rendererClass: ClassDecorator where T: IRenderer\r\n * 每个可渲染的对象理论上都需要一个特定的渲染器，例如:\r\n * -topoLayer，可能需要特定的topoRenderer\r\n * -canvasLayer，需要特定的renderer渲染器\r\n */\r\nclass Renderable extends EventEmitter {\r\n    /**\r\n     * 渲染器hashmap \r\n     */\r\n    static renderers: Map<string, { new(...args: any[]): IRenderer }> = new Map();\r\n\r\n    /**\r\n     * 注册渲染器到管理端\r\n     * @param name \r\n     * @param clazz \r\n     */\r\n    static registerRenderer = (name: string, clazz: { new(...args: any[]): IRenderer }) => {\r\n        Renderable.renderers.set(name, clazz);\r\n    }\r\n\r\n    /**\r\n     * 获取可渲染对象的渲染器\r\n     * @param name \r\n     */\r\n    protected getRegisterRender = (name: string): { new(...args: any[]): IRenderer } => {\r\n        const clazz = Renderable.renderers.get(name);\r\n        return clazz;\r\n    }\r\n}\r\n\r\nexport { Renderable }\r\n","import { Globe } from \"../globe/Globe\";\r\nimport { IRendererOS } from \"../render/IRendererOS\";\r\nimport { Renderable } from \"../render/Renderable\";\r\n\r\ninterface TSketchpadDataSchema {\r\n\r\n}\r\n\r\n/**\r\n * https://github.com/pixijs/pixi.js/blob/dev/packages/display/src/Container.ts\r\n * \r\n * 绘图板作为渲染容器，汇聚各个加入到了Globe中的对象\r\n * 作为地理可视化库，\r\n * -有且仅支持解析地理矢量要素对象\r\n * -所有待绘制的对象都是一个Sketchpad的子集\r\n * \r\n * const g = new Globe();\r\n * const skpd = new Sketchpad();\r\n * g.add(skpd);\r\n * \r\n */\r\nclass Sketchpad<T extends TSketchpadDataSchema> extends Renderable {\r\n\r\n    /** \r\n     * globe \r\n     */\r\n    protected g: Globe;\r\n\r\n    /**\r\n     * 离屏渲染对象 \r\n     */\r\n    private renderer: IRendererOS<T>;\r\n\r\n    /**\r\n     * globe object \r\n     */\r\n    public get Globe() {\r\n        return this.g;\r\n    }\r\n\r\n    /**\r\n     * geo-sketchpad offscreen-rendering\r\n     */\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    registerData?(): void;\r\n\r\n    /** \r\n     * Sketchpad 总事件注册，其他扩展Sketchpad的同类时间不再另外处理 \r\n     */\r\n    registerEvents?(): void;\r\n\r\n    /*\r\n     * 注销事件 \r\n     */\r\n    removeEvents?(): void;\r\n\r\n    /**\r\n     * 构造渲染对象\r\n     * @example sptachpad.attach(globe);\r\n     * @param globe \r\n     */\r\n    public attach(globe: Globe): void {\r\n        this.g = globe;\r\n        const clazz = this.getRegisterRender(this.constructor.name);\r\n        this.renderer = new clazz(this, globe.getContext3D()) as IRendererOS<T>;\r\n        this.registerData?.call(this);\r\n        this.registerEvents?.call(this);\r\n    }\r\n\r\n    /** \r\n     * 渲染器 \r\n     */\r\n    public get Renderer(): IRendererOS<T> {\r\n        return this.renderer;\r\n    }\r\n}\r\n\r\nexport {\r\n    TSketchpadDataSchema,\r\n    Sketchpad\r\n}","import { getMutableClone } from \"typescript\";\r\nimport { QuadtreeTile, QuadtreeTileSchema } from \"../..\";\r\nimport { llpVertex } from \"../../util/llp\";\r\nimport { rgba } from \"../../util/rgba\";\r\nimport { Sketchpad, TSketchpadDataSchema } from \"../Sektchpad\";\r\n\r\ninterface ITileLayerDataSchema extends TSketchpadDataSchema {\r\n    key: string;\r\n    uri?: string;\r\n    width?: number;\r\n    height?: number;\r\n    channel?: number;\r\n    vertices?: number[][];\r\n    textureBuffer?: Uint8Array;\r\n}\r\n\r\n/**\r\n * \r\n */\r\nclass TileLayer extends Sketchpad<ITileLayerDataSchema>{\r\n    /**\r\n     * \r\n     */\r\n    protected CACHE: Map<string, { uri: string, vertices: number[][] }> = new Map();\r\n\r\n    /**\r\n     * \r\n     */\r\n    registerEvents = () => {\r\n        this.g.on('tileupdated', this.prepareData, this);\r\n        this.g.on('worker', this.prepareWorker, this);\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    protected queue: ITileLayerDataSchema[] = [];\r\n\r\n    /**\r\n     * \r\n     * @param tiles \r\n     */\r\n    private prepareData = (tiles: QuadtreeTile[]) => {\r\n        this.queue = [];\r\n        const CACHE = this.CACHE;\r\n        //更新\r\n        tiles?.forEach((t: QuadtreeTile) => {\r\n            const { X: x, Y: y, Level: level, Boundary: boundary } = t;\r\n            const key = `${level}-${x}-${y}`;\r\n            if (!CACHE.has(key)) {\r\n                // const uri = `https://mt0.google.cn/maps/vt?lyrs=y&hl=zh-CN&gl=CN&&x=${x}&y=${y}&z=${level}&scale=2`;\r\n                const uri = `https://server.arcgisonline.com/arcgis/rest/services/NatGeo_World_Map/MapServer/tile/${level}/${y}/${x}`;\r\n                const vertices = llpVertex(boundary);\r\n                const q: ITileLayerDataSchema = {\r\n                    key,\r\n                    uri,\r\n                    vertices\r\n                };\r\n                this.queue.unshift(q);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private prepareWorker = () => {\r\n        const CACHE = this.CACHE, QUEUE = this.queue;\r\n        if (QUEUE.length > 0 && !CACHE.has(QUEUE[0].key)) {\r\n            const q = QUEUE.shift();\r\n            const { uri, vertices, key } = q;\r\n            CACHE.set(key, { uri, vertices });\r\n            rgba(uri, key).then(v => {\r\n                const schema: ITileLayerDataSchema = {\r\n                    key: v.key,\r\n                    width: v.w,\r\n                    height: v.h,\r\n                    channel: v.c,\r\n                    vertices: vertices,\r\n                    textureBuffer: v.buf\r\n                };\r\n                this.Renderer.prepare(schema);\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport {\r\n    ITileLayerDataSchema,\r\n    TileLayer,\r\n}","const hypot = (x: number, y: number, z: number): number => {\r\n    const num = Math.pow(x, 2) + Math.pow(y, 2) + Math.pow(z, 2);\r\n    return Math.sqrt(num);\r\n}\r\n\r\nconst weight = (s: number, r: number, a: number): number => {\r\n    return Math.atan2(r, s - a);\r\n}\r\n\r\nconst mulAdd = (dest: number[], s: number, x: number, y: number, z: number): void => {\r\n    dest[0] += s * x;\r\n    dest[1] += s * y;\r\n    dest[2] += s * z;\r\n}\r\n\r\n/**\r\n * https://github.com/mikolalysenko/angle-normals/blob/master/angle-normals.js\r\n * @param elements \r\n * @param positions \r\n * @returns \r\n */\r\nconst createNormals = (elements: number[][], positions: number[][]): number[][] => {\r\n    const numVerts = positions.length;\r\n    const numCells = elements.length;\r\n    //Allocate normal array\r\n    const normals = new Array(numVerts)\r\n    for (var i = 0; i < numVerts; ++i) {\r\n        normals[i] = [0, 0, 0];\r\n    }\r\n    //Scan cells, and\r\n    for (var i = 0; i < numCells; ++i) {\r\n        const cell = elements[i];\r\n        const a = positions[cell[0]];\r\n        const b = positions[cell[1]];\r\n        const c = positions[cell[2]];\r\n        //\r\n        const abx = a[0] - b[0];\r\n        const aby = a[1] - b[1];\r\n        const abz = a[2] - b[2];\r\n        const ab = hypot(abx, aby, abz);\r\n        //\r\n        const bcx = b[0] - c[0];\r\n        const bcy = b[1] - c[1];\r\n        const bcz = b[2] - c[2];\r\n        const bc = hypot(bcx, bcy, bcz);\r\n        //\r\n        const cax = c[0] - a[0];\r\n        const cay = c[1] - a[1];\r\n        const caz = c[2] - a[2];\r\n        const ca = hypot(cax, cay, caz);\r\n        if (Math.min(ab, bc, ca) < 1e-6) continue;\r\n        const s = 0.5 * (ab + bc + ca);\r\n        const r = Math.sqrt((s - ab) * (s - bc) * (s - ca) / s);\r\n        let nx = aby * bcz - abz * bcy;\r\n        let ny = abz * bcx - abx * bcz;\r\n        let nz = abx * bcy - aby * bcx;\r\n        let nl = hypot(nx, ny, nz);\r\n        nx /= nl;\r\n        ny /= nl;\r\n        nz /= nl;\r\n        mulAdd(normals[cell[0]], weight(s, r, bc), nx, ny, nz);\r\n        mulAdd(normals[cell[1]], weight(s, r, ca), nx, ny, nz);\r\n        mulAdd(normals[cell[2]], weight(s, r, ab), nx, ny, nz);\r\n    }\r\n    //Normalize all the normals\r\n    for (let i = 0; i < numVerts; ++i) {\r\n        const n = normals[i];\r\n        const l = Math.sqrt(Math.pow(n[0], 2) + Math.pow(n[1], 2) + Math.pow(n[2], 2));\r\n        if (l < 1e-8) {\r\n            n[0] = 1;\r\n            n[1] = 0;\r\n            n[2] = 0;\r\n            continue;\r\n        }\r\n        n[0] /= l;\r\n        n[1] /= l;\r\n        n[2] /= l;\r\n    }\r\n    return normals;\r\n}\r\n\r\nexport { createNormals }","import { PipeGL } from \"pipegl\";\r\nimport { Globe } from \"..\";\r\nimport { PerspectiveCamera } from \"../camera/PerspectiveCamera\";\r\nimport { IRendererOS } from \"../render/IRendererOS\";\r\nimport { Sketchpad, TSketchpadDataSchema } from \"./Sektchpad\";\r\n\r\n\r\n/**\r\n * renderer implemention\r\n */\r\nclass SketchpadRenderer<T extends TSketchpadDataSchema> implements IRendererOS<T> {\r\n\r\n    protected skpd:Sketchpad<T>;\r\n\r\n    private canvas:HTMLCanvasElement;\r\n\r\n    protected ctx3d:PipeGL;\r\n\r\n    protected g:Globe;\r\n\r\n    constructor(skpd:Sketchpad<T>, ctx3d:PipeGL){\r\n        this.skpd = skpd;\r\n        this.ctx3d = ctx3d;\r\n        this.g = skpd.Globe;\r\n    }\r\n\r\n    prepare?(arg: T): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    sort?<T0>(arg: T0): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    getCanvasImage?(): ImageBitmap {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    render(framestamp: number, camera: PerspectiveCamera): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\n//注册渲染方法\r\nSketchpad.registerRenderer(Sketchpad.name, SketchpadRenderer);\r\n\r\nexport { SketchpadRenderer }\r\n","import { GBuffer, GTexture, IPipeCommand, PipeGL, Props, TAttribute, TProps, TUniform } from \"pipegl\";\r\n\r\nimport { createNormals } from \"../../util/normal\";\r\nimport { SketchpadRenderer } from \"../SketchpadRenderer\";\r\nimport { PerspectiveCamera } from \"../../camera/PerspectiveCamera\";\r\nimport { llpElement, llpTexCoord } from \"../../util/llp\";\r\nimport { ITileLayerDataSchema, TileLayer } from \"./TileLayer\";\r\n\r\ninterface IProps extends TProps {\r\n    position: GBuffer;\r\n    normal: GBuffer;\r\n    texture: GTexture;\r\n    viewProjection: number[];\r\n}\r\n\r\ninterface Attribute extends TAttribute {\r\n    position: Props<IProps>;\r\n    normal: Props<IProps>;\r\n    texCoord: number[][];\r\n}\r\n\r\ninterface Uniform extends TUniform {\r\n    viewPorjection: Props<IProps>;\r\n    texture: Props<IProps>;\r\n}\r\n\r\ninterface ITileCacheSchema {\r\n    vBuf: GBuffer;       //顶点\r\n    nBuf: GBuffer;       //法线\r\n    texture: GTexture;   //纹理\r\n}\r\n\r\nclass TileLayerRenderer extends SketchpadRenderer<ITileLayerDataSchema>{\r\n\r\n    private CACHE: Map<string, ITileCacheSchema> = new Map();\r\n\r\n    private batch: Map<string, boolean> = new Map();\r\n\r\n    private draw0: IPipeCommand;\r\n\r\n    private elements: number[][];\r\n\r\n    constructor(qtLayer: TileLayer, ctx3d: PipeGL) {\r\n        super(qtLayer, ctx3d);\r\n        this.elements = llpElement();\r\n        this.draw0 = ctx3d.compile<Attribute, Uniform>({\r\n\r\n            vert: `precision mediump float;\r\n\r\n            attribute vec3 position;\r\n            attribute vec2 texCoord;\r\n            attribute vec3 normal;\r\n\r\n            uniform mat4 viewPorjection;\r\n\r\n            varying vec2 vTexCoord;\r\n            varying vec3 vPosition;\r\n            varying vec3 vNormal;\r\n\r\n            void main(){\r\n                vTexCoord = texCoord;\r\n                vPosition = position;\r\n                vNormal = normal;\r\n                gl_Position = viewPorjection*vec4(position, 1.0);\r\n            }`,\r\n\r\n            frag: `precision mediump float;\r\n\r\n            uniform sampler2D texture;\r\n\r\n            const vec3 lightPostion = vec3(0.0, 127562074.0, 127562074.0);\r\n            const vec3 lightColor = vec3(1.0, 1.0, 1.0);\r\n\r\n            varying vec2 vTexCoord;\r\n            varying vec3 vPosition;\r\n            varying vec3 vNormal;\r\n\r\n            void main(){\r\n                //计算漫反射结果\r\n                vec3 lightDir = normalize(lightPostion - vPosition);\r\n                float diff = max(dot(vNormal, lightDir), 0.0);\r\n                gl_FragColor = vec4(diff * lightColor * vec3(texture2D(texture,vTexCoord)), 1.0);\r\n            }`,\r\n\r\n            elements: this.elements,\r\n\r\n            attributes: {\r\n                position: new Props<IProps>('position'),\r\n                normal: new Props<IProps>('normal'),\r\n                texCoord: llpTexCoord(),\r\n            },\r\n\r\n            uniforms: {\r\n                viewPorjection: new Props<IProps>('viewProjection'),\r\n                texture: new Props<IProps>('texture'),\r\n            },\r\n\r\n            primitive: 'TRIANGLES',\r\n\r\n            status: {\r\n                DEPTH_TEST: true,\r\n                CULL_FACE: true\r\n            }\r\n        })\r\n    }\r\n\r\n    public prepare = (tileData: ITileLayerDataSchema): void => {\r\n        const CACHE = this.CACHE;\r\n        const key = tileData.key;\r\n        this.batch.set(key, true);\r\n        if (!this.CACHE.has(key)) {\r\n            const vBuf = this.ctx3d.buffer(tileData.vertices);\r\n            const nBuf = this.ctx3d.buffer(createNormals(this.elements, tileData.vertices));\r\n            const texture = this.ctx3d.texture2D(tileData.textureBuffer, tileData.width, tileData.height, tileData.channel);\r\n            const schema: ITileCacheSchema = { vBuf, nBuf, texture };\r\n            CACHE.set(key, schema);\r\n        }\r\n    }\r\n\r\n    public render = (framestamp: number, camera: PerspectiveCamera): void => {\r\n        const props: IProps[] = [];\r\n        //batch准备\r\n        this.batch.forEach((v, k) => {\r\n            const schema = this.CACHE.get(k);\r\n            if (schema) {\r\n                const prop: IProps = {\r\n                    position: schema.vBuf,\r\n                    normal: schema.nBuf,\r\n                    texture: schema.texture,\r\n                    viewProjection: camera.ViewProjectionMatrix.value\r\n                }\r\n                props.push(prop);\r\n            }\r\n        });\r\n        //draw\r\n        this.draw0.batch<IProps>(props);\r\n    }\r\n}\r\n\r\nTileLayer.registerRenderer(TileLayer.name, TileLayerRenderer);\r\n\r\nexport { TileLayerRenderer }","//Globe\r\nexport { Globe } from './globe/Globe';\r\n//expand\r\nimport './globe/Globe.Camera';\r\nimport './globe/Globe.Handler';\r\nimport './globe/Globe.Quadtree';\r\nimport './globe/Globe.Renderer';\r\nimport './globe/handler/Globe.Handler.Pan';\r\nimport './globe/handler/Globe.Handler.Zoom';\r\nimport './globe/camera/Globe.Camera.FlyTo';\r\nimport './globe/camera/Globe.Camera.Pan';\r\nimport './globe/camera/Globe.Camera.Zoom';\r\n//\r\nexport { TileLayer } from './sketchpad/layer/TileLayer';\r\nimport './sketchpad/layer/TileLayerRenderer'\r\n//utils\r\nexport { clamp } from './util/clamp';\r\nexport { isNode } from './util/isNode';\r\nexport { split } from './util/split';\r\n//core\r\nexport { Ray } from './core/Ray';\r\nexport { GeodeticCoordinate } from './core/GeodeticCoordinate';\r\nexport { WebMercatorProjection, Projection } from './core/Projection';\r\nexport { Rectangle } from './core/Rectangle';\r\nexport { QuadtreeTile } from './core/QuadtreeTile';\r\nexport { QuadtreeTileSchema } from './core/QuadtreeTileSchema';","\r\nimport { GeodeticCoordinate, Globe, TileLayer } from '../src/index';\r\n\r\nconst map = new Globe({\r\n    width: window.innerWidth - 18,\r\n    height: window.innerHeight - 24,\r\n    zoom: 3,\r\n    canvas: \"mapCanvas\",\r\n    coordinate: new GeodeticCoordinate(114.2344412, 33.23313241234342, 10000)\r\n});\r\n\r\n\r\nconst layer = new TileLayer();\r\nmap.add(layer);\r\n\r\nsetTimeout(() => {\r\n    map.flyTo(new GeodeticCoordinate(114, 30.5), 10, 1000);\r\n}, 1000);","var OVERLAY_ID = '__parcel__error__overlay__';\n\nvar OldModule = module.bundle.Module;\n\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData,\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n\n  module.bundle.hotData = null;\n}\n\nmodule.bundle.Module = Module;\nvar checkedAssets, assetsToAccept;\n\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = process.env.HMR_HOSTNAME || location.hostname;\n  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + ':' + process.env.HMR_PORT + '/');\n  ws.onmessage = function(event) {\n    checkedAssets = {};\n    assetsToAccept = [];\n\n    var data = JSON.parse(event.data);\n\n    if (data.type === 'update') {\n      var handled = false;\n      data.assets.forEach(function(asset) {\n        if (!asset.isNew) {\n          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);\n          if (didAccept) {\n            handled = true;\n          }\n        }\n      });\n\n      // Enable HMR for CSS by default.\n      handled = handled || data.assets.every(function(asset) {\n        return asset.type === 'css' && asset.generated.js;\n      });\n\n      if (handled) {\n        console.clear();\n\n        data.assets.forEach(function (asset) {\n          hmrApply(global.parcelRequire, asset);\n        });\n\n        assetsToAccept.forEach(function (v) {\n          hmrAcceptRun(v[0], v[1]);\n        });\n      } else {\n        window.location.reload();\n      }\n    }\n\n    if (data.type === 'reload') {\n      ws.close();\n      ws.onclose = function () {\n        location.reload();\n      }\n    }\n\n    if (data.type === 'error-resolved') {\n      console.log('[parcel] ✨ Error resolved');\n\n      removeErrorOverlay();\n    }\n\n    if (data.type === 'error') {\n      console.error('[parcel] 🚨  ' + data.error.message + '\\n' + data.error.stack);\n\n      removeErrorOverlay();\n\n      var overlay = createErrorOverlay(data);\n      document.body.appendChild(overlay);\n    }\n  };\n}\n\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n  }\n}\n\nfunction createErrorOverlay(data) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n\n  // html encode message and stack trace\n  var message = document.createElement('div');\n  var stackTrace = document.createElement('pre');\n  message.innerText = data.error.message;\n  stackTrace.innerText = data.error.stack;\n\n  overlay.innerHTML = (\n    '<div style=\"background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;\">' +\n      '<span style=\"background: red; padding: 2px 4px; border-radius: 2px;\">ERROR</span>' +\n      '<span style=\"top: 2px; margin-left: 5px; position: relative;\">🚨</span>' +\n      '<div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">' + message.innerHTML + '</div>' +\n      '<pre>' + stackTrace.innerHTML + '</pre>' +\n    '</div>'\n  );\n\n  return overlay;\n\n}\n\nfunction getParents(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n\n  var parents = [];\n  var k, d, dep;\n\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || (Array.isArray(dep) && dep[dep.length - 1] === id)) {\n        parents.push(k);\n      }\n    }\n  }\n\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n\n  return parents;\n}\n\nfunction hmrApply(bundle, asset) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (modules[asset.id] || !bundle.parent) {\n    var fn = new Function('require', 'module', 'exports', asset.generated.js);\n    asset.isNew = !modules[asset.id];\n    modules[asset.id] = [fn, asset.deps];\n  } else if (bundle.parent) {\n    hmrApply(bundle.parent, asset);\n  }\n}\n\nfunction hmrAcceptCheck(bundle, id) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n\n  if (!modules[id] && bundle.parent) {\n    return hmrAcceptCheck(bundle.parent, id);\n  }\n\n  if (checkedAssets[id]) {\n    return;\n  }\n  checkedAssets[id] = true;\n\n  var cached = bundle.cache[id];\n\n  assetsToAccept.push([bundle, id]);\n\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    return true;\n  }\n\n  return getParents(global.parcelRequire, id).some(function (id) {\n    return hmrAcceptCheck(global.parcelRequire, id)\n  });\n}\n\nfunction hmrAcceptRun(bundle, id) {\n  var cached = bundle.cache[id];\n  bundle.hotData = {};\n  if (cached) {\n    cached.hot.data = bundle.hotData;\n  }\n\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData);\n    });\n  }\n\n  delete bundle.cache[id];\n  bundle(id);\n\n  cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      cb();\n    });\n    return true;\n  }\n}\n"]}